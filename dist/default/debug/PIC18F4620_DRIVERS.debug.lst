

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 08 03:59:31 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Generated 23/03/2023 GMT
    37                           ; 
    38                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4620 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     
    71                           	psect	idataCOMRAM
    72   0019D0                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for _port_registers
    76   0019D0  80                 	db	128
    77   0019D1  0F                 	db	15
    78   0019D2  81                 	db	129
    79   0019D3  0F                 	db	15
    80   0019D4  82                 	db	130
    81   0019D5  0F                 	db	15
    82   0019D6  83                 	db	131
    83   0019D7  0F                 	db	15
    84   0019D8  84                 	db	132
    85   0019D9  0F                 	db	15
    86                           
    87                           ;initializer for _lat_registers
    88   0019DA  89                 	db	137
    89   0019DB  0F                 	db	15
    90   0019DC  8A                 	db	138
    91   0019DD  0F                 	db	15
    92   0019DE  8B                 	db	139
    93   0019DF  0F                 	db	15
    94   0019E0  8C                 	db	140
    95   0019E1  0F                 	db	15
    96   0019E2  8D                 	db	141
    97   0019E3  0F                 	db	15
    98                           
    99                           ;initializer for _tris_registers
   100   0019E4  92                 	db	146
   101   0019E5  0F                 	db	15
   102   0019E6  93                 	db	147
   103   0019E7  0F                 	db	15
   104   0019E8  94                 	db	148
   105   0019E9  0F                 	db	15
   106   0019EA  95                 	db	149
   107   0019EB  0F                 	db	15
   108   0019EC  96                 	db	150
   109   0019ED  0F                 	db	15
   110                           
   111                           ;initializer for _lcd_2
   112   0019EE  32                 	db	50
   113   0019EF  3A                 	db	58
   114   0019F0  03                 	db	3
   115   0019F1  0B                 	db	11
   116   0019F2  13                 	db	19
   117   0019F3  1B                 	db	27
   118   0019F4  23                 	db	35
   119   0019F5  2B                 	db	43
   120   0019F6  33                 	db	51
   121   0019F7  3B                 	db	59
   122                           
   123                           ;initializer for _lcd_1
   124   0019F8  02                 	db	2
   125   0019F9  0A                 	db	10
   126   0019FA  12                 	db	18
   127   0019FB  1A                 	db	26
   128   0019FC  22                 	db	34
   129   0019FD  2A                 	db	42
   130                           
   131                           	psect	smallconst
   132   001000                     __psmallconst:
   133                           	callstack 0
   134   001000  00                 	db	0
   135   001001                     _btn_values:
   136                           	callstack 0
   137   001001  37                 	db	55
   138   001002  38                 	db	56
   139   001003  39                 	db	57
   140   001004  2F                 	db	47
   141   001005  34                 	db	52
   142   001006  35                 	db	53
   143   001007  36                 	db	54
   144   001008  2A                 	db	42
   145   001009  31                 	db	49
   146   00100A  32                 	db	50
   147   00100B  33                 	db	51
   148   00100C  2D                 	db	45
   149   00100D  23                 	db	35
   150   00100E  38                 	db	56
   151   00100F  3D                 	db	61
   152   001010  2B                 	db	43
   153   001011                     __end_of_btn_values:
   154                           	callstack 0
   155   001011                     _customChar:
   156                           	callstack 0
   157   001011  0A                 	db	10
   158   001012  1F                 	db	31
   159   001013  1F                 	db	31
   160   001014  0E                 	db	14
   161   001015  04                 	db	4
   162   001016  00                 	db	0
   163   001017  00                 	db	0
   164   001018  00                 	db	0
   165   001019                     __end_of_customChar:
   166                           	callstack 0
   167   001019                     STR_4:
   168   001019  42                 	db	66	;'B'
   169   00101A  72                 	db	114	;'r'
   170   00101B  6F                 	db	111	;'o'
   171   00101C  6B                 	db	107	;'k'
   172   00101D  65                 	db	101	;'e'
   173   00101E  6E                 	db	110	;'n'
   174   00101F  2E                 	db	46
   175   001020  2E                 	db	46
   176   001021  00                 	db	0
   177   001022                     STR_1:
   178   001022  25                 	db	37
   179   001023  69                 	db	105	;'i'
   180   001024  00                 	db	0
   181   001025  00                 	db	0	; dummy byte at the end
   182   000000                     
   183                           	psect	nvCOMRAM
   184   00005D                     __pnvCOMRAM:
   185                           	callstack 0
   186   00005D                     _ret:
   187                           	callstack 0
   188   00005D                     	ds	1
   189   000000                     _PORTE	set	3972
   190   000000                     _PORTD	set	3971
   191   000000                     _PORTC	set	3970
   192   000000                     _PORTB	set	3969
   193   000000                     _PORTA	set	3968
   194   000000                     _LATA	set	3977
   195   000000                     _TRISA	set	3986
   196   000000                     _TRISE	set	3990
   197   000000                     _TRISD	set	3989
   198   000000                     _TRISC	set	3988
   199   000000                     _TRISB	set	3987
   200   000000                     _LATE	set	3981
   201   000000                     _LATD	set	3980
   202   000000                     _LATC	set	3979
   203   000000                     _LATB	set	3978
   204                           
   205                           ; #config settings
   206                           
   207                           	psect	cinit
   208   00199E                     __pcinit:
   209                           	callstack 0
   210   00199E                     start_initialization:
   211                           	callstack 0
   212   00199E                     __initialization:
   213                           	callstack 0
   214                           
   215                           ; Initialize objects allocated to COMRAM (46 bytes)
   216                           ; load TBLPTR registers with __pidataCOMRAM
   217   00199E  0ED0               	movlw	low __pidataCOMRAM
   218   0019A0  6EF6               	movwf	tblptrl,c
   219   0019A2  0E19               	movlw	high __pidataCOMRAM
   220   0019A4  6EF7               	movwf	tblptrh,c
   221   0019A6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   222   0019A8  6EF8               	movwf	tblptru,c
   223   0019AA  EE00  F001         	lfsr	0,__pdataCOMRAM
   224   0019AE  EE10 F02E          	lfsr	1,46
   225   0019B2                     copy_data0:
   226   0019B2  0009               	tblrd		*+
   227   0019B4  CFF5 FFEE          	movff	tablat,postinc0
   228   0019B8  50E5               	movf	postdec1,w,c
   229   0019BA  50E1               	movf	fsr1l,w,c
   230   0019BC  E1FA               	bnz	copy_data0
   231                           
   232                           ; Clear objects allocated to COMRAM (7 bytes)
   233   0019BE  EE00  F056         	lfsr	0,__pbssCOMRAM
   234   0019C2  0E07               	movlw	7
   235   0019C4                     clear_0:
   236   0019C4  6AEE               	clrf	postinc0,c
   237   0019C6  06E8               	decf	wreg,f,c
   238   0019C8  E1FD               	bnz	clear_0
   239   0019CA                     end_of_initialization:
   240                           	callstack 0
   241   0019CA                     __end_of__initialization:
   242                           	callstack 0
   243   0019CA  0100               	movlb	0
   244   0019CC  EF53  F00C         	goto	_main	;jump to C main() function
   245                           
   246                           	psect	bssCOMRAM
   247   000056                     __pbssCOMRAM:
   248                           	callstack 0
   249   000056                     relay_turn_off@F3062:
   250                           	callstack 0
   251   000056                     	ds	1
   252   000057                     relay_turn_on@F3057:
   253                           	callstack 0
   254   000057                     	ds	1
   255   000058                     relay_initialize@F3052:
   256                           	callstack 0
   257   000058                     	ds	1
   258   000059                     led_turn_toggle@F3073:
   259                           	callstack 0
   260   000059                     	ds	1
   261   00005A                     led_turn_off@F3068:
   262                           	callstack 0
   263   00005A                     	ds	1
   264   00005B                     led_turn_on@F3063:
   265                           	callstack 0
   266   00005B                     	ds	1
   267   00005C                     led_initialize@F3058:
   268                           	callstack 0
   269   00005C                     	ds	1
   270                           
   271                           	psect	dataCOMRAM
   272   000001                     __pdataCOMRAM:
   273                           	callstack 0
   274   000001                     _port_registers:
   275                           	callstack 0
   276   000001                     	ds	10
   277   00000B                     _lat_registers:
   278                           	callstack 0
   279   00000B                     	ds	10
   280   000015                     _tris_registers:
   281                           	callstack 0
   282   000015                     	ds	10
   283   00001F                     _lcd_2:
   284                           	callstack 0
   285   00001F                     	ds	10
   286   000029                     _lcd_1:
   287                           	callstack 0
   288   000029                     	ds	6
   289                           
   290                           	psect	cstackCOMRAM
   291   00002F                     __pcstackCOMRAM:
   292                           	callstack 0
   293   00002F                     gpio_pin_direction_initialize@_pin_config:
   294                           	callstack 0
   295   00002F                     gpio_pin_write_logic@_pin_config:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x0
   299   00002F                     	ds	1
   300   000030                     ??_gpio_pin_direction_initialize:
   301   000030                     gpio_pin_write_logic@logic:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x1
   305   000030                     	ds	1
   306   000031                     ??_gpio_pin_write_logic:
   307                           
   308                           ; 1 bytes @ 0x2
   309   000031                     	ds	4
   310   000035                     gpio_pin_direction_initialize@ret:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x6
   314   000035                     	ds	1
   315   000036                     gpio_pin_write_logic@ret:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x7
   319   000036                     	ds	1
   320   000037                     lcd_send_4bits@lcd:
   321                           	callstack 0
   322   000037                     lcd_4bit_send_enable_signal@lcd:
   323                           	callstack 0
   324   000037                     lcd_8bit_send_enable_signal@lcd:
   325                           	callstack 0
   326   000037                     gpio_pin_initialize@_pin_config:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x8
   330   000037                     	ds	1
   331   000038                     ??_gpio_pin_initialize:
   332   000038                     lcd_send_4bits@_data_command:
   333                           	callstack 0
   334   000038                     lcd_4bit_send_enable_signal@ret:
   335                           	callstack 0
   336   000038                     lcd_8bit_send_enable_signal@ret:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x9
   340   000038                     	ds	1
   341   000039                     lcd_8bit_send_command@lcd:
   342                           	callstack 0
   343   000039                     lcd_8bit_send_char_data@lcd:
   344                           	callstack 0
   345   000039                     lcd_send_4bits@ret:
   346                           	callstack 0
   347   000039                     gpio_pin_initialize@ret:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0xA
   351   000039                     	ds	1
   352   00003A                     lcd_4bit_send_command@lcd:
   353                           	callstack 0
   354   00003A                     lcd_4bit_send_char_data@lcd:
   355                           	callstack 0
   356   00003A                     lcd_8bit_send_command@command:
   357                           	callstack 0
   358   00003A                     lcd_8bit_send_char_data@data:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0xB
   362   00003A                     	ds	1
   363   00003B                     ??_lcd_8bit_send_command:
   364   00003B                     ??_lcd_8bit_send_char_data:
   365   00003B                     lcd_4bit_send_command@command:
   366                           	callstack 0
   367   00003B                     lcd_4bit_send_char_data@data:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0xC
   371   00003B                     	ds	1
   372   00003C                     lcd_4bit_send_command@ret:
   373                           	callstack 0
   374   00003C                     lcd_4bit_send_char_data@ret:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0xD
   378   00003C                     	ds	1
   379   00003D                     lcd_4bit_initialize@lcd:
   380                           	callstack 0
   381   00003D                     lcd_8bit_send_command@ret:
   382                           	callstack 0
   383   00003D                     lcd_8bit_send_char_data@ret:
   384                           	callstack 0
   385   00003D                     lcd_4bit_set_cursor@lcd:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0xE
   389   00003D                     	ds	1
   390   00003E                     ??_lcd_4bit_initialize:
   391   00003E                     lcd_8bit_send_command@cnt:
   392                           	callstack 0
   393   00003E                     lcd_8bit_send_char_data@cnt:
   394                           	callstack 0
   395   00003E                     lcd_4bit_set_cursor@row:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0xF
   399   00003E                     	ds	1
   400   00003F                     lcd_4bit_initialize@l_data_pins_counter:
   401                           	callstack 0
   402   00003F                     lcd_8bit_initialize@lcd:
   403                           	callstack 0
   404   00003F                     lcd_4bit_set_cursor@column:
   405                           	callstack 0
   406   00003F                     lcd_8bit_set_cursor@lcd:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x10
   410   00003F                     	ds	1
   411   000040                     ??_lcd_4bit_set_cursor:
   412   000040                     ??_lcd_8bit_initialize:
   413   000040                     lcd_4bit_initialize@ret:
   414                           	callstack 0
   415   000040                     lcd_8bit_set_cursor@row:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x11
   419   000040                     	ds	1
   420   000041                     lcd_8bit_initialize@l_data_pins_counter:
   421                           	callstack 0
   422   000041                     lcd_8bit_set_cursor@column:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x12
   426   000041                     	ds	1
   427   000042                     ??_lcd_8bit_set_cursor:
   428   000042                     lcd_8bit_initialize@ret:
   429                           	callstack 0
   430   000042                     lcd_4bit_set_cursor@ret:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x13
   434   000042                     	ds	1
   435   000043                     lcd_4bit_send_char_data_pos@lcd:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x14
   439   000043                     	ds	1
   440   000044                     lcd_4bit_send_char_data_pos@row:
   441                           	callstack 0
   442   000044                     lcd_8bit_set_cursor@ret:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x15
   446   000044                     	ds	1
   447   000045                     lcd_4bit_send_char_data_pos@column:
   448                           	callstack 0
   449   000045                     lcd_8bit_send_string_pos@lcd:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x16
   453   000045                     	ds	1
   454   000046                     lcd_4bit_send_char_data_pos@data:
   455                           	callstack 0
   456   000046                     lcd_8bit_send_string_pos@row:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x17
   460   000046                     	ds	1
   461   000047                     lcd_4bit_send_char_data_pos@ret:
   462                           	callstack 0
   463   000047                     lcd_8bit_send_string_pos@column:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0x18
   467   000047                     	ds	1
   468   000048                     lcd_4bit_send_custom_char@lcd:
   469                           	callstack 0
   470   000048                     lcd_8bit_send_string_pos@str:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x19
   474   000048                     	ds	1
   475   000049                     lcd_8bit_send_string_pos@ret:
   476                           	callstack 0
   477   000049                     lcd_4bit_send_custom_char@_chr:
   478                           	callstack 0
   479                           
   480                           ; 3 bytes @ 0x1A
   481   000049                     	ds	3
   482   00004C                     lcd_4bit_send_custom_char@row:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x1D
   486   00004C                     	ds	1
   487   00004D                     lcd_4bit_send_custom_char@column:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x1E
   491   00004D                     	ds	1
   492   00004E                     lcd_4bit_send_custom_char@mem_pos:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x1F
   496   00004E                     	ds	1
   497   00004F                     ??_lcd_4bit_send_custom_char:
   498                           
   499                           ; 1 bytes @ 0x20
   500   00004F                     	ds	5
   501   000054                     lcd_4bit_send_custom_char@ret:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0x25
   505   000054                     	ds	1
   506   000055                     lcd_4bit_send_custom_char@lcd_counter:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x26
   510   000055                     	ds	1
   511   000056                     
   512                           ; 1 bytes @ 0x27
   513 ;;
   514 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   515 ;;
   516 ;; *************** function _main *****************
   517 ;; Defined at:
   518 ;;		line 22 in file "appplication.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  2  472[None  ] int 
   525 ;; Registers used:
   526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;Total ram usage:        0 bytes
   537 ;; Hardware stack levels required when called: 6
   538 ;; This function calls:
   539 ;;		_app_init
   540 ;;		_lcd_4bit_send_custom_char
   541 ;;		_lcd_8bit_send_string_pos
   542 ;; This function is called by:
   543 ;;		Startup code after reset
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           	psect	text0
   548   0018A6                     __ptext0:
   549                           	callstack 0
   550   0018A6                     _main:
   551                           	callstack 25
   552   0018A6                     
   553                           ;appplication.c: 24:     app_init();
   554   0018A6  EC08  F00D         	call	_app_init	;wreg free
   555   0018AA                     
   556                           ;appplication.c: 25:     ret = lcd_8bit_send_string_pos(&lcd_2, 1, 1, "Broken..");
   557   0018AA  0E1F               	movlw	low _lcd_2
   558   0018AC  6E45               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   559   0018AE  0E01               	movlw	1
   560   0018B0  6E46               	movwf	lcd_8bit_send_string_pos@row^0,c
   561   0018B2  0E01               	movlw	1
   562   0018B4  6E47               	movwf	lcd_8bit_send_string_pos@column^0,c
   563   0018B6  0E19               	movlw	low STR_4
   564   0018B8  6E48               	movwf	lcd_8bit_send_string_pos@str^0,c
   565   0018BA  EC97  F00B         	call	_lcd_8bit_send_string_pos	;wreg free
   566   0018BE  6E5D               	movwf	_ret^0,c
   567   0018C0                     l2736:
   568                           
   569                           ;appplication.c: 27:     {;appplication.c: 28:         ret = lcd_4bit_send_custom_char(&
      +                          lcd_1, 1, 5, customChar, 0);
   570   0018C0  0E29               	movlw	low _lcd_1
   571   0018C2  6E48               	movwf	lcd_4bit_send_custom_char@lcd^0,c
   572   0018C4  0E01               	movlw	1
   573   0018C6  6E49               	movwf	lcd_4bit_send_custom_char@_chr^0,c
   574   0018C8  0E00               	movlw	0
   575   0018CA  6E4A               	movwf	(lcd_4bit_send_custom_char@_chr+1)^0,c
   576   0018CC  0E00               	movlw	0
   577   0018CE  6E4B               	movwf	(lcd_4bit_send_custom_char@_chr+2)^0,c
   578   0018D0  0E05               	movlw	5
   579   0018D2  6E4C               	movwf	lcd_4bit_send_custom_char@row^0,c
   580   0018D4  0E11               	movlw	low (low _customChar)
   581   0018D6  6E4D               	movwf	lcd_4bit_send_custom_char@column^0,c
   582   0018D8  0E00               	movlw	0
   583   0018DA  6E4E               	movwf	lcd_4bit_send_custom_char@mem_pos^0,c
   584   0018DC  ECA2  F00A         	call	_lcd_4bit_send_custom_char	;wreg free
   585   0018E0  6E5D               	movwf	_ret^0,c
   586   0018E2  EF60  F00C         	goto	l2736
   587   0018E6  EF00  F000         	goto	start
   588   0018EA                     __end_of_main:
   589                           	callstack 0
   590                           
   591 ;; *************** function _lcd_8bit_send_string_pos *****************
   592 ;; Defined at:
   593 ;;		line 339 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;  lcd             1   22[COMRAM] PTR const struct .
   596 ;;		 -> lcd_2(10), 
   597 ;;  row             1   23[COMRAM] unsigned char 
   598 ;;  column          1   24[COMRAM] unsigned char 
   599 ;;  str             1   25[COMRAM] PTR unsigned char 
   600 ;;		 -> STR_4(9), 
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  ret             1   26[COMRAM] unsigned char 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      unsigned char 
   605 ;; Registers used:
   606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;Total ram usage:        5 bytes
   617 ;; Hardware stack levels used: 1
   618 ;; Hardware stack levels required when called: 4
   619 ;; This function calls:
   620 ;;		_lcd_8bit_send_char_data
   621 ;;		_lcd_8bit_set_cursor
   622 ;; This function is called by:
   623 ;;		_main
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text1
   628   00172E                     __ptext1:
   629                           	callstack 0
   630   00172E                     _lcd_8bit_send_string_pos:
   631                           	callstack 26
   632   00172E                     
   633                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 341:     if(((void*)0) == lcd){
   634   00172E  5045               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
   635   001730  A4D8               	btfss	status,2,c
   636   001732  EF9D  F00B         	goto	u1311
   637   001736  EF9F  F00B         	goto	u1310
   638   00173A                     u1311:
   639   00173A  EFA3  F00B         	goto	l2390
   640   00173E                     u1310:
   641   00173E                     
   642                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 342:         ret = (Std_ReturnType)0x00;
   643   00173E  0E00               	movlw	0
   644   001740  6E49               	movwf	lcd_8bit_send_string_pos@ret^0,c
   645                           
   646                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 343:     }
   647   001742  EFCB  F00B         	goto	l2398
   648   001746                     l2390:
   649                           
   650                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 345:         ret = lcd_8bit_set_cursor(lcd, row, colum
      +                          n);
   651   001746  C045  F03F         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
   652   00174A  C046  F040         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
   653   00174E  C047  F041         	movff	lcd_8bit_send_string_pos@column,lcd_8bit_set_cursor@column
   654   001752  EC0A  F00A         	call	_lcd_8bit_set_cursor	;wreg free
   655   001756  6E49               	movwf	lcd_8bit_send_string_pos@ret^0,c
   656                           
   657                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 346:         while(*str != '\0')
   658   001758  EFBC  F00B         	goto	l2396
   659   00175C                     l2392:
   660                           
   661                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 347:         {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 348:  
      +                                     ret = lcd_8bit_send_char_data(lcd, *str);
   662   00175C  C045  F039         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_char_data@lcd
   663   001760  C048  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
   664   001764                     	if	1	;There is more than 1 active tblptr byte
   665   001764  0E10               	movlw	high __smallconst
   666   001766  6EF7               	movwf	tblptrh,c
   667   001768                     	endif
   668   001768                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   669   001768  6AF8               	clrf	tblptru,c
   670   00176A                     	endif
   671   00176A                     	if	0	;tblptru may be non-zero
   672   00176A                     	endif
   673   00176A  0008               	tblrd		*
   674   00176C  CFF5 F03A          	movff	tablat,lcd_8bit_send_char_data@data
   675   001770  ECEA  F00A         	call	_lcd_8bit_send_char_data	;wreg free
   676   001774  6E49               	movwf	lcd_8bit_send_string_pos@ret^0,c
   677   001776                     
   678                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 349:             str++;
   679   001776  2A48               	incf	lcd_8bit_send_string_pos@str^0,f,c
   680   001778                     l2396:
   681                           
   682                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 346:         while(*str != '\0')
   683   001778  C048  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
   684   00177C                     	if	1	;There is more than 1 active tblptr byte
   685   00177C  0E10               	movlw	high __smallconst
   686   00177E  6EF7               	movwf	tblptrh,c
   687   001780                     	endif
   688   001780                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   689   001780  6AF8               	clrf	tblptru,c
   690   001782                     	endif
   691   001782                     	if	0	;tblptru may be non-zero
   692   001782                     	endif
   693   001782  0008               	tblrd		*
   694   001784  50F5               	movf	tablat,w,c
   695   001786  0900               	iorlw	0
   696   001788  A4D8               	btfss	status,2,c
   697   00178A  EFC9  F00B         	goto	u1321
   698   00178E  EFCB  F00B         	goto	u1320
   699   001792                     u1321:
   700   001792  EFAE  F00B         	goto	l2392
   701   001796                     u1320:
   702   001796                     l2398:
   703                           
   704                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 352:     return ret;
   705   001796  5049               	movf	lcd_8bit_send_string_pos@ret^0,w,c
   706   001798  0012               	return		;funcret
   707   00179A                     __end_of_lcd_8bit_send_string_pos:
   708                           	callstack 0
   709                           
   710 ;; *************** function _lcd_8bit_set_cursor *****************
   711 ;; Defined at:
   712 ;;		line 477 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  lcd             1   16[COMRAM] PTR const struct .
   715 ;;		 -> lcd_2(10), 
   716 ;;  row             1   17[COMRAM] unsigned char 
   717 ;;  column          1   18[COMRAM] unsigned char 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  ret             1   21[COMRAM] unsigned char 
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      unsigned char 
   722 ;; Registers used:
   723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   729 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   731 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   732 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;Total ram usage:        6 bytes
   734 ;; Hardware stack levels used: 1
   735 ;; Hardware stack levels required when called: 3
   736 ;; This function calls:
   737 ;;		_lcd_8bit_send_command
   738 ;; This function is called by:
   739 ;;		_lcd_8bit_send_string_pos
   740 ;;		_lcd_8bit_send_char_data_pos
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text2
   745   001414                     __ptext2:
   746                           	callstack 0
   747   001414                     _lcd_8bit_set_cursor:
   748                           	callstack 26
   749   001414                     
   750                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 478:     Std_ReturnType ret = (Std_ReturnType)0x01;
   751   001414  0E01               	movlw	1
   752   001416  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   753   001418                     
   754                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 479:     column--;
   755   001418  0641               	decf	lcd_8bit_set_cursor@column^0,f,c
   756                           
   757                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 480:     switch(row)
   758   00141A  EF37  F00A         	goto	l2334
   759   00141E                     l2326:
   760   00141E  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   761   001422  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
   762   001424  0F80               	addlw	128
   763   001426  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   764   001428  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
   765   00142C  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   766   00142E  EF54  F00A         	goto	l2336
   767   001432                     l2328:
   768   001432  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   769   001436  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
   770   001438  0FC0               	addlw	192
   771   00143A  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   772   00143C  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
   773   001440  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   774   001442  EF54  F00A         	goto	l2336
   775   001446                     l2330:
   776   001446  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   777   00144A  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
   778   00144C  0F94               	addlw	148
   779   00144E  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   780   001450  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
   781   001454  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   782   001456  EF54  F00A         	goto	l2336
   783   00145A                     l2332:
   784   00145A  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   785   00145E  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
   786   001460  0FD4               	addlw	212
   787   001462  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   788   001464  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
   789   001468  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   790   00146A  EF54  F00A         	goto	l2336
   791   00146E                     l2334:
   792   00146E  5040               	movf	lcd_8bit_set_cursor@row^0,w,c
   793   001470  6E42               	movwf	??_lcd_8bit_set_cursor^0,c
   794   001472  6A43               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
   795                           
   796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   797                           ; Switch size 1, requested type "simple"
   798                           ; Number of cases is 1, Range of values is 0 to 0
   799                           ; switch strategies available:
   800                           ; Name         Instructions Cycles
   801                           ; simple_byte            4     3 (average)
   802                           ;	Chosen strategy is simple_byte
   803   001474  5043               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
   804   001476  0A00               	xorlw	0	; case 0
   805   001478  B4D8               	btfsc	status,2,c
   806   00147A  EF41  F00A         	goto	l2754
   807   00147E  EF54  F00A         	goto	l2336
   808   001482                     l2754:
   809                           
   810                           ; Switch size 1, requested type "simple"
   811                           ; Number of cases is 4, Range of values is 1 to 4
   812                           ; switch strategies available:
   813                           ; Name         Instructions Cycles
   814                           ; simple_byte           13     7 (average)
   815                           ;	Chosen strategy is simple_byte
   816   001482  5042               	movf	??_lcd_8bit_set_cursor^0,w,c
   817   001484  0A01               	xorlw	1	; case 1
   818   001486  B4D8               	btfsc	status,2,c
   819   001488  EF0F  F00A         	goto	l2326
   820   00148C  0A03               	xorlw	3	; case 2
   821   00148E  B4D8               	btfsc	status,2,c
   822   001490  EF19  F00A         	goto	l2328
   823   001494  0A01               	xorlw	1	; case 3
   824   001496  B4D8               	btfsc	status,2,c
   825   001498  EF23  F00A         	goto	l2330
   826   00149C  0A07               	xorlw	7	; case 4
   827   00149E  B4D8               	btfsc	status,2,c
   828   0014A0  EF2D  F00A         	goto	l2332
   829   0014A4  EF54  F00A         	goto	l2336
   830   0014A8                     l2336:
   831                           
   832                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 488:     return ret;
   833   0014A8  5044               	movf	lcd_8bit_set_cursor@ret^0,w,c
   834   0014AA  0012               	return		;funcret
   835   0014AC                     __end_of_lcd_8bit_set_cursor:
   836                           	callstack 0
   837                           
   838 ;; *************** function _lcd_8bit_send_char_data *****************
   839 ;; Defined at:
   840 ;;		line 267 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  lcd             1   10[COMRAM] PTR const struct .
   843 ;;		 -> lcd_2(10), 
   844 ;;  data            1   11[COMRAM] unsigned char 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  cnt             1   15[COMRAM] unsigned char 
   847 ;;  ret             1   14[COMRAM] unsigned char 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      unsigned char 
   850 ;; Registers used:
   851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;Total ram usage:        6 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 2
   864 ;; This function calls:
   865 ;;		_gpio_pin_write_logic
   866 ;;		_lcd_8bit_send_enable_signal
   867 ;; This function is called by:
   868 ;;		_lcd_8bit_send_string_pos
   869 ;;		_lcd_8bit_send_char_data_pos
   870 ;;		_lcd_8bit_send_string
   871 ;;		_lcd_8bit_send_custom_char
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text3
   876   0015D4                     __ptext3:
   877                           	callstack 0
   878   0015D4                     _lcd_8bit_send_char_data:
   879                           	callstack 27
   880   0015D4                     
   881                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 269:     uint8 cnt = 0;
   882   0015D4  0E00               	movlw	0
   883   0015D6  6E3E               	movwf	lcd_8bit_send_char_data@cnt^0,c
   884                           
   885                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 270:     if(((void*)0) == lcd){
   886   0015D8  5039               	movf	lcd_8bit_send_char_data@lcd^0,w,c
   887   0015DA  A4D8               	btfss	status,2,c
   888   0015DC  EFF2  F00A         	goto	u1251
   889   0015E0  EFF4  F00A         	goto	u1250
   890   0015E4                     u1251:
   891   0015E4  EFF8  F00A         	goto	l2302
   892   0015E8                     u1250:
   893   0015E8                     
   894                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 271:         ret = (Std_ReturnType)0x00;
   895   0015E8  0E00               	movlw	0
   896   0015EA  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
   897                           
   898                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 272:     }
   899   0015EC  EF23  F00B         	goto	l2318
   900   0015F0                     l2302:
   901   0015F0  C039  F02F         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
   902   0015F4  0E01               	movlw	1
   903   0015F6  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   904   0015F8  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
   905   0015FC                     
   906                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 275:         for(cnt=0; cnt<8; cnt++)
   907   0015FC  0E00               	movlw	0
   908   0015FE  6E3E               	movwf	lcd_8bit_send_char_data@cnt^0,c
   909   001600                     l2310:
   910   001600  5039               	movf	lcd_8bit_send_char_data@lcd^0,w,c
   911   001602  243E               	addwf	lcd_8bit_send_char_data@cnt^0,w,c
   912   001604  0F02               	addlw	2
   913   001606  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   914   001608  C03E  F03B         	movff	lcd_8bit_send_char_data@cnt,??_lcd_8bit_send_char_data
   915   00160C  C03A  F03C         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
   916   001610  2A3B               	incf	??_lcd_8bit_send_char_data^0,f,c
   917   001612  EF0D  F00B         	goto	u1264
   918   001616                     u1265:
   919   001616  90D8               	bcf	status,0,c
   920   001618  323C               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
   921   00161A                     u1264:
   922   00161A  2E3B               	decfsz	??_lcd_8bit_send_char_data^0,f,c
   923   00161C  EF0B  F00B         	goto	u1265
   924   001620  503C               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
   925   001622  0B01               	andlw	1
   926   001624  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   927   001626  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
   928   00162A                     
   929                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 278:         }
   930   00162A  2A3E               	incf	lcd_8bit_send_char_data@cnt^0,f,c
   931   00162C  0E07               	movlw	7
   932   00162E  643E               	cpfsgt	lcd_8bit_send_char_data@cnt^0,c
   933   001630  EF1C  F00B         	goto	u1271
   934   001634  EF1E  F00B         	goto	u1270
   935   001638                     u1271:
   936   001638  EF00  F00B         	goto	l2310
   937   00163C                     u1270:
   938   00163C                     
   939                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 279:         ret = lcd_8bit_send_enable_signal(lcd);
   940   00163C  C039  F037         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
   941   001640  EC93  F00C         	call	_lcd_8bit_send_enable_signal	;wreg free
   942   001644  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
   943   001646                     l2318:
   944                           
   945                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 281:     return ret;
   946   001646  503D               	movf	lcd_8bit_send_char_data@ret^0,w,c
   947   001648  0012               	return		;funcret
   948   00164A                     __end_of_lcd_8bit_send_char_data:
   949                           	callstack 0
   950                           
   951 ;; *************** function _lcd_4bit_send_custom_char *****************
   952 ;; Defined at:
   953 ;;		line 181 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  lcd             1   25[COMRAM] PTR const struct .
   956 ;;		 -> lcd_1(6), 
   957 ;;  _chr            3   26[COMRAM] PTR const unsigned char 
   958 ;;		 -> ROM(65535), 
   959 ;;  row             1   29[COMRAM] unsigned char 
   960 ;;  column          1   30[COMRAM] unsigned char 
   961 ;;  mem_pos         1   31[COMRAM] unsigned char 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  lcd_counter     1   38[COMRAM] unsigned char 
   964 ;;  ret             1   37[COMRAM] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      unsigned char 
   967 ;; Registers used:
   968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   974 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;Total ram usage:       14 bytes
   979 ;; Hardware stack levels used: 1
   980 ;; Hardware stack levels required when called: 5
   981 ;; This function calls:
   982 ;;		_lcd_4bit_send_char_data
   983 ;;		_lcd_4bit_send_char_data_pos
   984 ;;		_lcd_4bit_send_command
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text4
   991   001544                     __ptext4:
   992                           	callstack 0
   993   001544                     _lcd_4bit_send_custom_char:
   994                           	callstack 25
   995   001544                     
   996                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 183:     uint8 lcd_counter = 0;
   997   001544  0E00               	movlw	0
   998   001546  6E55               	movwf	lcd_4bit_send_custom_char@lcd_counter^0,c
   999                           
  1000                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 184:     if(((void*)0) == lcd){
  1001   001548  5048               	movf	lcd_4bit_send_custom_char@lcd^0,w,c
  1002   00154A  A4D8               	btfss	status,2,c
  1003   00154C  EFAA  F00A         	goto	u1281
  1004   001550  EFAC  F00A         	goto	u1280
  1005   001554                     u1281:
  1006   001554  EFB0  F00A         	goto	l2354
  1007   001558                     u1280:
  1008   001558                     
  1009                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 185:         ret = (Std_ReturnType)0x00;
  1010   001558  0E00               	movlw	0
  1011   00155A  6E54               	movwf	lcd_4bit_send_custom_char@ret^0,c
  1012                           
  1013                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 186:     }
  1014   00155C  EFE8  F00A         	goto	l2370
  1015   001560                     l2354:
  1016   001560  C048  F03A         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_command@lcd
  1017   001564  504E               	movf	lcd_4bit_send_custom_char@mem_pos^0,w,c
  1018   001566  0D08               	mullw	8
  1019   001568  50F3               	movf	243,w,c
  1020   00156A  0F40               	addlw	64
  1021   00156C  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1022   00156E  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1023   001572                     
  1024                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 189:         for(lcd_counter=0; lcd_counter<=7; ++lcd_
      +                          counter){
  1025   001572  0E00               	movlw	0
  1026   001574  6E55               	movwf	lcd_4bit_send_custom_char@lcd_counter^0,c
  1027   001576                     l2362:
  1028   001576  C048  F03A         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_char_data@lcd
  1029   00157A  5055               	movf	lcd_4bit_send_custom_char@lcd_counter^0,w,c
  1030   00157C  6E4F               	movwf	??_lcd_4bit_send_custom_char^0,c
  1031   00157E  6A50               	clrf	(??_lcd_4bit_send_custom_char+1)^0,c
  1032   001580  504F               	movf	??_lcd_4bit_send_custom_char^0,w,c
  1033   001582  2449               	addwf	lcd_4bit_send_custom_char@_chr^0,w,c
  1034   001584  6E51               	movwf	(??_lcd_4bit_send_custom_char+2)^0,c
  1035   001586  5050               	movf	(??_lcd_4bit_send_custom_char+1)^0,w,c
  1036   001588  204A               	addwfc	(lcd_4bit_send_custom_char@_chr+1)^0,w,c
  1037   00158A  6E52               	movwf	(??_lcd_4bit_send_custom_char+3)^0,c
  1038   00158C  0E00               	movlw	0
  1039   00158E  204B               	addwfc	(lcd_4bit_send_custom_char@_chr+2)^0,w,c
  1040   001590  6E53               	movwf	(??_lcd_4bit_send_custom_char+4)^0,c
  1041   001592  C051  FFF6         	movff	??_lcd_4bit_send_custom_char+2,tblptrl
  1042   001596  C052  FFF7         	movff	??_lcd_4bit_send_custom_char+3,tblptrh
  1043   00159A  C053  FFF8         	movff	??_lcd_4bit_send_custom_char+4,tblptru
  1044   00159E  0008               	tblrd		*
  1045   0015A0  CFF5 F03B          	movff	tablat,lcd_4bit_send_char_data@data
  1046   0015A4  ECCD  F00B         	call	_lcd_4bit_send_char_data	;wreg free
  1047   0015A8                     
  1048                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 191:         }
  1049   0015A8  2A55               	incf	lcd_4bit_send_custom_char@lcd_counter^0,f,c
  1050   0015AA  0E07               	movlw	7
  1051   0015AC  6455               	cpfsgt	lcd_4bit_send_custom_char@lcd_counter^0,c
  1052   0015AE  EFDB  F00A         	goto	u1291
  1053   0015B2  EFDD  F00A         	goto	u1290
  1054   0015B6                     u1291:
  1055   0015B6  EFBB  F00A         	goto	l2362
  1056   0015BA                     u1290:
  1057   0015BA                     
  1058                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 192:         ret = lcd_4bit_send_char_data_pos(lcd, ro
      +                          w, column, mem_pos);
  1059   0015BA  C048  F043         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_char_data_pos@lcd
  1060   0015BE  C04C  F044         	movff	lcd_4bit_send_custom_char@row,lcd_4bit_send_char_data_pos@row
  1061   0015C2  C04D  F045         	movff	lcd_4bit_send_custom_char@column,lcd_4bit_send_char_data_pos@column
  1062   0015C6  C04E  F046         	movff	lcd_4bit_send_custom_char@mem_pos,lcd_4bit_send_char_data_pos@data
  1063   0015CA  EC75  F00C         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1064   0015CE  6E54               	movwf	lcd_4bit_send_custom_char@ret^0,c
  1065   0015D0                     l2370:
  1066                           
  1067                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 194:     return ret;
  1068   0015D0  5054               	movf	lcd_4bit_send_custom_char@ret^0,w,c
  1069   0015D2  0012               	return		;funcret
  1070   0015D4                     __end_of_lcd_4bit_send_custom_char:
  1071                           	callstack 0
  1072                           
  1073 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  1074 ;; Defined at:
  1075 ;;		line 109 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  lcd             1   20[COMRAM] PTR const struct .
  1078 ;;		 -> lcd_1(6), 
  1079 ;;  row             1   21[COMRAM] unsigned char 
  1080 ;;  column          1   22[COMRAM] unsigned char 
  1081 ;;  data            1   23[COMRAM] unsigned char 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  ret             1   24[COMRAM] unsigned char 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      unsigned char 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1093 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;Total ram usage:        5 bytes
  1098 ;; Hardware stack levels used: 1
  1099 ;; Hardware stack levels required when called: 4
  1100 ;; This function calls:
  1101 ;;		_lcd_4bit_send_char_data
  1102 ;;		_lcd_4bit_set_cursor
  1103 ;; This function is called by:
  1104 ;;		_lcd_4bit_send_custom_char
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           	psect	text5
  1109   0018EA                     __ptext5:
  1110                           	callstack 0
  1111   0018EA                     _lcd_4bit_send_char_data_pos:
  1112                           	callstack 25
  1113   0018EA                     
  1114                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 111:     if(((void*)0) == lcd){
  1115   0018EA  5043               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  1116   0018EC  A4D8               	btfss	status,2,c
  1117   0018EE  EF7B  F00C         	goto	u1241
  1118   0018F2  EF7D  F00C         	goto	u1240
  1119   0018F6                     u1241:
  1120   0018F6  EF81  F00C         	goto	l2292
  1121   0018FA                     u1240:
  1122   0018FA                     
  1123                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 112:         ret = (Std_ReturnType)0x00;
  1124   0018FA  0E00               	movlw	0
  1125   0018FC  6E47               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1126                           
  1127                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 113:     }
  1128   0018FE  EF91  F00C         	goto	l2294
  1129   001902                     l2292:
  1130                           
  1131                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 115:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
  1132   001902  C043  F03D         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
  1133   001906  C044  F03E         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
  1134   00190A  C045  F03F         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_cursor@column
  1135   00190E  EC56  F00A         	call	_lcd_4bit_set_cursor	;wreg free
  1136   001912  6E47               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1137                           
  1138                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 116:         ret = lcd_4bit_send_char_data(lcd, data);
  1139   001914  C043  F03A         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  1140   001918  C046  F03B         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  1141   00191C  ECCD  F00B         	call	_lcd_4bit_send_char_data	;wreg free
  1142   001920  6E47               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1143   001922                     l2294:
  1144                           
  1145                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 118:     return ret;
  1146   001922  5047               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  1147   001924  0012               	return		;funcret
  1148   001926                     __end_of_lcd_4bit_send_char_data_pos:
  1149                           	callstack 0
  1150                           
  1151 ;; *************** function _lcd_4bit_set_cursor *****************
  1152 ;; Defined at:
  1153 ;;		line 434 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  lcd             1   14[COMRAM] PTR const struct .
  1156 ;;		 -> lcd_1(6), 
  1157 ;;  row             1   15[COMRAM] unsigned char 
  1158 ;;  column          1   16[COMRAM] unsigned char 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  ret             1   19[COMRAM] unsigned char 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      unsigned char 
  1163 ;; Registers used:
  1164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1170 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1173 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1174 ;;Total ram usage:        6 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; Hardware stack levels required when called: 3
  1177 ;; This function calls:
  1178 ;;		_lcd_4bit_send_command
  1179 ;; This function is called by:
  1180 ;;		_lcd_4bit_send_char_data_pos
  1181 ;;		_lcd_4bit_send_string_pos
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text6
  1186   0014AC                     __ptext6:
  1187                           	callstack 0
  1188   0014AC                     _lcd_4bit_set_cursor:
  1189                           	callstack 25
  1190   0014AC                     
  1191                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 435:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1192   0014AC  0E01               	movlw	1
  1193   0014AE  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
  1194   0014B0                     
  1195                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 436:     column--;
  1196   0014B0  063F               	decf	lcd_4bit_set_cursor@column^0,f,c
  1197                           
  1198                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 437:     switch(row)
  1199   0014B2  EF83  F00A         	goto	l2234
  1200   0014B6                     l2226:
  1201   0014B6  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1202   0014BA  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
  1203   0014BC  0F80               	addlw	128
  1204   0014BE  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1205   0014C0  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1206   0014C4  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
  1207   0014C6  EFA0  F00A         	goto	l2236
  1208   0014CA                     l2228:
  1209   0014CA  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1210   0014CE  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
  1211   0014D0  0FC0               	addlw	192
  1212   0014D2  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1213   0014D4  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1214   0014D8  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
  1215   0014DA  EFA0  F00A         	goto	l2236
  1216   0014DE                     l2230:
  1217   0014DE  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1218   0014E2  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
  1219   0014E4  0F94               	addlw	148
  1220   0014E6  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1221   0014E8  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1222   0014EC  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
  1223   0014EE  EFA0  F00A         	goto	l2236
  1224   0014F2                     l2232:
  1225   0014F2  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1226   0014F6  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
  1227   0014F8  0FD4               	addlw	212
  1228   0014FA  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1229   0014FC  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1230   001500  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
  1231   001502  EFA0  F00A         	goto	l2236
  1232   001506                     l2234:
  1233   001506  503E               	movf	lcd_4bit_set_cursor@row^0,w,c
  1234   001508  6E40               	movwf	??_lcd_4bit_set_cursor^0,c
  1235   00150A  6A41               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1236                           
  1237                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1238                           ; Switch size 1, requested type "simple"
  1239                           ; Number of cases is 1, Range of values is 0 to 0
  1240                           ; switch strategies available:
  1241                           ; Name         Instructions Cycles
  1242                           ; simple_byte            4     3 (average)
  1243                           ;	Chosen strategy is simple_byte
  1244   00150C  5041               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1245   00150E  0A00               	xorlw	0	; case 0
  1246   001510  B4D8               	btfsc	status,2,c
  1247   001512  EF8D  F00A         	goto	l2756
  1248   001516  EFA0  F00A         	goto	l2236
  1249   00151A                     l2756:
  1250                           
  1251                           ; Switch size 1, requested type "simple"
  1252                           ; Number of cases is 4, Range of values is 1 to 4
  1253                           ; switch strategies available:
  1254                           ; Name         Instructions Cycles
  1255                           ; simple_byte           13     7 (average)
  1256                           ;	Chosen strategy is simple_byte
  1257   00151A  5040               	movf	??_lcd_4bit_set_cursor^0,w,c
  1258   00151C  0A01               	xorlw	1	; case 1
  1259   00151E  B4D8               	btfsc	status,2,c
  1260   001520  EF5B  F00A         	goto	l2226
  1261   001524  0A03               	xorlw	3	; case 2
  1262   001526  B4D8               	btfsc	status,2,c
  1263   001528  EF65  F00A         	goto	l2228
  1264   00152C  0A01               	xorlw	1	; case 3
  1265   00152E  B4D8               	btfsc	status,2,c
  1266   001530  EF6F  F00A         	goto	l2230
  1267   001534  0A07               	xorlw	7	; case 4
  1268   001536  B4D8               	btfsc	status,2,c
  1269   001538  EF79  F00A         	goto	l2232
  1270   00153C  EFA0  F00A         	goto	l2236
  1271   001540                     l2236:
  1272                           
  1273                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 445:     return ret;
  1274   001540  5042               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1275   001542  0012               	return		;funcret
  1276   001544                     __end_of_lcd_4bit_set_cursor:
  1277                           	callstack 0
  1278                           
  1279 ;; *************** function _lcd_4bit_send_char_data *****************
  1280 ;; Defined at:
  1281 ;;		line 84 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  lcd             1   11[COMRAM] PTR const struct .
  1284 ;;		 -> lcd_1(6), 
  1285 ;;  data            1   12[COMRAM] unsigned char 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  ret             1   13[COMRAM] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      unsigned char 
  1290 ;; Registers used:
  1291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;Total ram usage:        3 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 2
  1304 ;; This function calls:
  1305 ;;		_gpio_pin_write_logic
  1306 ;;		_lcd_4bit_send_enable_signal
  1307 ;;		_lcd_send_4bits
  1308 ;; This function is called by:
  1309 ;;		_lcd_4bit_send_char_data_pos
  1310 ;;		_lcd_4bit_send_custom_char
  1311 ;;		_lcd_4bit_send_string
  1312 ;;		_lcd_4bit_send_string_pos
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text7
  1317   00179A                     __ptext7:
  1318                           	callstack 0
  1319   00179A                     _lcd_4bit_send_char_data:
  1320                           	callstack 26
  1321   00179A                     
  1322                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 86:     if(((void*)0) == lcd){
  1323   00179A  503A               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1324   00179C  A4D8               	btfss	status,2,c
  1325   00179E  EFD3  F00B         	goto	u1211
  1326   0017A2  EFD5  F00B         	goto	u1210
  1327   0017A6                     u1211:
  1328   0017A6  EFD9  F00B         	goto	l2216
  1329   0017AA                     u1210:
  1330   0017AA                     
  1331                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 87:         ret = (Std_ReturnType)0x00;
  1332   0017AA  0E00               	movlw	0
  1333   0017AC  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1334                           
  1335                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 88:     }
  1336   0017AE  EFF9  F00B         	goto	l2218
  1337   0017B2                     l2216:
  1338                           
  1339                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 90:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_HIGH);
  1340   0017B2  C03A  F02F         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1341   0017B6  0E01               	movlw	1
  1342   0017B8  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1343   0017BA  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  1344   0017BE  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1345                           
  1346                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 91:         ret = lcd_send_4bits(lcd, (data >> 4));
  1347   0017C0  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1348   0017C4  383B               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1349   0017C6  0B0F               	andlw	15
  1350   0017C8  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  1351   0017CA  EC60  F00B         	call	_lcd_send_4bits	;wreg free
  1352   0017CE  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1353                           
  1354                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 92:         ret = lcd_4bit_send_enable_signal(lcd);
  1355   0017D0  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1356   0017D4  ECB1  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  1357   0017D8  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1358                           
  1359                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 93:         ret = lcd_send_4bits(lcd, data);
  1360   0017DA  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1361   0017DE  C03B  F038         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  1362   0017E2  EC60  F00B         	call	_lcd_send_4bits	;wreg free
  1363   0017E6  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1364                           
  1365                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 94:         ret = lcd_4bit_send_enable_signal(lcd);
  1366   0017E8  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1367   0017EC  ECB1  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  1368   0017F0  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1369   0017F2                     l2218:
  1370                           
  1371                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 96:     return ret;
  1372   0017F2  503C               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1373   0017F4  0012               	return		;funcret
  1374   0017F6                     __end_of_lcd_4bit_send_char_data:
  1375                           	callstack 0
  1376                           
  1377 ;; *************** function _app_init *****************
  1378 ;; Defined at:
  1379 ;;		line 34 in file "appplication.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; Hardware stack levels required when called: 5
  1400 ;; This function calls:
  1401 ;;		_ecu_layer_initialize
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text8
  1408   001A10                     __ptext8:
  1409                           	callstack 0
  1410   001A10                     _app_init:
  1411                           	callstack 25
  1412   001A10                     
  1413                           ;appplication.c: 36:     ecu_layer_initialize();
  1414   001A10  ECFF  F00C         	call	_ecu_layer_initialize	;wreg free
  1415   001A14  0012               	return		;funcret
  1416   001A16                     __end_of_app_init:
  1417                           	callstack 0
  1418                           
  1419 ;; *************** function _ecu_layer_initialize *****************
  1420 ;; Defined at:
  1421 ;;		line 84 in file "ECU_Layer/ecu_layer_init.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  ret             1    0        unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;Total ram usage:        0 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; Hardware stack levels required when called: 4
  1442 ;; This function calls:
  1443 ;;		_lcd_4bit_initialize
  1444 ;;		_lcd_8bit_initialize
  1445 ;; This function is called by:
  1446 ;;		_app_init
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text9
  1451   0019FE                     __ptext9:
  1452                           	callstack 0
  1453   0019FE                     _ecu_layer_initialize:
  1454                           	callstack 25
  1455   0019FE  0E29               	movlw	low _lcd_1
  1456   001A00  6E3D               	movwf	lcd_4bit_initialize@lcd^0,c
  1457   001A02  EC9C  F009         	call	_lcd_4bit_initialize	;wreg free
  1458   001A06  0E1F               	movlw	low _lcd_2
  1459   001A08  6E3F               	movwf	lcd_8bit_initialize@lcd^0,c
  1460   001A0A  EC2E  F009         	call	_lcd_8bit_initialize	;wreg free
  1461   001A0E  0012               	return		;funcret
  1462   001A10                     __end_of_ecu_layer_initialize:
  1463                           	callstack 0
  1464                           
  1465 ;; *************** function _lcd_8bit_initialize *****************
  1466 ;; Defined at:
  1467 ;;		line 205 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  lcd             1   16[COMRAM] PTR const struct .
  1470 ;;		 -> lcd_2(10), 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  ret             1   19[COMRAM] unsigned char 
  1473 ;;  l_data_pins_    1   18[COMRAM] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      unsigned char 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1483 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;Total ram usage:        4 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; Hardware stack levels required when called: 3
  1490 ;; This function calls:
  1491 ;;		_gpio_pin_initialize
  1492 ;;		_lcd_8bit_send_command
  1493 ;; This function is called by:
  1494 ;;		_ecu_layer_initialize
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text10
  1499   00125C                     __ptext10:
  1500                           	callstack 0
  1501   00125C                     _lcd_8bit_initialize:
  1502                           	callstack 25
  1503   00125C                     
  1504                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 207:     uint8 l_data_pins_counter = 0;
  1505   00125C  0E00               	movlw	0
  1506   00125E  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  1507                           
  1508                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 208:     if(((void*)0) == lcd){
  1509   001260  503F               	movf	lcd_8bit_initialize@lcd^0,w,c
  1510   001262  A4D8               	btfss	status,2,c
  1511   001264  EF36  F009         	goto	u1221
  1512   001268  EF38  F009         	goto	u1220
  1513   00126C                     u1221:
  1514   00126C  EF3A  F009         	goto	l2248
  1515   001270                     u1220:
  1516   001270                     
  1517                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 210:     }
  1518   001270  EF55  F009         	goto	l2262
  1519   001274                     l2248:
  1520                           
  1521                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 212:         ret = gpio_pin_initialize(&(lcd->lcd_rs))
      +                          ;
  1522   001274  C03F  F037         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialize@_pin_config
  1523   001278  EC29  F00C         	call	_gpio_pin_initialize	;wreg free
  1524   00127C  6E42               	movwf	lcd_8bit_initialize@ret^0,c
  1525                           
  1526                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 213:         ret = gpio_pin_initialize(&(lcd->lcd_en))
      +                          ;
  1527   00127E  283F               	incf	lcd_8bit_initialize@lcd^0,w,c
  1528   001280  6E37               	movwf	gpio_pin_initialize@_pin_config^0,c
  1529   001282  EC29  F00C         	call	_gpio_pin_initialize	;wreg free
  1530   001286  6E42               	movwf	lcd_8bit_initialize@ret^0,c
  1531   001288                     
  1532                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 214:         for(l_data_pins_counter = 0; l_data_pins_
      +                          counter<8; l_data_pins_counter++){
  1533   001288  0E00               	movlw	0
  1534   00128A  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  1535   00128C                     l2256:
  1536   00128C  503F               	movf	lcd_8bit_initialize@lcd^0,w,c
  1537   00128E  2441               	addwf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
  1538   001290  0F02               	addlw	2
  1539   001292  6E37               	movwf	gpio_pin_initialize@_pin_config^0,c
  1540   001294  EC29  F00C         	call	_gpio_pin_initialize	;wreg free
  1541   001298                     
  1542                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 216:         }
  1543   001298  2A41               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
  1544   00129A  0E07               	movlw	7
  1545   00129C  6441               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
  1546   00129E  EF53  F009         	goto	u1231
  1547   0012A2  EF55  F009         	goto	u1230
  1548   0012A6                     u1231:
  1549   0012A6  EF46  F009         	goto	l2256
  1550   0012AA                     u1230:
  1551   0012AA                     l2262:
  1552                           
  1553                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 218:     _delay((unsigned long)((20)*(4000000UL/4000.0
      +                          )));
  1554   0012AA  0E1A               	movlw	26
  1555   0012AC  6E40               	movwf	??_lcd_8bit_initialize^0,c
  1556   0012AE  0EF8               	movlw	248
  1557   0012B0                     u1707:
  1558   0012B0  2EE8               	decfsz	wreg,f,c
  1559   0012B2  D7FE               	bra	u1707
  1560   0012B4  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
  1561   0012B6  D7FC               	bra	u1707
  1562   0012B8  D000               	nop2	
  1563   0012BA  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1564   0012BE  0E38               	movlw	56
  1565   0012C0  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1566   0012C2  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1567   0012C6                     
  1568                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 220:     _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
  1569   0012C6  D000               	nop2		;2 cycle nop
  1570   0012C8  D000               	nop2		;2 cycle nop
  1571   0012CA  0000               	nop	
  1572   0012CC  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1573   0012D0  0E38               	movlw	56
  1574   0012D2  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1575   0012D4  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1576                           
  1577                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 222:     _delay((unsigned long)((150)*(4000000UL/40000
      +                          00.0)));
  1578   0012D8  0E32               	movlw	50
  1579   0012DA                     u1717:
  1580   0012DA  2EE8               	decfsz	wreg,f,c
  1581   0012DC  D7FE               	bra	u1717
  1582   0012DE  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1583   0012E2  0E38               	movlw	56
  1584   0012E4  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1585   0012E6  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1586   0012EA  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1587   0012EE  0E01               	movlw	1
  1588   0012F0  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1589   0012F2  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1590   0012F6  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1591   0012FA  0E02               	movlw	2
  1592   0012FC  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1593   0012FE  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1594   001302  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1595   001306  0E06               	movlw	6
  1596   001308  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1597   00130A  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1598   00130E  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1599   001312  0E0C               	movlw	12
  1600   001314  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1601   001316  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1602   00131A  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1603   00131E  0E38               	movlw	56
  1604   001320  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1605   001322  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1606   001326                     
  1607                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 230:     ret = lcd_8bit_send_command(lcd, 0x80);
  1608   001326  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1609   00132A  0E80               	movlw	128
  1610   00132C  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1611   00132E  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1612   001332  6E42               	movwf	lcd_8bit_initialize@ret^0,c
  1613   001334                     
  1614                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 231:     return ret;
  1615   001334  5042               	movf	lcd_8bit_initialize@ret^0,w,c
  1616   001336  0012               	return		;funcret
  1617   001338                     __end_of_lcd_8bit_initialize:
  1618                           	callstack 0
  1619                           
  1620 ;; *************** function _lcd_8bit_send_command *****************
  1621 ;; Defined at:
  1622 ;;		line 242 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;  lcd             1   10[COMRAM] PTR const struct .
  1625 ;;		 -> lcd_2(10), 
  1626 ;;  command         1   11[COMRAM] unsigned char 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  cnt             1   15[COMRAM] unsigned char 
  1629 ;;  ret             1   14[COMRAM] unsigned char 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      unsigned char 
  1632 ;; Registers used:
  1633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;Total ram usage:        6 bytes
  1644 ;; Hardware stack levels used: 1
  1645 ;; Hardware stack levels required when called: 2
  1646 ;; This function calls:
  1647 ;;		_gpio_pin_write_logic
  1648 ;;		_lcd_8bit_send_enable_signal
  1649 ;; This function is called by:
  1650 ;;		_lcd_8bit_initialize
  1651 ;;		_lcd_8bit_set_cursor
  1652 ;;		_lcd_8bit_send_custom_char
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text11
  1657   00164A                     __ptext11:
  1658                           	callstack 0
  1659   00164A                     _lcd_8bit_send_command:
  1660                           	callstack 26
  1661   00164A                     
  1662                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 244:     uint8 cnt = 0;
  1663   00164A  0E00               	movlw	0
  1664   00164C  6E3E               	movwf	lcd_8bit_send_command@cnt^0,c
  1665                           
  1666                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 245:     if(((void*)0) == lcd){
  1667   00164E  5039               	movf	lcd_8bit_send_command@lcd^0,w,c
  1668   001650  A4D8               	btfss	status,2,c
  1669   001652  EF2D  F00B         	goto	u1161
  1670   001656  EF2F  F00B         	goto	u1160
  1671   00165A                     u1161:
  1672   00165A  EF33  F00B         	goto	l2148
  1673   00165E                     u1160:
  1674   00165E                     
  1675                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 246:         ret = (Std_ReturnType)0x00;
  1676   00165E  0E00               	movlw	0
  1677   001660  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1678                           
  1679                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 247:     }
  1680   001662  EF5E  F00B         	goto	l2164
  1681   001666                     l2148:
  1682   001666  C039  F02F         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1683   00166A  0E00               	movlw	0
  1684   00166C  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1685   00166E  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  1686   001672                     
  1687                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 250:         for(cnt=0; cnt<8; cnt++)
  1688   001672  0E00               	movlw	0
  1689   001674  6E3E               	movwf	lcd_8bit_send_command@cnt^0,c
  1690   001676                     l2156:
  1691   001676  5039               	movf	lcd_8bit_send_command@lcd^0,w,c
  1692   001678  243E               	addwf	lcd_8bit_send_command@cnt^0,w,c
  1693   00167A  0F02               	addlw	2
  1694   00167C  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1695   00167E  C03E  F03B         	movff	lcd_8bit_send_command@cnt,??_lcd_8bit_send_command
  1696   001682  C03A  F03C         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1697   001686  2A3B               	incf	??_lcd_8bit_send_command^0,f,c
  1698   001688  EF48  F00B         	goto	u1174
  1699   00168C                     u1175:
  1700   00168C  90D8               	bcf	status,0,c
  1701   00168E  323C               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1702   001690                     u1174:
  1703   001690  2E3B               	decfsz	??_lcd_8bit_send_command^0,f,c
  1704   001692  EF46  F00B         	goto	u1175
  1705   001696  503C               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1706   001698  0B01               	andlw	1
  1707   00169A  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1708   00169C  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  1709   0016A0                     
  1710                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 253:         }
  1711   0016A0  2A3E               	incf	lcd_8bit_send_command@cnt^0,f,c
  1712   0016A2  0E07               	movlw	7
  1713   0016A4  643E               	cpfsgt	lcd_8bit_send_command@cnt^0,c
  1714   0016A6  EF57  F00B         	goto	u1181
  1715   0016AA  EF59  F00B         	goto	u1180
  1716   0016AE                     u1181:
  1717   0016AE  EF3B  F00B         	goto	l2156
  1718   0016B2                     u1180:
  1719   0016B2                     
  1720                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 254:         ret = lcd_8bit_send_enable_signal(lcd);
  1721   0016B2  C039  F037         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  1722   0016B6  EC93  F00C         	call	_lcd_8bit_send_enable_signal	;wreg free
  1723   0016BA  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1724   0016BC                     l2164:
  1725                           
  1726                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 256:     return ret;
  1727   0016BC  503D               	movf	lcd_8bit_send_command@ret^0,w,c
  1728   0016BE  0012               	return		;funcret
  1729   0016C0                     __end_of_lcd_8bit_send_command:
  1730                           	callstack 0
  1731                           
  1732 ;; *************** function _lcd_8bit_send_enable_signal *****************
  1733 ;; Defined at:
  1734 ;;		line 455 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  lcd             1    8[COMRAM] PTR const struct .
  1737 ;;		 -> lcd_2(10), 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  ret             1    9[COMRAM] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      unsigned char 
  1742 ;; Registers used:
  1743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1749 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;Total ram usage:        2 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 1
  1756 ;; This function calls:
  1757 ;;		_gpio_pin_write_logic
  1758 ;; This function is called by:
  1759 ;;		_lcd_8bit_send_command
  1760 ;;		_lcd_8bit_send_char_data
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text12
  1765   001926                     __ptext12:
  1766                           	callstack 0
  1767   001926                     _lcd_8bit_send_enable_signal:
  1768                           	callstack 26
  1769   001926                     
  1770                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 457:     if(((void*)0) == lcd){
  1771   001926  5037               	movf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1772   001928  A4D8               	btfss	status,2,c
  1773   00192A  EF99  F00C         	goto	u1121
  1774   00192E  EF9B  F00C         	goto	u1120
  1775   001932                     u1121:
  1776   001932  EF9F  F00C         	goto	l2114
  1777   001936                     u1120:
  1778   001936                     
  1779                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 458:         ret = (Std_ReturnType)0x00;
  1780   001936  0E00               	movlw	0
  1781   001938  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1782                           
  1783                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 459:     }
  1784   00193A  EFAF  F00C         	goto	l2118
  1785   00193E                     l2114:
  1786   00193E  2837               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1787   001940  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1788   001942  0E01               	movlw	1
  1789   001944  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1790   001946  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  1791   00194A                     
  1792                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 462:         _delay((unsigned long)((5)*(4000000UL/400
      +                          0000.0)));
  1793   00194A  D000               	nop2		;2 cycle nop
  1794   00194C  D000               	nop2		;2 cycle nop
  1795   00194E  0000               	nop	
  1796                           
  1797                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 463:         ret = gpio_pin_write_logic(&(lcd->lcd_en)
      +                          , GPIO_LOW);
  1798   001950  2837               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1799   001952  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1800   001954  0E00               	movlw	0
  1801   001956  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1802   001958  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  1803   00195C  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1804   00195E                     l2118:
  1805                           
  1806                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 465:     return ret;
  1807   00195E  5038               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  1808   001960  0012               	return		;funcret
  1809   001962                     __end_of_lcd_8bit_send_enable_signal:
  1810                           	callstack 0
  1811                           
  1812 ;; *************** function _lcd_4bit_initialize *****************
  1813 ;; Defined at:
  1814 ;;		line 24 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  lcd             1   14[COMRAM] PTR const struct .
  1817 ;;		 -> lcd_1(6), 
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  ret             1   17[COMRAM] unsigned char 
  1820 ;;  l_data_pins_    1   16[COMRAM] unsigned char 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      unsigned char 
  1823 ;; Registers used:
  1824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1830 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;Total ram usage:        4 bytes
  1835 ;; Hardware stack levels used: 1
  1836 ;; Hardware stack levels required when called: 3
  1837 ;; This function calls:
  1838 ;;		_gpio_pin_initialize
  1839 ;;		_lcd_4bit_send_command
  1840 ;; This function is called by:
  1841 ;;		_ecu_layer_initialize
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text13
  1846   001338                     __ptext13:
  1847                           	callstack 0
  1848   001338                     _lcd_4bit_initialize:
  1849                           	callstack 25
  1850   001338                     
  1851                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 26:     uint8 l_data_pins_counter = 0;
  1852   001338  0E00               	movlw	0
  1853   00133A  6E3F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1854                           
  1855                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 27:     if(((void*)0) == lcd){
  1856   00133C  503D               	movf	lcd_4bit_initialize@lcd^0,w,c
  1857   00133E  A4D8               	btfss	status,2,c
  1858   001340  EFA4  F009         	goto	u1191
  1859   001344  EFA6  F009         	goto	u1190
  1860   001348                     u1191:
  1861   001348  EFA8  F009         	goto	l2172
  1862   00134C                     u1190:
  1863   00134C                     
  1864                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 29:     }
  1865   00134C  EFC3  F009         	goto	l2186
  1866   001350                     l2172:
  1867                           
  1868                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 31:         ret = gpio_pin_initialize(&(lcd->lcd_rs));
  1869   001350  C03D  F037         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@_pin_config
  1870   001354  EC29  F00C         	call	_gpio_pin_initialize	;wreg free
  1871   001358  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1872                           
  1873                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 32:         ret = gpio_pin_initialize(&(lcd->lcd_en));
  1874   00135A  283D               	incf	lcd_4bit_initialize@lcd^0,w,c
  1875   00135C  6E37               	movwf	gpio_pin_initialize@_pin_config^0,c
  1876   00135E  EC29  F00C         	call	_gpio_pin_initialize	;wreg free
  1877   001362  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1878   001364                     
  1879                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 33:         for(l_data_pins_counter = 0; l_data_pins_c
      +                          ounter<4; l_data_pins_counter++){
  1880   001364  0E00               	movlw	0
  1881   001366  6E3F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1882   001368                     l2180:
  1883   001368  503D               	movf	lcd_4bit_initialize@lcd^0,w,c
  1884   00136A  243F               	addwf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
  1885   00136C  0F02               	addlw	2
  1886   00136E  6E37               	movwf	gpio_pin_initialize@_pin_config^0,c
  1887   001370  EC29  F00C         	call	_gpio_pin_initialize	;wreg free
  1888   001374                     
  1889                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:         }
  1890   001374  2A3F               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
  1891   001376  0E03               	movlw	3
  1892   001378  643F               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
  1893   00137A  EFC1  F009         	goto	u1201
  1894   00137E  EFC3  F009         	goto	u1200
  1895   001382                     u1201:
  1896   001382  EFB4  F009         	goto	l2180
  1897   001386                     u1200:
  1898   001386                     l2186:
  1899                           
  1900                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 37:     _delay((unsigned long)((20)*(4000000UL/4000.0)
      +                          ));
  1901   001386  0E1A               	movlw	26
  1902   001388  6E3E               	movwf	??_lcd_4bit_initialize^0,c
  1903   00138A  0EF8               	movlw	248
  1904   00138C                     u1727:
  1905   00138C  2EE8               	decfsz	wreg,f,c
  1906   00138E  D7FE               	bra	u1727
  1907   001390  2E3E               	decfsz	??_lcd_4bit_initialize^0,f,c
  1908   001392  D7FC               	bra	u1727
  1909   001394  D000               	nop2	
  1910   001396  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1911   00139A  0E38               	movlw	56
  1912   00139C  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1913   00139E  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1914   0013A2                     
  1915                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 39:     _delay((unsigned long)((5)*(4000000UL/4000000.
      +                          0)));
  1916   0013A2  D000               	nop2		;2 cycle nop
  1917   0013A4  D000               	nop2		;2 cycle nop
  1918   0013A6  0000               	nop	
  1919   0013A8  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1920   0013AC  0E38               	movlw	56
  1921   0013AE  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1922   0013B0  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1923                           
  1924                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 41:     _delay((unsigned long)((150)*(4000000UL/400000
      +                          0.0)));
  1925   0013B4  0E32               	movlw	50
  1926   0013B6                     u1737:
  1927   0013B6  2EE8               	decfsz	wreg,f,c
  1928   0013B8  D7FE               	bra	u1737
  1929   0013BA  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1930   0013BE  0E38               	movlw	56
  1931   0013C0  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1932   0013C2  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1933   0013C6  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1934   0013CA  0E01               	movlw	1
  1935   0013CC  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1936   0013CE  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1937   0013D2  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1938   0013D6  0E02               	movlw	2
  1939   0013D8  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1940   0013DA  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1941   0013DE  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1942   0013E2  0E06               	movlw	6
  1943   0013E4  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1944   0013E6  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1945   0013EA  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1946   0013EE  0E0C               	movlw	12
  1947   0013F0  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1948   0013F2  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1949   0013F6  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1950   0013FA  0E28               	movlw	40
  1951   0013FC  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1952   0013FE  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1953   001402                     
  1954                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 49:     ret = lcd_4bit_send_command(lcd, 0x80);
  1955   001402  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1956   001406  0E80               	movlw	128
  1957   001408  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1958   00140A  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1959   00140E  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1960   001410                     
  1961                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 50:     return ret;
  1962   001410  5040               	movf	lcd_4bit_initialize@ret^0,w,c
  1963   001412  0012               	return		;funcret
  1964   001414                     __end_of_lcd_4bit_initialize:
  1965                           	callstack 0
  1966                           
  1967 ;; *************** function _lcd_4bit_send_command *****************
  1968 ;; Defined at:
  1969 ;;		line 61 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  lcd             1   11[COMRAM] PTR const struct .
  1972 ;;		 -> lcd_1(6), 
  1973 ;;  command         1   12[COMRAM] unsigned char 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  ret             1   13[COMRAM] unsigned char 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      unsigned char 
  1978 ;; Registers used:
  1979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;Total ram usage:        3 bytes
  1990 ;; Hardware stack levels used: 1
  1991 ;; Hardware stack levels required when called: 2
  1992 ;; This function calls:
  1993 ;;		_gpio_pin_write_logic
  1994 ;;		_lcd_4bit_send_enable_signal
  1995 ;;		_lcd_send_4bits
  1996 ;; This function is called by:
  1997 ;;		_lcd_4bit_initialize
  1998 ;;		_lcd_4bit_send_custom_char
  1999 ;;		_lcd_4bit_set_cursor
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text14
  2004   0017F6                     __ptext14:
  2005                           	callstack 0
  2006   0017F6                     _lcd_4bit_send_command:
  2007                           	callstack 27
  2008   0017F6                     
  2009                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 63:     if(((void*)0) == lcd){
  2010   0017F6  503A               	movf	lcd_4bit_send_command@lcd^0,w,c
  2011   0017F8  A4D8               	btfss	status,2,c
  2012   0017FA  EF01  F00C         	goto	u1151
  2013   0017FE  EF03  F00C         	goto	u1150
  2014   001802                     u1151:
  2015   001802  EF07  F00C         	goto	l2138
  2016   001806                     u1150:
  2017   001806                     
  2018                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 64:         ret = (Std_ReturnType)0x00;
  2019   001806  0E00               	movlw	0
  2020   001808  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2021                           
  2022                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 65:     }
  2023   00180A  EF27  F00C         	goto	l2140
  2024   00180E                     l2138:
  2025                           
  2026                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 67:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_LOW);
  2027   00180E  C03A  F02F         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  2028   001812  0E00               	movlw	0
  2029   001814  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2030   001816  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  2031   00181A  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2032                           
  2033                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 68:         ret = lcd_send_4bits(lcd, (command >> 4));
  2034   00181C  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2035   001820  383B               	swapf	lcd_4bit_send_command@command^0,w,c
  2036   001822  0B0F               	andlw	15
  2037   001824  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  2038   001826  EC60  F00B         	call	_lcd_send_4bits	;wreg free
  2039   00182A  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2040                           
  2041                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 69:         ret = lcd_4bit_send_enable_signal(lcd);
  2042   00182C  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  2043   001830  ECB1  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  2044   001834  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2045                           
  2046                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret = lcd_send_4bits(lcd, command);
  2047   001836  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2048   00183A  C03B  F038         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  2049   00183E  EC60  F00B         	call	_lcd_send_4bits	;wreg free
  2050   001842  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2051                           
  2052                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 71:         ret = lcd_4bit_send_enable_signal(lcd);
  2053   001844  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  2054   001848  ECB1  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  2055   00184C  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2056   00184E                     l2140:
  2057                           
  2058                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 73:     return ret;
  2059   00184E  503C               	movf	lcd_4bit_send_command@ret^0,w,c
  2060   001850  0012               	return		;funcret
  2061   001852                     __end_of_lcd_4bit_send_command:
  2062                           	callstack 0
  2063                           
  2064 ;; *************** function _lcd_send_4bits *****************
  2065 ;; Defined at:
  2066 ;;		line 392 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  lcd             1    8[COMRAM] PTR const struct .
  2069 ;;		 -> lcd_1(6), 
  2070 ;;  _data_comman    1    9[COMRAM] unsigned char 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  ret             1   10[COMRAM] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      unsigned char 
  2075 ;; Registers used:
  2076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;Total ram usage:        3 bytes
  2087 ;; Hardware stack levels used: 1
  2088 ;; Hardware stack levels required when called: 1
  2089 ;; This function calls:
  2090 ;;		_gpio_pin_write_logic
  2091 ;; This function is called by:
  2092 ;;		_lcd_4bit_send_command
  2093 ;;		_lcd_4bit_send_char_data
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text15
  2098   0016C0                     __ptext15:
  2099                           	callstack 0
  2100   0016C0                     _lcd_send_4bits:
  2101                           	callstack 27
  2102   0016C0                     
  2103                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 394:     if(((void*)0) == lcd){
  2104   0016C0  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2105   0016C2  A4D8               	btfss	status,2,c
  2106   0016C4  EF66  F00B         	goto	u1101
  2107   0016C8  EF68  F00B         	goto	u1100
  2108   0016CC                     u1101:
  2109   0016CC  EF6C  F00B         	goto	l2092
  2110   0016D0                     u1100:
  2111   0016D0                     
  2112                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 395:         ret = (Std_ReturnType)0x00;
  2113   0016D0  0E00               	movlw	0
  2114   0016D2  6E39               	movwf	lcd_send_4bits@ret^0,c
  2115                           
  2116                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 396:     }
  2117   0016D4  EF95  F00B         	goto	l2094
  2118   0016D8                     l2092:
  2119                           
  2120                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 398:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[0]), (_data_command >> 0) & (uint8)0x01);
  2121   0016D8  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2122   0016DA  0F02               	addlw	2
  2123   0016DC  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2124   0016DE  5038               	movf	lcd_send_4bits@_data_command^0,w,c
  2125   0016E0  0B01               	andlw	1
  2126   0016E2  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2127   0016E4  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  2128   0016E8  6E39               	movwf	lcd_send_4bits@ret^0,c
  2129                           
  2130                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 399:         ret &= gpio_pin_write_logic(&(lcd->lcd_da
      +                          ta[1]), (_data_command >> 1) & (uint8)0x01);
  2131   0016EA  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2132   0016EC  0F03               	addlw	3
  2133   0016EE  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2134   0016F0  90D8               	bcf	status,0,c
  2135   0016F2  3038               	rrcf	lcd_send_4bits@_data_command^0,w,c
  2136   0016F4  0B01               	andlw	1
  2137   0016F6  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2138   0016F8  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  2139   0016FC  1639               	andwf	lcd_send_4bits@ret^0,f,c
  2140                           
  2141                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 400:         ret &= gpio_pin_write_logic(&(lcd->lcd_da
      +                          ta[2]), (_data_command >> 2) & (uint8)0x01);
  2142   0016FE  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2143   001700  0F04               	addlw	4
  2144   001702  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2145   001704  4038               	rrncf	lcd_send_4bits@_data_command^0,w,c
  2146   001706  42E8               	rrncf	wreg,f,c
  2147   001708  0B3F               	andlw	63
  2148   00170A  0B01               	andlw	1
  2149   00170C  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2150   00170E  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  2151   001712  1639               	andwf	lcd_send_4bits@ret^0,f,c
  2152                           
  2153                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 401:         ret &= gpio_pin_write_logic(&(lcd->lcd_da
      +                          ta[3]), (_data_command >> 3) & (uint8)0x01);
  2154   001714  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2155   001716  0F05               	addlw	5
  2156   001718  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2157   00171A  3838               	swapf	lcd_send_4bits@_data_command^0,w,c
  2158   00171C  46E8               	rlncf	wreg,f,c
  2159   00171E  0B1F               	andlw	31
  2160   001720  0B01               	andlw	1
  2161   001722  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2162   001724  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  2163   001728  1639               	andwf	lcd_send_4bits@ret^0,f,c
  2164   00172A                     l2094:
  2165                           
  2166                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 403:     return ret;
  2167   00172A  5039               	movf	lcd_send_4bits@ret^0,w,c
  2168   00172C  0012               	return		;funcret
  2169   00172E                     __end_of_lcd_send_4bits:
  2170                           	callstack 0
  2171                           
  2172 ;; *************** function _lcd_4bit_send_enable_signal *****************
  2173 ;; Defined at:
  2174 ;;		line 413 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  lcd             1    8[COMRAM] PTR const struct .
  2177 ;;		 -> lcd_1(6), 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  ret             1    9[COMRAM] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      unsigned char 
  2182 ;; Registers used:
  2183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2189 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;Total ram usage:        2 bytes
  2194 ;; Hardware stack levels used: 1
  2195 ;; Hardware stack levels required when called: 1
  2196 ;; This function calls:
  2197 ;;		_gpio_pin_write_logic
  2198 ;; This function is called by:
  2199 ;;		_lcd_4bit_send_command
  2200 ;;		_lcd_4bit_send_char_data
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text16
  2205   001962                     __ptext16:
  2206                           	callstack 0
  2207   001962                     _lcd_4bit_send_enable_signal:
  2208                           	callstack 27
  2209   001962                     
  2210                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 415:     if(((void*)0) == lcd){
  2211   001962  5037               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2212   001964  A4D8               	btfss	status,2,c
  2213   001966  EFB7  F00C         	goto	u1111
  2214   00196A  EFB9  F00C         	goto	u1110
  2215   00196E                     u1111:
  2216   00196E  EFBD  F00C         	goto	l2102
  2217   001972                     u1110:
  2218   001972                     
  2219                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 416:         ret = (Std_ReturnType)0x00;
  2220   001972  0E00               	movlw	0
  2221   001974  6E38               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2222                           
  2223                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 417:     }
  2224   001976  EFCD  F00C         	goto	l2106
  2225   00197A                     l2102:
  2226   00197A  2837               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2227   00197C  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2228   00197E  0E01               	movlw	1
  2229   001980  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2230   001982  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  2231   001986                     
  2232                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 420:         _delay((unsigned long)((5)*(4000000UL/400
      +                          0000.0)));
  2233   001986  D000               	nop2		;2 cycle nop
  2234   001988  D000               	nop2		;2 cycle nop
  2235   00198A  0000               	nop	
  2236                           
  2237                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 421:         ret = gpio_pin_write_logic(&(lcd->lcd_en)
      +                          , GPIO_LOW);
  2238   00198C  2837               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2239   00198E  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2240   001990  0E00               	movlw	0
  2241   001992  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2242   001994  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  2243   001998  6E38               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2244   00199A                     l2106:
  2245                           
  2246                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 423:     return ret;
  2247   00199A  5038               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  2248   00199C  0012               	return		;funcret
  2249   00199E                     __end_of_lcd_4bit_send_enable_signal:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function _gpio_pin_initialize *****************
  2253 ;; Defined at:
  2254 ;;		line 134 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  _pin_config     1    8[COMRAM] PTR struct .
  2257 ;;		 -> lcd_2$lcd_data(8), lcd_2$lcd_en(1), lcd_2$lcd_rs(1), lcd_2(10), 
  2258 ;;		 -> lcd_1$lcd_data(4), lcd_1$lcd_en(1), lcd_1$lcd_rs(1), lcd_1(6), 
  2259 ;;		 -> led_initialize@pin_obj(1), 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  ret             1   10[COMRAM] unsigned char 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      unsigned char 
  2264 ;; Registers used:
  2265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2271 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;Total ram usage:        3 bytes
  2276 ;; Hardware stack levels used: 1
  2277 ;; Hardware stack levels required when called: 1
  2278 ;; This function calls:
  2279 ;;		_gpio_pin_direction_initialize
  2280 ;;		_gpio_pin_write_logic
  2281 ;; This function is called by:
  2282 ;;		_lcd_4bit_initialize
  2283 ;;		_lcd_8bit_initialize
  2284 ;;		_keypad_initialize
  2285 ;;		_led_initialize
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text17
  2290   001852                     __ptext17:
  2291                           	callstack 0
  2292   001852                     _gpio_pin_initialize:
  2293                           	callstack 26
  2294   001852                     
  2295                           ;MCAL_Layer/GPIO/hal_gpio.c: 136:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           (8 - 1))
  2296   001852  5037               	movf	gpio_pin_initialize@_pin_config^0,w,c
  2297   001854  B4D8               	btfsc	status,2,c
  2298   001856  EF2F  F00C         	goto	u1131
  2299   00185A  EF31  F00C         	goto	u1130
  2300   00185E                     u1131:
  2301   00185E  EF41  F00C         	goto	l2126
  2302   001862                     u1130:
  2303   001862  5037               	movf	gpio_pin_initialize@_pin_config^0,w,c
  2304   001864  6ED9               	movwf	fsr2l,c
  2305   001866  6ADA               	clrf	fsr2h,c
  2306   001868  30DF               	rrcf	223,w,c
  2307   00186A  32E8               	rrcf	wreg,f,c
  2308   00186C  32E8               	rrcf	wreg,f,c
  2309   00186E  0B07               	andlw	7
  2310   001870  6E38               	movwf	??_gpio_pin_initialize^0,c
  2311   001872  0E07               	movlw	7
  2312   001874  6438               	cpfsgt	??_gpio_pin_initialize^0,c
  2313   001876  EF3F  F00C         	goto	u1141
  2314   00187A  EF41  F00C         	goto	u1140
  2315   00187E                     u1141:
  2316   00187E  EF45  F00C         	goto	l2128
  2317   001882                     u1140:
  2318   001882                     l2126:
  2319                           
  2320                           ;MCAL_Layer/GPIO/hal_gpio.c: 137:     {;MCAL_Layer/GPIO/hal_gpio.c: 138:         ret = (
      +                          Std_ReturnType)0x00;
  2321   001882  0E00               	movlw	0
  2322   001884  6E39               	movwf	gpio_pin_initialize@ret^0,c
  2323                           
  2324                           ;MCAL_Layer/GPIO/hal_gpio.c: 139:     }
  2325   001886  EF51  F00C         	goto	l2130
  2326   00188A                     l2128:
  2327                           
  2328                           ;MCAL_Layer/GPIO/hal_gpio.c: 141:     {;MCAL_Layer/GPIO/hal_gpio.c: 142:         ret = g
      +                          pio_pin_direction_initialize(_pin_config);
  2329   00188A  C037  F02F         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  2330   00188E  EC13  F008         	call	_gpio_pin_direction_initialize	;wreg free
  2331   001892  6E39               	movwf	gpio_pin_initialize@ret^0,c
  2332                           
  2333                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:         ret = gpio_pin_write_logic(_pin_config, GPIO_L
      +                          OW);
  2334   001894  C037  F02F         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  2335   001898  0E00               	movlw	0
  2336   00189A  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2337   00189C  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  2338   0018A0  6E39               	movwf	gpio_pin_initialize@ret^0,c
  2339   0018A2                     l2130:
  2340                           
  2341                           ;MCAL_Layer/GPIO/hal_gpio.c: 145:     return ret;
  2342   0018A2  5039               	movf	gpio_pin_initialize@ret^0,w,c
  2343   0018A4  0012               	return		;funcret
  2344   0018A6                     __end_of_gpio_pin_initialize:
  2345                           	callstack 0
  2346                           
  2347 ;; *************** function _gpio_pin_write_logic *****************
  2348 ;; Defined at:
  2349 ;;		line 78 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  _pin_config     1    0[COMRAM] PTR struct .
  2352 ;;		 -> lcd_2$lcd_data(8), lcd_2$lcd_en(1), lcd_2$lcd_rs(1), lcd_2(10), 
  2353 ;;		 -> lcd_1$lcd_data(4), lcd_1$lcd_en(1), lcd_1$lcd_rs(1), lcd_1(6), 
  2354 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), 
  2355 ;;		 -> led_initialize@pin_obj(1), 
  2356 ;;  logic           1    1[COMRAM] enum E2978
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  ret             1    7[COMRAM] unsigned char 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      unsigned char 
  2361 ;; Registers used:
  2362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2368 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;Total ram usage:        8 bytes
  2373 ;; Hardware stack levels used: 1
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_lcd_4bit_send_command
  2378 ;;		_lcd_4bit_send_char_data
  2379 ;;		_lcd_8bit_send_command
  2380 ;;		_lcd_8bit_send_char_data
  2381 ;;		_lcd_send_4bits
  2382 ;;		_lcd_4bit_send_enable_signal
  2383 ;;		_lcd_8bit_send_enable_signal
  2384 ;;		_gpio_pin_initialize
  2385 ;;		_seven_segment_write_number
  2386 ;;		_dc_motor_move_right
  2387 ;;		_dc_motor_move_left
  2388 ;;		_dc_motor_stop
  2389 ;;		_keypad_get_value
  2390 ;;		_led_turn_on
  2391 ;;		_led_turn_off
  2392 ;;		_relay_turn_on
  2393 ;;		_relay_turn_off
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text18
  2398   00114C                     __ptext18:
  2399                           	callstack 0
  2400   00114C                     _gpio_pin_write_logic:
  2401                           	callstack 26
  2402   00114C                     
  2403                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  2404   00114C  0E01               	movlw	1
  2405   00114E  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  2406                           
  2407                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          (8 - 1))
  2408   001150  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2409   001152  B4D8               	btfsc	status,2,c
  2410   001154  EFAE  F008         	goto	u1001
  2411   001158  EFB0  F008         	goto	u1000
  2412   00115C                     u1001:
  2413   00115C  EFC0  F008         	goto	l2048
  2414   001160                     u1000:
  2415   001160  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2416   001162  6ED9               	movwf	fsr2l,c
  2417   001164  6ADA               	clrf	fsr2h,c
  2418   001166  30DF               	rrcf	223,w,c
  2419   001168  32E8               	rrcf	wreg,f,c
  2420   00116A  32E8               	rrcf	wreg,f,c
  2421   00116C  0B07               	andlw	7
  2422   00116E  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2423   001170  0E07               	movlw	7
  2424   001172  6431               	cpfsgt	??_gpio_pin_write_logic^0,c
  2425   001174  EFBE  F008         	goto	u1011
  2426   001178  EFC0  F008         	goto	u1010
  2427   00117C                     u1011:
  2428   00117C  EF17  F009         	goto	l2056
  2429   001180                     u1010:
  2430   001180                     l2048:
  2431                           
  2432                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:     {;MCAL_Layer/GPIO/hal_gpio.c: 82:         ret = (St
      +                          d_ReturnType)0x00;
  2433   001180  0E00               	movlw	0
  2434   001182  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  2435                           
  2436                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:     }
  2437   001184  EF2C  F009         	goto	l2058
  2438   001188                     l2050:
  2439                           
  2440                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:                 (*lat_registers[_pin_config->port] &= ~
      +                          (((uint8)1) << _pin_config->pin));
  2441   001188  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2442   00118A  6ED9               	movwf	fsr2l,c
  2443   00118C  6ADA               	clrf	fsr2h,c
  2444   00118E  30DF               	rrcf	223,w,c
  2445   001190  32E8               	rrcf	wreg,f,c
  2446   001192  32E8               	rrcf	wreg,f,c
  2447   001194  0B07               	andlw	7
  2448   001196  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2449   001198  0E01               	movlw	1
  2450   00119A  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2451   00119C  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  2452   00119E  EFD3  F008         	goto	u1024
  2453   0011A2                     u1025:
  2454   0011A2  90D8               	bcf	status,0,c
  2455   0011A4  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2456   0011A6                     u1024:
  2457   0011A6  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  2458   0011A8  EFD1  F008         	goto	u1025
  2459   0011AC  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2460   0011AE  0AFF               	xorlw	255
  2461   0011B0  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2462   0011B2  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2463   0011B4  6ED9               	movwf	fsr2l,c
  2464   0011B6  6ADA               	clrf	fsr2h,c
  2465   0011B8  50DF               	movf	223,w,c
  2466   0011BA  0B07               	andlw	7
  2467   0011BC  0D02               	mullw	2
  2468   0011BE  50F3               	movf	243,w,c
  2469   0011C0  0F0B               	addlw	low _lat_registers
  2470   0011C2  6ED9               	movwf	fsr2l,c
  2471   0011C4  6ADA               	clrf	fsr2h,c
  2472   0011C6  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+3
  2473   0011CA  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+4
  2474   0011CE  C034  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2475   0011D2  C035  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2476   0011D6  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2477   0011D8  16DF               	andwf	indf2,f,c
  2478                           
  2479                           ;MCAL_Layer/GPIO/hal_gpio.c: 90:                 break;
  2480   0011DA  EF2C  F009         	goto	l2058
  2481   0011DE                     l2052:
  2482                           
  2483                           ;MCAL_Layer/GPIO/hal_gpio.c: 92:                 (*lat_registers[_pin_config->port] |= (
      +                          ((uint8)1) << _pin_config->pin));
  2484   0011DE  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2485   0011E0  6ED9               	movwf	fsr2l,c
  2486   0011E2  6ADA               	clrf	fsr2h,c
  2487   0011E4  30DF               	rrcf	223,w,c
  2488   0011E6  32E8               	rrcf	wreg,f,c
  2489   0011E8  32E8               	rrcf	wreg,f,c
  2490   0011EA  0B07               	andlw	7
  2491   0011EC  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2492   0011EE  0E01               	movlw	1
  2493   0011F0  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2494   0011F2  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  2495   0011F4  EFFE  F008         	goto	u1034
  2496   0011F8                     u1035:
  2497   0011F8  90D8               	bcf	status,0,c
  2498   0011FA  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2499   0011FC                     u1034:
  2500   0011FC  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  2501   0011FE  EFFC  F008         	goto	u1035
  2502   001202  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2503   001204  6ED9               	movwf	fsr2l,c
  2504   001206  6ADA               	clrf	fsr2h,c
  2505   001208  50DF               	movf	223,w,c
  2506   00120A  0B07               	andlw	7
  2507   00120C  0D02               	mullw	2
  2508   00120E  50F3               	movf	243,w,c
  2509   001210  0F0B               	addlw	low _lat_registers
  2510   001212  6ED9               	movwf	fsr2l,c
  2511   001214  6ADA               	clrf	fsr2h,c
  2512   001216  CFDE F033          	movff	postinc2,??_gpio_pin_write_logic+2
  2513   00121A  CFDD F034          	movff	postdec2,??_gpio_pin_write_logic+3
  2514   00121E  C033  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2515   001222  C034  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2516   001226  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2517   001228  12DF               	iorwf	indf2,f,c
  2518                           
  2519                           ;MCAL_Layer/GPIO/hal_gpio.c: 93:                 break;
  2520   00122A  EF2C  F009         	goto	l2058
  2521   00122E                     l2056:
  2522   00122E  5030               	movf	gpio_pin_write_logic@logic^0,w,c
  2523   001230  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2524   001232  6A32               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2525                           
  2526                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2527                           ; Switch size 1, requested type "simple"
  2528                           ; Number of cases is 1, Range of values is 0 to 0
  2529                           ; switch strategies available:
  2530                           ; Name         Instructions Cycles
  2531                           ; simple_byte            4     3 (average)
  2532                           ;	Chosen strategy is simple_byte
  2533   001234  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2534   001236  0A00               	xorlw	0	; case 0
  2535   001238  B4D8               	btfsc	status,2,c
  2536   00123A  EF21  F009         	goto	l2758
  2537   00123E  EFC0  F008         	goto	l2048
  2538   001242                     l2758:
  2539                           
  2540                           ; Switch size 1, requested type "simple"
  2541                           ; Number of cases is 2, Range of values is 0 to 1
  2542                           ; switch strategies available:
  2543                           ; Name         Instructions Cycles
  2544                           ; simple_byte            7     4 (average)
  2545                           ;	Chosen strategy is simple_byte
  2546   001242  5031               	movf	??_gpio_pin_write_logic^0,w,c
  2547   001244  0A00               	xorlw	0	; case 0
  2548   001246  B4D8               	btfsc	status,2,c
  2549   001248  EFC4  F008         	goto	l2050
  2550   00124C  0A01               	xorlw	1	; case 1
  2551   00124E  B4D8               	btfsc	status,2,c
  2552   001250  EFEF  F008         	goto	l2052
  2553   001254  EFC0  F008         	goto	l2048
  2554   001258                     l2058:
  2555                           
  2556                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:     return ret;
  2557   001258  5036               	movf	gpio_pin_write_logic@ret^0,w,c
  2558   00125A  0012               	return		;funcret
  2559   00125C                     __end_of_gpio_pin_write_logic:
  2560                           	callstack 0
  2561                           
  2562 ;; *************** function _gpio_pin_direction_initialize *****************
  2563 ;; Defined at:
  2564 ;;		line 22 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  _pin_config     1    0[COMRAM] PTR struct .
  2567 ;;		 -> lcd_2$lcd_data(8), lcd_2$lcd_en(1), lcd_2$lcd_rs(1), lcd_2(10), 
  2568 ;;		 -> lcd_1$lcd_data(4), lcd_1$lcd_en(1), lcd_1$lcd_rs(1), lcd_1(6), 
  2569 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  ret             1    6[COMRAM] unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      unsigned char 
  2574 ;; Registers used:
  2575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2581 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;Total ram usage:        7 bytes
  2586 ;; Hardware stack levels used: 1
  2587 ;; This function calls:
  2588 ;;		Nothing
  2589 ;; This function is called by:
  2590 ;;		_gpio_pin_initialize
  2591 ;;		_seven_segment_initialize
  2592 ;;		_button_initialize
  2593 ;;		_dc_motor_initialize
  2594 ;;		_keypad_initialize
  2595 ;;		_relay_initialize
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text19
  2600   001026                     __ptext19:
  2601                           	callstack 0
  2602   001026                     _gpio_pin_direction_initialize:
  2603                           	callstack 26
  2604   001026                     
  2605                           ;MCAL_Layer/GPIO/hal_gpio.c: 22: Std_ReturnType gpio_pin_direction_initialize(pin_config
      +                          _t *_pin_config);MCAL_Layer/GPIO/hal_gpio.c: 23: {;MCAL_Layer/GPIO/hal_gpio.c: 24:     S
      +                          td_ReturnType ret = (Std_ReturnType)0x01 ;
  2606   001026  0E01               	movlw	1
  2607   001028  6E35               	movwf	gpio_pin_direction_initialize@ret^0,c
  2608                           
  2609                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          (8 - 1))
  2610   00102A  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2611   00102C  B4D8               	btfsc	status,2,c
  2612   00102E  EF1B  F008         	goto	u1041
  2613   001032  EF1D  F008         	goto	u1040
  2614   001036                     u1041:
  2615   001036  EF2D  F008         	goto	l2070
  2616   00103A                     u1040:
  2617   00103A  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2618   00103C  6ED9               	movwf	fsr2l,c
  2619   00103E  6ADA               	clrf	fsr2h,c
  2620   001040  30DF               	rrcf	223,w,c
  2621   001042  32E8               	rrcf	wreg,f,c
  2622   001044  32E8               	rrcf	wreg,f,c
  2623   001046  0B07               	andlw	7
  2624   001048  6E30               	movwf	??_gpio_pin_direction_initialize^0,c
  2625   00104A  0E07               	movlw	7
  2626   00104C  6430               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  2627   00104E  EF2B  F008         	goto	u1051
  2628   001052  EF2D  F008         	goto	u1050
  2629   001056                     u1051:
  2630   001056  EF84  F008         	goto	l2078
  2631   00105A                     u1050:
  2632   00105A                     l2070:
  2633                           
  2634                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     {;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret = (St
      +                          d_ReturnType)0x00;
  2635   00105A  0E00               	movlw	0
  2636   00105C  6E35               	movwf	gpio_pin_direction_initialize@ret^0,c
  2637                           
  2638                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }
  2639   00105E  EFA4  F008         	goto	l2080
  2640   001062                     l2072:
  2641                           
  2642                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 (*tris_registers[_pin_config->port] &= 
      +                          ~(((uint8)1) << _pin_config->pin));
  2643   001062  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2644   001064  6ED9               	movwf	fsr2l,c
  2645   001066  6ADA               	clrf	fsr2h,c
  2646   001068  30DF               	rrcf	223,w,c
  2647   00106A  32E8               	rrcf	wreg,f,c
  2648   00106C  32E8               	rrcf	wreg,f,c
  2649   00106E  0B07               	andlw	7
  2650   001070  6E30               	movwf	??_gpio_pin_direction_initialize^0,c
  2651   001072  0E01               	movlw	1
  2652   001074  6E31               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  2653   001076  2A30               	incf	??_gpio_pin_direction_initialize^0,f,c
  2654   001078  EF40  F008         	goto	u1064
  2655   00107C                     u1065:
  2656   00107C  90D8               	bcf	status,0,c
  2657   00107E  3631               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  2658   001080                     u1064:
  2659   001080  2E30               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  2660   001082  EF3E  F008         	goto	u1065
  2661   001086  5031               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2662   001088  0AFF               	xorlw	255
  2663   00108A  6E32               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  2664   00108C  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2665   00108E  6ED9               	movwf	fsr2l,c
  2666   001090  6ADA               	clrf	fsr2h,c
  2667   001092  50DF               	movf	223,w,c
  2668   001094  0B07               	andlw	7
  2669   001096  0D02               	mullw	2
  2670   001098  50F3               	movf	243,w,c
  2671   00109A  0F15               	addlw	low _tris_registers
  2672   00109C  6ED9               	movwf	fsr2l,c
  2673   00109E  6ADA               	clrf	fsr2h,c
  2674   0010A0  CFDE F033          	movff	postinc2,??_gpio_pin_direction_initialize+3
  2675   0010A4  CFDD F034          	movff	postdec2,??_gpio_pin_direction_initialize+4
  2676   0010A8  C033  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  2677   0010AC  C034  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  2678   0010B0  5032               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  2679   0010B2  16DF               	andwf	indf2,f,c
  2680                           
  2681                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
  2682   0010B4  EFA4  F008         	goto	l2080
  2683   0010B8                     l2074:
  2684                           
  2685                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] |= 
      +                          (((uint8)1) << _pin_config->pin));
  2686   0010B8  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2687   0010BA  6ED9               	movwf	fsr2l,c
  2688   0010BC  6ADA               	clrf	fsr2h,c
  2689   0010BE  30DF               	rrcf	223,w,c
  2690   0010C0  32E8               	rrcf	wreg,f,c
  2691   0010C2  32E8               	rrcf	wreg,f,c
  2692   0010C4  0B07               	andlw	7
  2693   0010C6  6E30               	movwf	??_gpio_pin_direction_initialize^0,c
  2694   0010C8  0E01               	movlw	1
  2695   0010CA  6E31               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  2696   0010CC  2A30               	incf	??_gpio_pin_direction_initialize^0,f,c
  2697   0010CE  EF6B  F008         	goto	u1074
  2698   0010D2                     u1075:
  2699   0010D2  90D8               	bcf	status,0,c
  2700   0010D4  3631               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  2701   0010D6                     u1074:
  2702   0010D6  2E30               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  2703   0010D8  EF69  F008         	goto	u1075
  2704   0010DC  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2705   0010DE  6ED9               	movwf	fsr2l,c
  2706   0010E0  6ADA               	clrf	fsr2h,c
  2707   0010E2  50DF               	movf	223,w,c
  2708   0010E4  0B07               	andlw	7
  2709   0010E6  0D02               	mullw	2
  2710   0010E8  50F3               	movf	243,w,c
  2711   0010EA  0F15               	addlw	low _tris_registers
  2712   0010EC  6ED9               	movwf	fsr2l,c
  2713   0010EE  6ADA               	clrf	fsr2h,c
  2714   0010F0  CFDE F032          	movff	postinc2,??_gpio_pin_direction_initialize+2
  2715   0010F4  CFDD F033          	movff	postdec2,??_gpio_pin_direction_initialize+3
  2716   0010F8  C032  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  2717   0010FC  C033  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  2718   001100  5031               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2719   001102  12DF               	iorwf	indf2,f,c
  2720                           
  2721                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 break;
  2722   001104  EFA4  F008         	goto	l2080
  2723   001108                     l2078:
  2724   001108  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2725   00110A  6ED9               	movwf	fsr2l,c
  2726   00110C  6ADA               	clrf	fsr2h,c
  2727   00110E  BCDF               	btfsc	indf2,6,c
  2728   001110  EF8C  F008         	goto	u1081
  2729   001114  EF8F  F008         	goto	u1080
  2730   001118                     u1081:
  2731   001118  0E01               	movlw	1
  2732   00111A  EF90  F008         	goto	u1090
  2733   00111E                     u1080:
  2734   00111E  0E00               	movlw	0
  2735   001120                     u1090:
  2736   001120  6E30               	movwf	??_gpio_pin_direction_initialize^0,c
  2737   001122  6A31               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  2738                           
  2739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2740                           ; Switch size 1, requested type "simple"
  2741                           ; Number of cases is 1, Range of values is 0 to 0
  2742                           ; switch strategies available:
  2743                           ; Name         Instructions Cycles
  2744                           ; simple_byte            4     3 (average)
  2745                           ;	Chosen strategy is simple_byte
  2746   001124  5031               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2747   001126  0A00               	xorlw	0	; case 0
  2748   001128  B4D8               	btfsc	status,2,c
  2749   00112A  EF99  F008         	goto	l2760
  2750   00112E  EF2D  F008         	goto	l2070
  2751   001132                     l2760:
  2752                           
  2753                           ; Switch size 1, requested type "simple"
  2754                           ; Number of cases is 2, Range of values is 0 to 1
  2755                           ; switch strategies available:
  2756                           ; Name         Instructions Cycles
  2757                           ; simple_byte            7     4 (average)
  2758                           ;	Chosen strategy is simple_byte
  2759   001132  5030               	movf	??_gpio_pin_direction_initialize^0,w,c
  2760   001134  0A00               	xorlw	0	; case 0
  2761   001136  B4D8               	btfsc	status,2,c
  2762   001138  EF31  F008         	goto	l2072
  2763   00113C  0A01               	xorlw	1	; case 1
  2764   00113E  B4D8               	btfsc	status,2,c
  2765   001140  EF5C  F008         	goto	l2074
  2766   001144  EF2D  F008         	goto	l2070
  2767   001148                     l2080:
  2768                           
  2769                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:     return ret;
  2770   001148  5035               	movf	gpio_pin_direction_initialize@ret^0,w,c
  2771   00114A  0012               	return		;funcret
  2772   00114C                     __end_of_gpio_pin_direction_initialize:
  2773                           	callstack 0
  2774                           
  2775                           	psect	rparam
  2776   000000                     
  2777                           	psect	config
  2778                           
  2779                           ; Padding undefined space
  2780   300000                     	org	3145728
  2781   300000  FF                 	db	255
  2782                           
  2783                           ;Config register CONFIG1H @ 0x300001
  2784                           ;	Oscillator Selection bits
  2785                           ;	OSC = HS, HS oscillator
  2786                           ;	Fail-Safe Clock Monitor Enable bit
  2787                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2788                           ;	Internal/External Oscillator Switchover bit
  2789                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2790   300001                     	org	3145729
  2791   300001  02                 	db	2
  2792                           
  2793                           ;Config register CONFIG2L @ 0x300002
  2794                           ;	Power-up Timer Enable bit
  2795                           ;	PWRT = OFF, PWRT disabled
  2796                           ;	Brown-out Reset Enable bits
  2797                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2798                           ;	Brown Out Reset Voltage bits
  2799                           ;	BORV = 1, 
  2800   300002                     	org	3145730
  2801   300002  09                 	db	9
  2802                           
  2803                           ;Config register CONFIG2H @ 0x300003
  2804                           ;	Watchdog Timer Enable bit
  2805                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2806                           ;	Watchdog Timer Postscale Select bits
  2807                           ;	WDTPS = 32768, 1:32768
  2808   300003                     	org	3145731
  2809   300003  1E                 	db	30
  2810                           
  2811                           ; Padding undefined space
  2812   300004                     	org	3145732
  2813   300004  FF                 	db	255
  2814                           
  2815                           ;Config register CONFIG3H @ 0x300005
  2816                           ;	CCP2 MUX bit
  2817                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2818                           ;	PORTB A/D Enable bit
  2819                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2820                           ;	Low-Power Timer1 Oscillator Enable bit
  2821                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2822                           ;	MCLR Pin Enable bit
  2823                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2824   300005                     	org	3145733
  2825   300005  81                 	db	129
  2826                           
  2827                           ;Config register CONFIG4L @ 0x300006
  2828                           ;	Stack Full/Underflow Reset Enable bit
  2829                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2830                           ;	Single-Supply ICSP Enable bit
  2831                           ;	LVP = OFF, Single-Supply ICSP disabled
  2832                           ;	Extended Instruction Set Enable bit
  2833                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2834                           ;	Background Debugger Enable bit
  2835                           ;	DEBUG = 0x1, unprogrammed default
  2836   300006                     	org	3145734
  2837   300006  81                 	db	129
  2838                           
  2839                           ; Padding undefined space
  2840   300007                     	org	3145735
  2841   300007  FF                 	db	255
  2842                           
  2843                           ;Config register CONFIG5L @ 0x300008
  2844                           ;	Code Protection bit
  2845                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2846                           ;	Code Protection bit
  2847                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2848                           ;	Code Protection bit
  2849                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2850                           ;	Code Protection bit
  2851                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2852   300008                     	org	3145736
  2853   300008  0F                 	db	15
  2854                           
  2855                           ;Config register CONFIG5H @ 0x300009
  2856                           ;	Boot Block Code Protection bit
  2857                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2858                           ;	Data EEPROM Code Protection bit
  2859                           ;	CPD = OFF, Data EEPROM not code-protected
  2860   300009                     	org	3145737
  2861   300009  C0                 	db	192
  2862                           
  2863                           ;Config register CONFIG6L @ 0x30000A
  2864                           ;	Write Protection bit
  2865                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2866                           ;	Write Protection bit
  2867                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2868                           ;	Write Protection bit
  2869                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2870                           ;	Write Protection bit
  2871                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2872   30000A                     	org	3145738
  2873   30000A  0F                 	db	15
  2874                           
  2875                           ;Config register CONFIG6H @ 0x30000B
  2876                           ;	Configuration Register Write Protection bit
  2877                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2878                           ;	Boot Block Write Protection bit
  2879                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2880                           ;	Data EEPROM Write Protection bit
  2881                           ;	WRTD = OFF, Data EEPROM not write-protected
  2882   30000B                     	org	3145739
  2883   30000B  E0                 	db	224
  2884                           
  2885                           ;Config register CONFIG7L @ 0x30000C
  2886                           ;	Table Read Protection bit
  2887                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2888                           ;	Table Read Protection bit
  2889                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2890                           ;	Table Read Protection bit
  2891                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2892                           ;	Table Read Protection bit
  2893                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2894   30000C                     	org	3145740
  2895   30000C  0F                 	db	15
  2896                           
  2897                           ;Config register CONFIG7H @ 0x30000D
  2898                           ;	Boot Block Table Read Protection bit
  2899                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2900   30000D                     	org	3145741
  2901   30000D  40                 	db	64
  2902                           tosu	equ	0xFFF
  2903                           tosh	equ	0xFFE
  2904                           tosl	equ	0xFFD
  2905                           stkptr	equ	0xFFC
  2906                           pclatu	equ	0xFFB
  2907                           pclath	equ	0xFFA
  2908                           pcl	equ	0xFF9
  2909                           tblptru	equ	0xFF8
  2910                           tblptrh	equ	0xFF7
  2911                           tblptrl	equ	0xFF6
  2912                           tablat	equ	0xFF5
  2913                           prodh	equ	0xFF4
  2914                           prodl	equ	0xFF3
  2915                           indf0	equ	0xFEF
  2916                           postinc0	equ	0xFEE
  2917                           postdec0	equ	0xFED
  2918                           preinc0	equ	0xFEC
  2919                           plusw0	equ	0xFEB
  2920                           fsr0h	equ	0xFEA
  2921                           fsr0l	equ	0xFE9
  2922                           wreg	equ	0xFE8
  2923                           indf1	equ	0xFE7
  2924                           postinc1	equ	0xFE6
  2925                           postdec1	equ	0xFE5
  2926                           preinc1	equ	0xFE4
  2927                           plusw1	equ	0xFE3
  2928                           fsr1h	equ	0xFE2
  2929                           fsr1l	equ	0xFE1
  2930                           bsr	equ	0xFE0
  2931                           indf2	equ	0xFDF
  2932                           postinc2	equ	0xFDE
  2933                           postdec2	equ	0xFDD
  2934                           preinc2	equ	0xFDC
  2935                           plusw2	equ	0xFDB
  2936                           fsr2h	equ	0xFDA
  2937                           fsr2l	equ	0xFD9
  2938                           status	equ	0xFD8

Data Sizes:
    Strings     12
    Constant    24
    Data        46
    BSS         7
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     39      93
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_initialize@_pin_config	PTR struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_1$lcd_en(COMRAM[1]), lcd_1$lcd_rs(COMRAM[1]), 
		 -> lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), lcd_2$lcd_en(COMRAM[1]), lcd_2$lcd_rs(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_1$lcd_en(COMRAM[1]), lcd_1$lcd_rs(COMRAM[1]), 
		 -> lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), lcd_2$lcd_en(COMRAM[1]), lcd_2$lcd_rs(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_1$lcd_en(COMRAM[1]), lcd_1$lcd_rs(COMRAM[1]), 
		 -> lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), lcd_2$lcd_en(COMRAM[1]), lcd_2$lcd_rs(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), 
		 -> relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_custom_char@_chr	PTR const unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), 

    lcd_4bit_send_custom_char@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 9
		 -> STR_4(CODE[9]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S1256$buffer	PTR unsigned char  size(2) Largest target is 0

    S1256$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_4bit_send_custom_char
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _lcd_4bit_send_custom_char->_lcd_4bit_send_char_data_pos
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _ecu_layer_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  140792
                           _app_init
          _lcd_4bit_send_custom_char
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             5     1      4   24411
                                             22 COMRAM     5     1      4
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  6     3      3   13064
                                             16 COMRAM     6     3      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data                              6     4      2   10862
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_custom_char                           14     7      7   71722
                                             25 COMRAM    14     7      7
            _lcd_4bit_send_char_data
        _lcd_4bit_send_char_data_pos
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data_pos                          5     1      4   36096
                                             20 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_set_cursor                                  6     3      3   18918
                                             14 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              3     1      2   16716
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0   44659
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   44659
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  4     3      1   19401
                                             16 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   12382
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          2     1      1    5135
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  4     3      1   25255
                                             14 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_command                                3     1      2   18236
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (3) _lcd_send_4bits                                       3     1      2    5725
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_enable_signal                          2     1      1    5287
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  3     2      1    6552
                                              8 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4891
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     6      1     939
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic
   _lcd_4bit_send_custom_char
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_send_char_data_pos
       _lcd_4bit_send_char_data
       _lcd_4bit_set_cursor
         _lcd_4bit_send_command
     _lcd_4bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bit_send_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     27      5D       1       73.2%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5D      39        0.0%
DATA                 0      0      5D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 08 03:59:31 2024

                         ?_lcd_send_4bits 0037                                        l71 1412  
                                      l81 17F4                                        l76 1850  
                                      l86 1924                                       l130 1648  
                                     l123 16BE                                       l116 1336  
                                     l109 15D2                                       l151 1798  
                                     l402 125A                                       l163 172C  
                                     l183 1960                                       l335 1A0E  
                                     l416 18A4                                       l168 199C  
                                     l193 14AA                                       l178 1542  
                                     l383 114A                                       l479 1A14  
                                     _ret 005D       __end_of_lcd_4bit_send_enable_signal 199E  
             _lcd_4bit_send_enable_signal 1962                       led_initialize@F3058 005C  
               ?_lcd_8bit_send_string_pos 0045                     relay_initialize@F3052 0058  
                                     wreg 0FE8               __end_of_lcd_8bit_set_cursor 14AC  
             lcd_send_4bits@_data_command 0038                                      l2100 1972  
                                    l2102 197A                                      l2110 1926  
                                    l2104 1986                                      l2200 13DE  
                                    l2112 1936                                      l2050 1188  
                                    l2130 18A2                                      l2122 1852  
                                    l2106 199A                                      l2202 13EA  
                                    l2114 193E                                      l2052 11DE  
                                    l2044 114C                                      l2124 1862  
                                    l2140 184E                                      l2204 13F6  
                                    l2116 194A                                      l2212 179A  
                                    l2300 15E8                                      l2070 105A  
                                    l2046 1160                                      l2126 1882  
                                    l2134 17F6                                      l2206 1402  
                                    l2118 195E                                      l2150 1672  
                                    l2214 17AA                                      l2230 14DE  
                                    l2222 14AC                                      l2310 1600  
                                    l2302 15F0                                      l2072 1062  
                                    l2080 1148                                      l2056 122E  
                                    l2048 1180                                      l2128 188A  
                                    l2136 1806                                      l2208 1410  
                                    l2160 16A2                                      l2144 164A  
                                    l2216 17B2                                      l2232 14F2  
                                    l2224 14B0                                      l2312 162A  
                                    l2304 15FC                                      l2074 10B8  
                                    l2066 1026                                      l2058 1258  
                                    l2090 16D0                                      l2138 180E  
                                    l2170 134C                                      l2162 16B2  
                                    l2146 165E                                      l2250 1288  
                                    l2402 1A10                                      l2218 17F2  
                                    l2226 14B6                                      l2234 1506  
                                    l2314 162C                                      l2330 1446  
                                    l2322 1414                                      l2068 103A  
                                    l2092 16D8                                      l2180 1368  
                                    l2172 1350                                      l2156 1676  
                                    l2164 16BC                                      l2148 1666  
                                    l2260 129A                                      l2244 125C  
                                    l2228 14CA                                      l2236 1540  
                                    l2316 163C                                      l2332 145A  
                                    l2324 1418                                      l2078 1108  
                                    l2094 172A                                      l2190 13A2  
                                    l2182 1374                                      l2174 1364  
                                    l2158 16A0                                      l2270 12DE  
                                    l2262 12AA                                      l2246 1270  
                                    l2350 1544                                      l2318 1646  
                                    l2326 141E                                      l2334 146E  
                                    l2088 16C0                                      l2192 13A8  
                                    l2184 1376                                      l2168 1338  
                                    l2280 131A                                      l2272 12EA  
                                    l2264 12BA                                      l2256 128C  
                                    l2248 1274                                      l2344 19FE  
                                    l2352 1558                                      l2328 1432  
                                    l2336 14A8                                      l2098 1962  
                                    l2194 13BA                                      l2186 1386  
                                    l2282 1326                                      l2274 12F6  
                                    l2266 12C6                                      l2258 1298  
                                    l2346 19FE                                      l2290 18FA  
                                    l2362 1576                                      l2370 15D0  
                                    l2354 1560                                      l2196 13C6  
                                    l2188 1396                                      l2284 1334  
                                    l2276 1302                                      l2268 12CC  
                                    l2348 1A06                                      l2292 1902  
                                    l2364 15A8                                      l2356 1572  
                                    l2198 13D2                                      l2278 130E  
                                    l2294 1922                                      l2366 15AA  
                                    l2390 1746                                      l2288 18EA  
                                    l2368 15BA                                      l2392 175C  
                                    l2298 15D4                                      l2394 1776  
                                    l2386 172E                                      l2396 1778  
                                    l2388 173E                                      l2732 18A6  
                                    l2398 1796                                      l2734 18AA  
                                    l2760 1132                                      l2736 18C0  
                                    l2754 1482                                      l2756 151A  
                                    l2758 1242                                      STR_1 1022  
                                    STR_4 1019                                      u1000 1160  
                                    u1001 115C                                      u1010 1180  
                                    u1011 117C                                      u1100 16D0  
                                    u1101 16CC                                      u1110 1972  
                                    u1111 196E                                      u1040 103A  
                                    u1024 11A6                                      u1200 1386  
                                    u1120 1936                                      u1041 1036  
                                    u1025 11A2                                      u1201 1382  
                                    u1121 1932                                      u1050 105A  
                                    u1034 11FC                                      u1130 1862  
                                    u1210 17AA                                      u1051 1056  
                                    u1035 11F8                                      u1131 185E  
                                    u1211 17A6                                      u1140 1882  
                                    u1220 1270                                      u1141 187E  
                                    u1221 126C                                      u1150 1806  
                                    u1230 12AA                                      u1310 173E  
                                    u1151 1802                                      u1231 12A6  
                                    u1311 173A                                      u1080 111E  
                                    u1064 1080                                      u1160 165E  
                                    u1240 18FA                                      u1320 1796  
                                    u1081 1118                                      u1065 107C  
                                    u1161 165A                                      u1241 18F6  
                                    u1321 1792                                      u1090 1120  
                                    u1074 10D6                                      u1250 15E8  
                                    u1075 10D2                                      u1251 15E4  
                                    u1180 16B2                                      u1181 16AE  
                                    _LATA 0F89                                      u1190 134C  
                                    u1174 1690                                      u1270 163C  
                                    _LATB 0F8A                                      u1191 1348  
                                    u1175 168C                                      u1271 1638  
                                    _LATC 0F8B                                      u1280 1558  
                                    u1264 161A                                      _LATD 0F8C  
                                    u1281 1554                                      u1265 1616  
                                    _LATE 0F8D                                      u1290 15BA  
                                    u1291 15B6                                      u1707 12B0  
                                    u1717 12DA                                      u1727 138C  
                                    u1737 13B6             ??_lcd_4bit_send_enable_signal 0038  
                                    _main 18A6                                      fsr2h 0FDA  
                                    indf2 0FDF                                      fsr1l 0FE1  
                                    fsr2l 0FD9         lcd_4bit_send_char_data_pos@column 0045  
                                    prodl 0FF3                                      start 0000  
           __end_of_lcd_8bit_send_command 16C0                              ___param_bank 0000  
                   _lcd_4bit_send_command 17F6                      _gpio_pin_write_logic 114C  
                                   ?_main 002F                       relay_turn_off@F3062 0056  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
               lcd_4bit_set_cursor@column 003F                                     _lcd_1 0029  
                                   _lcd_2 001F                  ?_lcd_8bit_send_char_data 0039  
                                   tablat 0FF5                                     status 0FD8  
          ?_gpio_pin_direction_initialize 002F                           __initialization 199E  
                            __end_of_main 18EA                     ?_gpio_pin_write_logic 002F  
                  lcd_8bit_set_cursor@lcd 003F                    lcd_8bit_set_cursor@ret 0044  
                  lcd_8bit_set_cursor@row 0040                             _lat_registers 000B  
       __end_of_lcd_4bit_send_custom_char 15D4                                    ??_main 0056  
                           __activetblptr 0003                          led_turn_on@F3063 005B  
                        __end_of_app_init 1A16                    ?_lcd_4bit_send_command 003A  
                                  clear_0 19C4                                    isa$std 0001  
             lcd_8bit_send_string_pos@lcd 0045               lcd_8bit_send_string_pos@ret 0049  
             lcd_8bit_send_string_pos@row 0046               lcd_8bit_send_string_pos@str 0048  
                            __pdataCOMRAM 0001                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                                __accesstop 0080  
                 __end_of__initialization 19CA                             ___rparam_used 0001  
                        ??_lcd_send_4bits 0039                   _lcd_4bit_send_char_data 179A  
                  ??_gpio_pin_write_logic 0031                            __pcstackCOMRAM 002F  
                lcd_4bit_send_command@lcd 003A                  lcd_4bit_send_command@ret 003C  
           lcd_4bit_send_custom_char@_chr 0049  gpio_pin_direction_initialize@_pin_config 002F  
            ?_lcd_4bit_send_char_data_pos 0043                                __pnvCOMRAM 005D  
                  lcd_8bit_initialize@lcd 003F                    lcd_8bit_initialize@ret 0042  
         lcd_4bit_send_custom_char@column 004D                         led_turn_off@F3068 005A  
            lcd_4bit_send_custom_char@lcd 0048              lcd_4bit_send_custom_char@ret 0054  
            lcd_4bit_send_custom_char@row 004C                      led_turn_toggle@F3073 0059  
     __end_of_lcd_8bit_send_enable_signal 1962               _lcd_8bit_send_enable_signal 1926  
                               ?_app_init 002F                                _btn_values 1001  
          lcd_8bit_send_enable_signal@lcd 0037            lcd_8bit_send_enable_signal@ret 0038  
                          _tris_registers 0015                 ??_lcd_4bit_send_char_data 003C  
           ??_lcd_8bit_send_enable_signal 0038    lcd_8bit_initialize@l_data_pins_counter 0041  
  lcd_4bit_initialize@l_data_pins_counter 003F                                   __Hparam 0000  
                                 __Lparam 0000                       _gpio_pin_initialize 1852  
                   _lcd_8bit_send_command 164A                              __psmallconst 1000  
                                 __pcinit 199E                                   __ramtop 1000  
                              _customChar 1011                  _lcd_8bit_send_string_pos 172E  
                                 __ptext0 18A6                                   __ptext1 172E  
                                 __ptext2 1414                                   __ptext3 15D4  
                                 __ptext4 1544                                   __ptext5 18EA  
                                 __ptext6 14AC                                   __ptext7 179A  
                                 __ptext8 1A10                                   __ptext9 19FE  
         ??_gpio_pin_direction_initialize 0030                      ?_gpio_pin_initialize 0037  
                              ??_app_init 0043                      end_of_initialization 19CA  
                       lcd_send_4bits@lcd 0037                         lcd_send_4bits@ret 0039  
                 ??_lcd_4bit_send_command 003C                                   postdec1 0FE5  
                                 postdec2 0FDD                                   postinc0 0FEE  
                                 postinc2 0FDE                       _lcd_4bit_initialize 1338  
         __end_of_lcd_4bit_send_char_data 17F6                ?_lcd_4bit_send_custom_char 0048  
              lcd_4bit_send_char_data@lcd 003A                lcd_4bit_send_char_data@ret 003C  
                   ??_gpio_pin_initialize 0038           lcd_4bit_send_char_data_pos@data 0046  
                    ?_lcd_4bit_initialize 003D                       _lcd_4bit_set_cursor 14AC  
                      relay_turn_on@F3057 0057                    ?_lcd_8bit_send_command 0039  
          lcd_8bit_send_string_pos@column 0047                             __pidataCOMRAM 19D0  
                     start_initialization 199E              ?_lcd_4bit_send_enable_signal 0037  
                    ?_lcd_4bit_set_cursor 003D                       _lcd_8bit_initialize 125C  
   __end_of_gpio_pin_direction_initialize 114C             _gpio_pin_direction_initialize 1026  
                   ??_lcd_4bit_initialize 003E                      ?_lcd_8bit_initialize 003F  
                 _lcd_8bit_send_char_data 15D4              __end_of_ecu_layer_initialize 1A10  
                     _lcd_8bit_set_cursor 1414              lcd_4bit_send_command@command 003B  
                lcd_8bit_send_command@lcd 0039                  lcd_8bit_send_command@cnt 003E  
                lcd_8bit_send_command@ret 003D                               __pbssCOMRAM 0056  
                   ??_lcd_4bit_set_cursor 0040                      ?_lcd_8bit_set_cursor 003F  
                   ??_lcd_8bit_initialize 0040                ??_lcd_8bit_send_string_pos 0049  
             lcd_8bit_send_char_data@data 003A           gpio_pin_write_logic@_pin_config 002F  
        lcd_4bit_send_custom_char@mem_pos 004E                 gpio_pin_write_logic@logic 0030  
                             __smallconst 1000                     ??_lcd_8bit_set_cursor 0042  
               ??_lcd_8bit_send_char_data 003B             __end_of_lcd_4bit_send_command 1852  
        gpio_pin_direction_initialize@ret 0035            lcd_4bit_send_char_data_pos@lcd 0043  
          lcd_4bit_send_char_data_pos@ret 0047            lcd_4bit_send_char_data_pos@row 0044  
             ??_lcd_4bit_send_custom_char 004F                    gpio_pin_initialize@ret 0039  
               lcd_8bit_set_cursor@column 0041       __end_of_lcd_4bit_send_char_data_pos 1926  
             _lcd_4bit_send_char_data_pos 18EA                   gpio_pin_write_logic@ret 0036  
                ?_lcd_4bit_send_char_data 003A                                 copy_data0 19B2  
                    _ecu_layer_initialize 19FE             ??_lcd_4bit_send_char_data_pos 0047  
                 ??_lcd_8bit_send_command 003B      lcd_4bit_send_custom_char@lcd_counter 0055  
                                __Hrparam 0000                                  __Lrparam 0000  
                  lcd_4bit_set_cursor@lcd 003D                    lcd_4bit_set_cursor@ret 0042  
                  lcd_4bit_set_cursor@row 003E           __end_of_lcd_8bit_send_char_data 164A  
             __end_of_gpio_pin_initialize 18A6                        __end_of_btn_values 1011  
          gpio_pin_initialize@_pin_config 0037                lcd_8bit_send_char_data@lcd 0039  
              lcd_8bit_send_char_data@cnt 003E                lcd_8bit_send_char_data@ret 003D  
                                __ptext10 125C                                  __ptext11 164A  
                                __ptext12 1926                                  __ptext13 1338  
                                __ptext14 17F6                                  __ptext15 16C0  
                                __ptext16 1962                                  __ptext17 1852  
                                __ptext18 114C                                  __ptext19 1026  
                                _app_init 1A10                     ?_ecu_layer_initialize 002F  
               _lcd_4bit_send_custom_char 1544                        __end_of_customChar 1019  
        __end_of_lcd_8bit_send_string_pos 179A                                  isa$xinst 0000  
                          _lcd_send_4bits 16C0               __end_of_lcd_4bit_initialize 1414  
            __end_of_gpio_pin_write_logic 125C              ?_lcd_8bit_send_enable_signal 0037  
          lcd_4bit_send_enable_signal@lcd 0037            lcd_4bit_send_enable_signal@ret 0038  
                  __end_of_lcd_send_4bits 172E               __end_of_lcd_4bit_set_cursor 1544  
                          _port_registers 0001                    ??_ecu_layer_initialize 0043  
             __end_of_lcd_8bit_initialize 1338              lcd_8bit_send_command@command 003A  
             lcd_4bit_send_char_data@data 003B                    lcd_4bit_initialize@lcd 003D  
                  lcd_4bit_initialize@ret 0040  
