

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Feb 11 00:33:29 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Generated 23/03/2023 GMT
    37                           ; 
    38                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4620 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     
    71                           	psect	idataCOMRAM
    72   0019D0                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for _port_registers
    76   0019D0  80                 	db	128
    77   0019D1  0F                 	db	15
    78   0019D2  81                 	db	129
    79   0019D3  0F                 	db	15
    80   0019D4  82                 	db	130
    81   0019D5  0F                 	db	15
    82   0019D6  83                 	db	131
    83   0019D7  0F                 	db	15
    84   0019D8  84                 	db	132
    85   0019D9  0F                 	db	15
    86                           
    87                           ;initializer for _lat_registers
    88   0019DA  89                 	db	137
    89   0019DB  0F                 	db	15
    90   0019DC  8A                 	db	138
    91   0019DD  0F                 	db	15
    92   0019DE  8B                 	db	139
    93   0019DF  0F                 	db	15
    94   0019E0  8C                 	db	140
    95   0019E1  0F                 	db	15
    96   0019E2  8D                 	db	141
    97   0019E3  0F                 	db	15
    98                           
    99                           ;initializer for _tris_registers
   100   0019E4  92                 	db	146
   101   0019E5  0F                 	db	15
   102   0019E6  93                 	db	147
   103   0019E7  0F                 	db	15
   104   0019E8  94                 	db	148
   105   0019E9  0F                 	db	15
   106   0019EA  95                 	db	149
   107   0019EB  0F                 	db	15
   108   0019EC  96                 	db	150
   109   0019ED  0F                 	db	15
   110                           
   111                           ;initializer for _lcd_2
   112   0019EE  32                 	db	50
   113   0019EF  3A                 	db	58
   114   0019F0  03                 	db	3
   115   0019F1  0B                 	db	11
   116   0019F2  13                 	db	19
   117   0019F3  1B                 	db	27
   118   0019F4  23                 	db	35
   119   0019F5  2B                 	db	43
   120   0019F6  33                 	db	51
   121   0019F7  3B                 	db	59
   122                           
   123                           ;initializer for _lcd_1
   124   0019F8  02                 	db	2
   125   0019F9  0A                 	db	10
   126   0019FA  12                 	db	18
   127   0019FB  1A                 	db	26
   128   0019FC  22                 	db	34
   129   0019FD  2A                 	db	42
   130                           
   131                           	psect	smallconst
   132   001000                     __psmallconst:
   133                           	callstack 0
   134   001000  00                 	db	0
   135   001001                     _btn_values:
   136                           	callstack 0
   137   001001  37                 	db	55
   138   001002  38                 	db	56
   139   001003  39                 	db	57
   140   001004  2F                 	db	47
   141   001005  34                 	db	52
   142   001006  35                 	db	53
   143   001007  36                 	db	54
   144   001008  2A                 	db	42
   145   001009  31                 	db	49
   146   00100A  32                 	db	50
   147   00100B  33                 	db	51
   148   00100C  2D                 	db	45
   149   00100D  23                 	db	35
   150   00100E  38                 	db	56
   151   00100F  3D                 	db	61
   152   001010  2B                 	db	43
   153   001011                     __end_of_btn_values:
   154                           	callstack 0
   155   001011                     _customChar:
   156                           	callstack 0
   157   001011  0A                 	db	10
   158   001012  1F                 	db	31
   159   001013  1F                 	db	31
   160   001014  0E                 	db	14
   161   001015  04                 	db	4
   162   001016  00                 	db	0
   163   001017  00                 	db	0
   164   001018  00                 	db	0
   165   001019                     __end_of_customChar:
   166                           	callstack 0
   167   000000                     _INTCON2bits	set	4081
   168   001019                     STR_4:
   169   001019  42                 	db	66	;'B'
   170   00101A  72                 	db	114	;'r'
   171   00101B  6F                 	db	111	;'o'
   172   00101C  6B                 	db	107	;'k'
   173   00101D  65                 	db	101	;'e'
   174   00101E  6E                 	db	110	;'n'
   175   00101F  2E                 	db	46
   176   001020  2E                 	db	46
   177   001021  00                 	db	0
   178   001022                     STR_1:
   179   001022  25                 	db	37
   180   001023  69                 	db	105	;'i'
   181   001024  00                 	db	0
   182   001025  00                 	db	0	; dummy byte at the end
   183   000000                     
   184                           	psect	nvCOMRAM
   185   00005D                     __pnvCOMRAM:
   186                           	callstack 0
   187   00005D                     _ret:
   188                           	callstack 0
   189   00005D                     	ds	1
   190   000000                     _PORTE	set	3972
   191   000000                     _PORTD	set	3971
   192   000000                     _PORTC	set	3970
   193   000000                     _PORTB	set	3969
   194   000000                     _PORTA	set	3968
   195   000000                     _LATA	set	3977
   196   000000                     _TRISA	set	3986
   197   000000                     _INTCON3bits	set	4080
   198   000000                     _INTCONbits	set	4082
   199   000000                     _TRISE	set	3990
   200   000000                     _TRISD	set	3989
   201   000000                     _TRISC	set	3988
   202   000000                     _TRISB	set	3987
   203   000000                     _LATE	set	3981
   204   000000                     _LATD	set	3980
   205   000000                     _LATC	set	3979
   206   000000                     _LATB	set	3978
   207                           
   208                           ; #config settings
   209                           
   210                           	psect	cinit
   211   00199E                     __pcinit:
   212                           	callstack 0
   213   00199E                     start_initialization:
   214                           	callstack 0
   215   00199E                     __initialization:
   216                           	callstack 0
   217                           
   218                           ; Initialize objects allocated to COMRAM (46 bytes)
   219                           ; load TBLPTR registers with __pidataCOMRAM
   220   00199E  0ED0               	movlw	low __pidataCOMRAM
   221   0019A0  6EF6               	movwf	tblptrl,c
   222   0019A2  0E19               	movlw	high __pidataCOMRAM
   223   0019A4  6EF7               	movwf	tblptrh,c
   224   0019A6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   225   0019A8  6EF8               	movwf	tblptru,c
   226   0019AA  EE00  F001         	lfsr	0,__pdataCOMRAM
   227   0019AE  EE10 F02E          	lfsr	1,46
   228   0019B2                     copy_data0:
   229   0019B2  0009               	tblrd		*+
   230   0019B4  CFF5 FFEE          	movff	tablat,postinc0
   231   0019B8  50E5               	movf	postdec1,w,c
   232   0019BA  50E1               	movf	fsr1l,w,c
   233   0019BC  E1FA               	bnz	copy_data0
   234                           
   235                           ; Clear objects allocated to COMRAM (7 bytes)
   236   0019BE  EE00  F056         	lfsr	0,__pbssCOMRAM
   237   0019C2  0E07               	movlw	7
   238   0019C4                     clear_0:
   239   0019C4  6AEE               	clrf	postinc0,c
   240   0019C6  06E8               	decf	wreg,f,c
   241   0019C8  E1FD               	bnz	clear_0
   242   0019CA                     end_of_initialization:
   243                           	callstack 0
   244   0019CA                     __end_of__initialization:
   245                           	callstack 0
   246   0019CA  0100               	movlb	0
   247   0019CC  EF53  F00C         	goto	_main	;jump to C main() function
   248                           
   249                           	psect	bssCOMRAM
   250   000056                     __pbssCOMRAM:
   251                           	callstack 0
   252   000056                     relay_turn_off@F3062:
   253                           	callstack 0
   254   000056                     	ds	1
   255   000057                     relay_turn_on@F3057:
   256                           	callstack 0
   257   000057                     	ds	1
   258   000058                     relay_initialize@F3052:
   259                           	callstack 0
   260   000058                     	ds	1
   261   000059                     led_turn_toggle@F3073:
   262                           	callstack 0
   263   000059                     	ds	1
   264   00005A                     led_turn_off@F3068:
   265                           	callstack 0
   266   00005A                     	ds	1
   267   00005B                     led_turn_on@F3063:
   268                           	callstack 0
   269   00005B                     	ds	1
   270   00005C                     led_initialize@F3058:
   271                           	callstack 0
   272   00005C                     	ds	1
   273                           
   274                           	psect	dataCOMRAM
   275   000001                     __pdataCOMRAM:
   276                           	callstack 0
   277   000001                     _port_registers:
   278                           	callstack 0
   279   000001                     	ds	10
   280   00000B                     _lat_registers:
   281                           	callstack 0
   282   00000B                     	ds	10
   283   000015                     _tris_registers:
   284                           	callstack 0
   285   000015                     	ds	10
   286   00001F                     _lcd_2:
   287                           	callstack 0
   288   00001F                     	ds	10
   289   000029                     _lcd_1:
   290                           	callstack 0
   291   000029                     	ds	6
   292                           
   293                           	psect	cstackCOMRAM
   294   00002F                     __pcstackCOMRAM:
   295                           	callstack 0
   296   00002F                     gpio_pin_direction_initialize@_pin_config:
   297                           	callstack 0
   298   00002F                     gpio_pin_write_logic@_pin_config:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x0
   302   00002F                     	ds	1
   303   000030                     ??_gpio_pin_direction_initialize:
   304   000030                     gpio_pin_write_logic@logic:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x1
   308   000030                     	ds	1
   309   000031                     ??_gpio_pin_write_logic:
   310                           
   311                           ; 1 bytes @ 0x2
   312   000031                     	ds	4
   313   000035                     gpio_pin_direction_initialize@ret:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x6
   317   000035                     	ds	1
   318   000036                     gpio_pin_write_logic@ret:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x7
   322   000036                     	ds	1
   323   000037                     lcd_send_4bits@lcd:
   324                           	callstack 0
   325   000037                     lcd_4bit_send_enable_signal@lcd:
   326                           	callstack 0
   327   000037                     lcd_8bit_send_enable_signal@lcd:
   328                           	callstack 0
   329   000037                     gpio_pin_initialize@_pin_config:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x8
   333   000037                     	ds	1
   334   000038                     ??_gpio_pin_initialize:
   335   000038                     lcd_send_4bits@_data_command:
   336                           	callstack 0
   337   000038                     lcd_4bit_send_enable_signal@ret:
   338                           	callstack 0
   339   000038                     lcd_8bit_send_enable_signal@ret:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x9
   343   000038                     	ds	1
   344   000039                     lcd_8bit_send_command@lcd:
   345                           	callstack 0
   346   000039                     lcd_8bit_send_char_data@lcd:
   347                           	callstack 0
   348   000039                     lcd_send_4bits@ret:
   349                           	callstack 0
   350   000039                     gpio_pin_initialize@ret:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0xA
   354   000039                     	ds	1
   355   00003A                     lcd_4bit_send_command@lcd:
   356                           	callstack 0
   357   00003A                     lcd_4bit_send_char_data@lcd:
   358                           	callstack 0
   359   00003A                     lcd_8bit_send_command@command:
   360                           	callstack 0
   361   00003A                     lcd_8bit_send_char_data@data:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0xB
   365   00003A                     	ds	1
   366   00003B                     ??_lcd_8bit_send_command:
   367   00003B                     ??_lcd_8bit_send_char_data:
   368   00003B                     lcd_4bit_send_command@command:
   369                           	callstack 0
   370   00003B                     lcd_4bit_send_char_data@data:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0xC
   374   00003B                     	ds	1
   375   00003C                     lcd_4bit_send_command@ret:
   376                           	callstack 0
   377   00003C                     lcd_4bit_send_char_data@ret:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0xD
   381   00003C                     	ds	1
   382   00003D                     lcd_4bit_initialize@lcd:
   383                           	callstack 0
   384   00003D                     lcd_8bit_send_command@ret:
   385                           	callstack 0
   386   00003D                     lcd_8bit_send_char_data@ret:
   387                           	callstack 0
   388   00003D                     lcd_4bit_set_cursor@lcd:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0xE
   392   00003D                     	ds	1
   393   00003E                     ??_lcd_4bit_initialize:
   394   00003E                     lcd_8bit_send_command@cnt:
   395                           	callstack 0
   396   00003E                     lcd_8bit_send_char_data@cnt:
   397                           	callstack 0
   398   00003E                     lcd_4bit_set_cursor@row:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0xF
   402   00003E                     	ds	1
   403   00003F                     lcd_4bit_initialize@l_data_pins_counter:
   404                           	callstack 0
   405   00003F                     lcd_8bit_initialize@lcd:
   406                           	callstack 0
   407   00003F                     lcd_4bit_set_cursor@column:
   408                           	callstack 0
   409   00003F                     lcd_8bit_set_cursor@lcd:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x10
   413   00003F                     	ds	1
   414   000040                     ??_lcd_4bit_set_cursor:
   415   000040                     ??_lcd_8bit_initialize:
   416   000040                     lcd_4bit_initialize@ret:
   417                           	callstack 0
   418   000040                     lcd_8bit_set_cursor@row:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x11
   422   000040                     	ds	1
   423   000041                     lcd_8bit_initialize@l_data_pins_counter:
   424                           	callstack 0
   425   000041                     lcd_8bit_set_cursor@column:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x12
   429   000041                     	ds	1
   430   000042                     ??_lcd_8bit_set_cursor:
   431   000042                     lcd_8bit_initialize@ret:
   432                           	callstack 0
   433   000042                     lcd_4bit_set_cursor@ret:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x13
   437   000042                     	ds	1
   438   000043                     lcd_4bit_send_char_data_pos@lcd:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x14
   442   000043                     	ds	1
   443   000044                     lcd_4bit_send_char_data_pos@row:
   444                           	callstack 0
   445   000044                     lcd_8bit_set_cursor@ret:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x15
   449   000044                     	ds	1
   450   000045                     lcd_4bit_send_char_data_pos@column:
   451                           	callstack 0
   452   000045                     lcd_8bit_send_string_pos@lcd:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x16
   456   000045                     	ds	1
   457   000046                     lcd_4bit_send_char_data_pos@data:
   458                           	callstack 0
   459   000046                     lcd_8bit_send_string_pos@row:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x17
   463   000046                     	ds	1
   464   000047                     lcd_4bit_send_char_data_pos@ret:
   465                           	callstack 0
   466   000047                     lcd_8bit_send_string_pos@column:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x18
   470   000047                     	ds	1
   471   000048                     lcd_4bit_send_custom_char@lcd:
   472                           	callstack 0
   473   000048                     lcd_8bit_send_string_pos@str:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x19
   477   000048                     	ds	1
   478   000049                     lcd_8bit_send_string_pos@ret:
   479                           	callstack 0
   480   000049                     lcd_4bit_send_custom_char@_chr:
   481                           	callstack 0
   482                           
   483                           ; 3 bytes @ 0x1A
   484   000049                     	ds	3
   485   00004C                     lcd_4bit_send_custom_char@row:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x1D
   489   00004C                     	ds	1
   490   00004D                     lcd_4bit_send_custom_char@column:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0x1E
   494   00004D                     	ds	1
   495   00004E                     lcd_4bit_send_custom_char@mem_pos:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x1F
   499   00004E                     	ds	1
   500   00004F                     ??_lcd_4bit_send_custom_char:
   501                           
   502                           ; 1 bytes @ 0x20
   503   00004F                     	ds	5
   504   000054                     lcd_4bit_send_custom_char@ret:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x25
   508   000054                     	ds	1
   509   000055                     lcd_4bit_send_custom_char@lcd_counter:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0x26
   513   000055                     	ds	1
   514   000056                     
   515                           ; 1 bytes @ 0x27
   516 ;;
   517 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   518 ;;
   519 ;; *************** function _main *****************
   520 ;; Defined at:
   521 ;;		line 22 in file "appplication.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;                  2  472[None  ] int 
   528 ;; Registers used:
   529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;Total ram usage:        0 bytes
   540 ;; Hardware stack levels required when called: 6
   541 ;; This function calls:
   542 ;;		_app_init
   543 ;;		_lcd_4bit_send_custom_char
   544 ;;		_lcd_8bit_send_string_pos
   545 ;; This function is called by:
   546 ;;		Startup code after reset
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           	psect	text0
   551   0018A6                     __ptext0:
   552                           	callstack 0
   553   0018A6                     _main:
   554                           	callstack 25
   555   0018A6                     
   556                           ;appplication.c: 24:     app_init();
   557   0018A6  EC08  F00D         	call	_app_init	;wreg free
   558   0018AA                     
   559                           ;appplication.c: 25:     ret = lcd_8bit_send_string_pos(&lcd_2, 1, 1, "Broken..");
   560   0018AA  0E1F               	movlw	low _lcd_2
   561   0018AC  6E45               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   562   0018AE  0E01               	movlw	1
   563   0018B0  6E46               	movwf	lcd_8bit_send_string_pos@row^0,c
   564   0018B2  0E01               	movlw	1
   565   0018B4  6E47               	movwf	lcd_8bit_send_string_pos@column^0,c
   566   0018B6  0E19               	movlw	low STR_4
   567   0018B8  6E48               	movwf	lcd_8bit_send_string_pos@str^0,c
   568   0018BA  EC97  F00B         	call	_lcd_8bit_send_string_pos	;wreg free
   569   0018BE  6E5D               	movwf	_ret^0,c
   570   0018C0                     l2984:
   571                           
   572                           ;appplication.c: 27:     {;appplication.c: 28:         ret = lcd_4bit_send_custom_char(&
      +                          lcd_1, 1, 5, customChar, 0);
   573   0018C0  0E29               	movlw	low _lcd_1
   574   0018C2  6E48               	movwf	lcd_4bit_send_custom_char@lcd^0,c
   575   0018C4  0E01               	movlw	1
   576   0018C6  6E49               	movwf	lcd_4bit_send_custom_char@_chr^0,c
   577   0018C8  0E00               	movlw	0
   578   0018CA  6E4A               	movwf	(lcd_4bit_send_custom_char@_chr+1)^0,c
   579   0018CC  0E00               	movlw	0
   580   0018CE  6E4B               	movwf	(lcd_4bit_send_custom_char@_chr+2)^0,c
   581   0018D0  0E05               	movlw	5
   582   0018D2  6E4C               	movwf	lcd_4bit_send_custom_char@row^0,c
   583   0018D4  0E11               	movlw	low (low _customChar)
   584   0018D6  6E4D               	movwf	lcd_4bit_send_custom_char@column^0,c
   585   0018D8  0E00               	movlw	0
   586   0018DA  6E4E               	movwf	lcd_4bit_send_custom_char@mem_pos^0,c
   587   0018DC  ECA2  F00A         	call	_lcd_4bit_send_custom_char	;wreg free
   588   0018E0  6E5D               	movwf	_ret^0,c
   589   0018E2  EF60  F00C         	goto	l2984
   590   0018E6  EF00  F000         	goto	start
   591   0018EA                     __end_of_main:
   592                           	callstack 0
   593                           
   594 ;; *************** function _lcd_8bit_send_string_pos *****************
   595 ;; Defined at:
   596 ;;		line 339 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;  lcd             1   22[COMRAM] PTR const struct .
   599 ;;		 -> lcd_2(10), 
   600 ;;  row             1   23[COMRAM] unsigned char 
   601 ;;  column          1   24[COMRAM] unsigned char 
   602 ;;  str             1   25[COMRAM] PTR unsigned char 
   603 ;;		 -> STR_4(9), 
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  ret             1   26[COMRAM] unsigned char 
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      unsigned char 
   608 ;; Registers used:
   609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   615 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;Total ram usage:        5 bytes
   620 ;; Hardware stack levels used: 1
   621 ;; Hardware stack levels required when called: 4
   622 ;; This function calls:
   623 ;;		_lcd_8bit_send_char_data
   624 ;;		_lcd_8bit_set_cursor
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text1
   631   00172E                     __ptext1:
   632                           	callstack 0
   633   00172E                     _lcd_8bit_send_string_pos:
   634                           	callstack 26
   635   00172E                     
   636                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 341:     if(((void*)0) == lcd){
   637   00172E  5045               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
   638   001730  A4D8               	btfss	status,2,c
   639   001732  EF9D  F00B         	goto	u1501
   640   001736  EF9F  F00B         	goto	u1500
   641   00173A                     u1501:
   642   00173A  EFA3  F00B         	goto	l2638
   643   00173E                     u1500:
   644   00173E                     
   645                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 342:         ret = (Std_ReturnType)0x00;
   646   00173E  0E00               	movlw	0
   647   001740  6E49               	movwf	lcd_8bit_send_string_pos@ret^0,c
   648                           
   649                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 343:     }
   650   001742  EFCB  F00B         	goto	l2646
   651   001746                     l2638:
   652                           
   653                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 345:         ret = lcd_8bit_set_cursor(lcd, row, colum
      +                          n);
   654   001746  C045  F03F         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
   655   00174A  C046  F040         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
   656   00174E  C047  F041         	movff	lcd_8bit_send_string_pos@column,lcd_8bit_set_cursor@column
   657   001752  EC0A  F00A         	call	_lcd_8bit_set_cursor	;wreg free
   658   001756  6E49               	movwf	lcd_8bit_send_string_pos@ret^0,c
   659                           
   660                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 346:         while(*str != '\0')
   661   001758  EFBC  F00B         	goto	l2644
   662   00175C                     l2640:
   663                           
   664                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 347:         {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 348:  
      +                                     ret = lcd_8bit_send_char_data(lcd, *str);
   665   00175C  C045  F039         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_char_data@lcd
   666   001760  C048  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
   667   001764                     	if	1	;There is more than 1 active tblptr byte
   668   001764  0E10               	movlw	high __smallconst
   669   001766  6EF7               	movwf	tblptrh,c
   670   001768                     	endif
   671   001768                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   672   001768  6AF8               	clrf	tblptru,c
   673   00176A                     	endif
   674   00176A                     	if	0	;tblptru may be non-zero
   675   00176A                     	endif
   676   00176A  0008               	tblrd		*
   677   00176C  CFF5 F03A          	movff	tablat,lcd_8bit_send_char_data@data
   678   001770  ECEA  F00A         	call	_lcd_8bit_send_char_data	;wreg free
   679   001774  6E49               	movwf	lcd_8bit_send_string_pos@ret^0,c
   680   001776                     
   681                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 349:             str++;
   682   001776  2A48               	incf	lcd_8bit_send_string_pos@str^0,f,c
   683   001778                     l2644:
   684                           
   685                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 346:         while(*str != '\0')
   686   001778  C048  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
   687   00177C                     	if	1	;There is more than 1 active tblptr byte
   688   00177C  0E10               	movlw	high __smallconst
   689   00177E  6EF7               	movwf	tblptrh,c
   690   001780                     	endif
   691   001780                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   692   001780  6AF8               	clrf	tblptru,c
   693   001782                     	endif
   694   001782                     	if	0	;tblptru may be non-zero
   695   001782                     	endif
   696   001782  0008               	tblrd		*
   697   001784  50F5               	movf	tablat,w,c
   698   001786  0900               	iorlw	0
   699   001788  A4D8               	btfss	status,2,c
   700   00178A  EFC9  F00B         	goto	u1511
   701   00178E  EFCB  F00B         	goto	u1510
   702   001792                     u1511:
   703   001792  EFAE  F00B         	goto	l2640
   704   001796                     u1510:
   705   001796                     l2646:
   706                           
   707                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 352:     return ret;
   708   001796  5049               	movf	lcd_8bit_send_string_pos@ret^0,w,c
   709   001798  0012               	return		;funcret
   710   00179A                     __end_of_lcd_8bit_send_string_pos:
   711                           	callstack 0
   712                           
   713 ;; *************** function _lcd_8bit_set_cursor *****************
   714 ;; Defined at:
   715 ;;		line 477 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  lcd             1   16[COMRAM] PTR const struct .
   718 ;;		 -> lcd_2(10), 
   719 ;;  row             1   17[COMRAM] unsigned char 
   720 ;;  column          1   18[COMRAM] unsigned char 
   721 ;; Auto vars:     Size  Location     Type
   722 ;;  ret             1   21[COMRAM] unsigned char 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      unsigned char 
   725 ;; Registers used:
   726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   732 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   735 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;Total ram usage:        6 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; Hardware stack levels required when called: 3
   739 ;; This function calls:
   740 ;;		_lcd_8bit_send_command
   741 ;; This function is called by:
   742 ;;		_lcd_8bit_send_string_pos
   743 ;;		_lcd_8bit_send_char_data_pos
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text2
   748   001414                     __ptext2:
   749                           	callstack 0
   750   001414                     _lcd_8bit_set_cursor:
   751                           	callstack 26
   752   001414                     
   753                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 478:     Std_ReturnType ret = (Std_ReturnType)0x01;
   754   001414  0E01               	movlw	1
   755   001416  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   756   001418                     
   757                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 479:     column--;
   758   001418  0641               	decf	lcd_8bit_set_cursor@column^0,f,c
   759                           
   760                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 480:     switch(row)
   761   00141A  EF37  F00A         	goto	l2582
   762   00141E                     l2574:
   763   00141E  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   764   001422  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
   765   001424  0F80               	addlw	128
   766   001426  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   767   001428  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
   768   00142C  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   769   00142E  EF54  F00A         	goto	l2584
   770   001432                     l2576:
   771   001432  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   772   001436  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
   773   001438  0FC0               	addlw	192
   774   00143A  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   775   00143C  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
   776   001440  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   777   001442  EF54  F00A         	goto	l2584
   778   001446                     l2578:
   779   001446  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   780   00144A  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
   781   00144C  0F94               	addlw	148
   782   00144E  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   783   001450  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
   784   001454  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   785   001456  EF54  F00A         	goto	l2584
   786   00145A                     l2580:
   787   00145A  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   788   00145E  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
   789   001460  0FD4               	addlw	212
   790   001462  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   791   001464  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
   792   001468  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   793   00146A  EF54  F00A         	goto	l2584
   794   00146E                     l2582:
   795   00146E  5040               	movf	lcd_8bit_set_cursor@row^0,w,c
   796   001470  6E42               	movwf	??_lcd_8bit_set_cursor^0,c
   797   001472  6A43               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
   798                           
   799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   800                           ; Switch size 1, requested type "simple"
   801                           ; Number of cases is 1, Range of values is 0 to 0
   802                           ; switch strategies available:
   803                           ; Name         Instructions Cycles
   804                           ; simple_byte            4     3 (average)
   805                           ;	Chosen strategy is simple_byte
   806   001474  5043               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
   807   001476  0A00               	xorlw	0	; case 0
   808   001478  B4D8               	btfsc	status,2,c
   809   00147A  EF41  F00A         	goto	l3012
   810   00147E  EF54  F00A         	goto	l2584
   811   001482                     l3012:
   812                           
   813                           ; Switch size 1, requested type "simple"
   814                           ; Number of cases is 4, Range of values is 1 to 4
   815                           ; switch strategies available:
   816                           ; Name         Instructions Cycles
   817                           ; simple_byte           13     7 (average)
   818                           ;	Chosen strategy is simple_byte
   819   001482  5042               	movf	??_lcd_8bit_set_cursor^0,w,c
   820   001484  0A01               	xorlw	1	; case 1
   821   001486  B4D8               	btfsc	status,2,c
   822   001488  EF0F  F00A         	goto	l2574
   823   00148C  0A03               	xorlw	3	; case 2
   824   00148E  B4D8               	btfsc	status,2,c
   825   001490  EF19  F00A         	goto	l2576
   826   001494  0A01               	xorlw	1	; case 3
   827   001496  B4D8               	btfsc	status,2,c
   828   001498  EF23  F00A         	goto	l2578
   829   00149C  0A07               	xorlw	7	; case 4
   830   00149E  B4D8               	btfsc	status,2,c
   831   0014A0  EF2D  F00A         	goto	l2580
   832   0014A4  EF54  F00A         	goto	l2584
   833   0014A8                     l2584:
   834                           
   835                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 488:     return ret;
   836   0014A8  5044               	movf	lcd_8bit_set_cursor@ret^0,w,c
   837   0014AA  0012               	return		;funcret
   838   0014AC                     __end_of_lcd_8bit_set_cursor:
   839                           	callstack 0
   840                           
   841 ;; *************** function _lcd_8bit_send_char_data *****************
   842 ;; Defined at:
   843 ;;		line 267 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  lcd             1   10[COMRAM] PTR const struct .
   846 ;;		 -> lcd_2(10), 
   847 ;;  data            1   11[COMRAM] unsigned char 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  cnt             1   15[COMRAM] unsigned char 
   850 ;;  ret             1   14[COMRAM] unsigned char 
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      unsigned char 
   853 ;; Registers used:
   854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;Total ram usage:        6 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; Hardware stack levels required when called: 2
   867 ;; This function calls:
   868 ;;		_gpio_pin_write_logic
   869 ;;		_lcd_8bit_send_enable_signal
   870 ;; This function is called by:
   871 ;;		_lcd_8bit_send_string_pos
   872 ;;		_lcd_8bit_send_char_data_pos
   873 ;;		_lcd_8bit_send_string
   874 ;;		_lcd_8bit_send_custom_char
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text3
   879   0015D4                     __ptext3:
   880                           	callstack 0
   881   0015D4                     _lcd_8bit_send_char_data:
   882                           	callstack 27
   883   0015D4                     
   884                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 269:     uint8 cnt = 0;
   885   0015D4  0E00               	movlw	0
   886   0015D6  6E3E               	movwf	lcd_8bit_send_char_data@cnt^0,c
   887                           
   888                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 270:     if(((void*)0) == lcd){
   889   0015D8  5039               	movf	lcd_8bit_send_char_data@lcd^0,w,c
   890   0015DA  A4D8               	btfss	status,2,c
   891   0015DC  EFF2  F00A         	goto	u1441
   892   0015E0  EFF4  F00A         	goto	u1440
   893   0015E4                     u1441:
   894   0015E4  EFF8  F00A         	goto	l2550
   895   0015E8                     u1440:
   896   0015E8                     
   897                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 271:         ret = (Std_ReturnType)0x00;
   898   0015E8  0E00               	movlw	0
   899   0015EA  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
   900                           
   901                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 272:     }
   902   0015EC  EF23  F00B         	goto	l2566
   903   0015F0                     l2550:
   904   0015F0  C039  F02F         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
   905   0015F4  0E01               	movlw	1
   906   0015F6  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   907   0015F8  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
   908   0015FC                     
   909                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 275:         for(cnt=0; cnt<8; cnt++)
   910   0015FC  0E00               	movlw	0
   911   0015FE  6E3E               	movwf	lcd_8bit_send_char_data@cnt^0,c
   912   001600                     l2558:
   913   001600  5039               	movf	lcd_8bit_send_char_data@lcd^0,w,c
   914   001602  243E               	addwf	lcd_8bit_send_char_data@cnt^0,w,c
   915   001604  0F02               	addlw	2
   916   001606  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   917   001608  C03E  F03B         	movff	lcd_8bit_send_char_data@cnt,??_lcd_8bit_send_char_data
   918   00160C  C03A  F03C         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
   919   001610  2A3B               	incf	??_lcd_8bit_send_char_data^0,f,c
   920   001612  EF0D  F00B         	goto	u1454
   921   001616                     u1455:
   922   001616  90D8               	bcf	status,0,c
   923   001618  323C               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
   924   00161A                     u1454:
   925   00161A  2E3B               	decfsz	??_lcd_8bit_send_char_data^0,f,c
   926   00161C  EF0B  F00B         	goto	u1455
   927   001620  503C               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
   928   001622  0B01               	andlw	1
   929   001624  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   930   001626  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
   931   00162A                     
   932                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 278:         }
   933   00162A  2A3E               	incf	lcd_8bit_send_char_data@cnt^0,f,c
   934   00162C  0E07               	movlw	7
   935   00162E  643E               	cpfsgt	lcd_8bit_send_char_data@cnt^0,c
   936   001630  EF1C  F00B         	goto	u1461
   937   001634  EF1E  F00B         	goto	u1460
   938   001638                     u1461:
   939   001638  EF00  F00B         	goto	l2558
   940   00163C                     u1460:
   941   00163C                     
   942                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 279:         ret = lcd_8bit_send_enable_signal(lcd);
   943   00163C  C039  F037         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
   944   001640  EC93  F00C         	call	_lcd_8bit_send_enable_signal	;wreg free
   945   001644  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
   946   001646                     l2566:
   947                           
   948                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 281:     return ret;
   949   001646  503D               	movf	lcd_8bit_send_char_data@ret^0,w,c
   950   001648  0012               	return		;funcret
   951   00164A                     __end_of_lcd_8bit_send_char_data:
   952                           	callstack 0
   953                           
   954 ;; *************** function _lcd_4bit_send_custom_char *****************
   955 ;; Defined at:
   956 ;;		line 181 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  lcd             1   25[COMRAM] PTR const struct .
   959 ;;		 -> lcd_1(6), 
   960 ;;  _chr            3   26[COMRAM] PTR const unsigned char 
   961 ;;		 -> ROM(65535), 
   962 ;;  row             1   29[COMRAM] unsigned char 
   963 ;;  column          1   30[COMRAM] unsigned char 
   964 ;;  mem_pos         1   31[COMRAM] unsigned char 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  lcd_counter     1   38[COMRAM] unsigned char 
   967 ;;  ret             1   37[COMRAM] unsigned char 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      unsigned char 
   970 ;; Registers used:
   971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   977 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;Total ram usage:       14 bytes
   982 ;; Hardware stack levels used: 1
   983 ;; Hardware stack levels required when called: 5
   984 ;; This function calls:
   985 ;;		_lcd_4bit_send_char_data
   986 ;;		_lcd_4bit_send_char_data_pos
   987 ;;		_lcd_4bit_send_command
   988 ;; This function is called by:
   989 ;;		_main
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text4
   994   001544                     __ptext4:
   995                           	callstack 0
   996   001544                     _lcd_4bit_send_custom_char:
   997                           	callstack 25
   998   001544                     
   999                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 183:     uint8 lcd_counter = 0;
  1000   001544  0E00               	movlw	0
  1001   001546  6E55               	movwf	lcd_4bit_send_custom_char@lcd_counter^0,c
  1002                           
  1003                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 184:     if(((void*)0) == lcd){
  1004   001548  5048               	movf	lcd_4bit_send_custom_char@lcd^0,w,c
  1005   00154A  A4D8               	btfss	status,2,c
  1006   00154C  EFAA  F00A         	goto	u1471
  1007   001550  EFAC  F00A         	goto	u1470
  1008   001554                     u1471:
  1009   001554  EFB0  F00A         	goto	l2602
  1010   001558                     u1470:
  1011   001558                     
  1012                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 185:         ret = (Std_ReturnType)0x00;
  1013   001558  0E00               	movlw	0
  1014   00155A  6E54               	movwf	lcd_4bit_send_custom_char@ret^0,c
  1015                           
  1016                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 186:     }
  1017   00155C  EFE8  F00A         	goto	l2618
  1018   001560                     l2602:
  1019   001560  C048  F03A         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_command@lcd
  1020   001564  504E               	movf	lcd_4bit_send_custom_char@mem_pos^0,w,c
  1021   001566  0D08               	mullw	8
  1022   001568  50F3               	movf	243,w,c
  1023   00156A  0F40               	addlw	64
  1024   00156C  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1025   00156E  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1026   001572                     
  1027                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 189:         for(lcd_counter=0; lcd_counter<=7; ++lcd_
      +                          counter){
  1028   001572  0E00               	movlw	0
  1029   001574  6E55               	movwf	lcd_4bit_send_custom_char@lcd_counter^0,c
  1030   001576                     l2610:
  1031   001576  C048  F03A         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_char_data@lcd
  1032   00157A  5055               	movf	lcd_4bit_send_custom_char@lcd_counter^0,w,c
  1033   00157C  6E4F               	movwf	??_lcd_4bit_send_custom_char^0,c
  1034   00157E  6A50               	clrf	(??_lcd_4bit_send_custom_char+1)^0,c
  1035   001580  504F               	movf	??_lcd_4bit_send_custom_char^0,w,c
  1036   001582  2449               	addwf	lcd_4bit_send_custom_char@_chr^0,w,c
  1037   001584  6E51               	movwf	(??_lcd_4bit_send_custom_char+2)^0,c
  1038   001586  5050               	movf	(??_lcd_4bit_send_custom_char+1)^0,w,c
  1039   001588  204A               	addwfc	(lcd_4bit_send_custom_char@_chr+1)^0,w,c
  1040   00158A  6E52               	movwf	(??_lcd_4bit_send_custom_char+3)^0,c
  1041   00158C  0E00               	movlw	0
  1042   00158E  204B               	addwfc	(lcd_4bit_send_custom_char@_chr+2)^0,w,c
  1043   001590  6E53               	movwf	(??_lcd_4bit_send_custom_char+4)^0,c
  1044   001592  C051  FFF6         	movff	??_lcd_4bit_send_custom_char+2,tblptrl
  1045   001596  C052  FFF7         	movff	??_lcd_4bit_send_custom_char+3,tblptrh
  1046   00159A  C053  FFF8         	movff	??_lcd_4bit_send_custom_char+4,tblptru
  1047   00159E  0008               	tblrd		*
  1048   0015A0  CFF5 F03B          	movff	tablat,lcd_4bit_send_char_data@data
  1049   0015A4  ECCD  F00B         	call	_lcd_4bit_send_char_data	;wreg free
  1050   0015A8                     
  1051                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 191:         }
  1052   0015A8  2A55               	incf	lcd_4bit_send_custom_char@lcd_counter^0,f,c
  1053   0015AA  0E07               	movlw	7
  1054   0015AC  6455               	cpfsgt	lcd_4bit_send_custom_char@lcd_counter^0,c
  1055   0015AE  EFDB  F00A         	goto	u1481
  1056   0015B2  EFDD  F00A         	goto	u1480
  1057   0015B6                     u1481:
  1058   0015B6  EFBB  F00A         	goto	l2610
  1059   0015BA                     u1480:
  1060   0015BA                     
  1061                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 192:         ret = lcd_4bit_send_char_data_pos(lcd, ro
      +                          w, column, mem_pos);
  1062   0015BA  C048  F043         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_char_data_pos@lcd
  1063   0015BE  C04C  F044         	movff	lcd_4bit_send_custom_char@row,lcd_4bit_send_char_data_pos@row
  1064   0015C2  C04D  F045         	movff	lcd_4bit_send_custom_char@column,lcd_4bit_send_char_data_pos@column
  1065   0015C6  C04E  F046         	movff	lcd_4bit_send_custom_char@mem_pos,lcd_4bit_send_char_data_pos@data
  1066   0015CA  EC75  F00C         	call	_lcd_4bit_send_char_data_pos	;wreg free
  1067   0015CE  6E54               	movwf	lcd_4bit_send_custom_char@ret^0,c
  1068   0015D0                     l2618:
  1069                           
  1070                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 194:     return ret;
  1071   0015D0  5054               	movf	lcd_4bit_send_custom_char@ret^0,w,c
  1072   0015D2  0012               	return		;funcret
  1073   0015D4                     __end_of_lcd_4bit_send_custom_char:
  1074                           	callstack 0
  1075                           
  1076 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  1077 ;; Defined at:
  1078 ;;		line 109 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  lcd             1   20[COMRAM] PTR const struct .
  1081 ;;		 -> lcd_1(6), 
  1082 ;;  row             1   21[COMRAM] unsigned char 
  1083 ;;  column          1   22[COMRAM] unsigned char 
  1084 ;;  data            1   23[COMRAM] unsigned char 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  ret             1   24[COMRAM] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      unsigned char 
  1089 ;; Registers used:
  1090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1096 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1100 ;;Total ram usage:        5 bytes
  1101 ;; Hardware stack levels used: 1
  1102 ;; Hardware stack levels required when called: 4
  1103 ;; This function calls:
  1104 ;;		_lcd_4bit_send_char_data
  1105 ;;		_lcd_4bit_set_cursor
  1106 ;; This function is called by:
  1107 ;;		_lcd_4bit_send_custom_char
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text5
  1112   0018EA                     __ptext5:
  1113                           	callstack 0
  1114   0018EA                     _lcd_4bit_send_char_data_pos:
  1115                           	callstack 25
  1116   0018EA                     
  1117                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 111:     if(((void*)0) == lcd){
  1118   0018EA  5043               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  1119   0018EC  A4D8               	btfss	status,2,c
  1120   0018EE  EF7B  F00C         	goto	u1431
  1121   0018F2  EF7D  F00C         	goto	u1430
  1122   0018F6                     u1431:
  1123   0018F6  EF81  F00C         	goto	l2540
  1124   0018FA                     u1430:
  1125   0018FA                     
  1126                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 112:         ret = (Std_ReturnType)0x00;
  1127   0018FA  0E00               	movlw	0
  1128   0018FC  6E47               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1129                           
  1130                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 113:     }
  1131   0018FE  EF91  F00C         	goto	l2542
  1132   001902                     l2540:
  1133                           
  1134                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 115:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
  1135   001902  C043  F03D         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
  1136   001906  C044  F03E         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
  1137   00190A  C045  F03F         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_cursor@column
  1138   00190E  EC56  F00A         	call	_lcd_4bit_set_cursor	;wreg free
  1139   001912  6E47               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1140                           
  1141                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 116:         ret = lcd_4bit_send_char_data(lcd, data);
  1142   001914  C043  F03A         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  1143   001918  C046  F03B         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  1144   00191C  ECCD  F00B         	call	_lcd_4bit_send_char_data	;wreg free
  1145   001920  6E47               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1146   001922                     l2542:
  1147                           
  1148                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 118:     return ret;
  1149   001922  5047               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  1150   001924  0012               	return		;funcret
  1151   001926                     __end_of_lcd_4bit_send_char_data_pos:
  1152                           	callstack 0
  1153                           
  1154 ;; *************** function _lcd_4bit_set_cursor *****************
  1155 ;; Defined at:
  1156 ;;		line 434 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  lcd             1   14[COMRAM] PTR const struct .
  1159 ;;		 -> lcd_1(6), 
  1160 ;;  row             1   15[COMRAM] unsigned char 
  1161 ;;  column          1   16[COMRAM] unsigned char 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  ret             1   19[COMRAM] unsigned char 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      unsigned char 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1173 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1175 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;Total ram usage:        6 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; Hardware stack levels required when called: 3
  1180 ;; This function calls:
  1181 ;;		_lcd_4bit_send_command
  1182 ;; This function is called by:
  1183 ;;		_lcd_4bit_send_char_data_pos
  1184 ;;		_lcd_4bit_send_string_pos
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text6
  1189   0014AC                     __ptext6:
  1190                           	callstack 0
  1191   0014AC                     _lcd_4bit_set_cursor:
  1192                           	callstack 25
  1193   0014AC                     
  1194                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 435:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1195   0014AC  0E01               	movlw	1
  1196   0014AE  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
  1197   0014B0                     
  1198                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 436:     column--;
  1199   0014B0  063F               	decf	lcd_4bit_set_cursor@column^0,f,c
  1200                           
  1201                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 437:     switch(row)
  1202   0014B2  EF83  F00A         	goto	l2482
  1203   0014B6                     l2474:
  1204   0014B6  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1205   0014BA  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
  1206   0014BC  0F80               	addlw	128
  1207   0014BE  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1208   0014C0  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1209   0014C4  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
  1210   0014C6  EFA0  F00A         	goto	l2484
  1211   0014CA                     l2476:
  1212   0014CA  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1213   0014CE  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
  1214   0014D0  0FC0               	addlw	192
  1215   0014D2  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1216   0014D4  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1217   0014D8  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
  1218   0014DA  EFA0  F00A         	goto	l2484
  1219   0014DE                     l2478:
  1220   0014DE  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1221   0014E2  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
  1222   0014E4  0F94               	addlw	148
  1223   0014E6  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1224   0014E8  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1225   0014EC  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
  1226   0014EE  EFA0  F00A         	goto	l2484
  1227   0014F2                     l2480:
  1228   0014F2  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1229   0014F6  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
  1230   0014F8  0FD4               	addlw	212
  1231   0014FA  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1232   0014FC  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1233   001500  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
  1234   001502  EFA0  F00A         	goto	l2484
  1235   001506                     l2482:
  1236   001506  503E               	movf	lcd_4bit_set_cursor@row^0,w,c
  1237   001508  6E40               	movwf	??_lcd_4bit_set_cursor^0,c
  1238   00150A  6A41               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1239                           
  1240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1241                           ; Switch size 1, requested type "simple"
  1242                           ; Number of cases is 1, Range of values is 0 to 0
  1243                           ; switch strategies available:
  1244                           ; Name         Instructions Cycles
  1245                           ; simple_byte            4     3 (average)
  1246                           ;	Chosen strategy is simple_byte
  1247   00150C  5041               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1248   00150E  0A00               	xorlw	0	; case 0
  1249   001510  B4D8               	btfsc	status,2,c
  1250   001512  EF8D  F00A         	goto	l3014
  1251   001516  EFA0  F00A         	goto	l2484
  1252   00151A                     l3014:
  1253                           
  1254                           ; Switch size 1, requested type "simple"
  1255                           ; Number of cases is 4, Range of values is 1 to 4
  1256                           ; switch strategies available:
  1257                           ; Name         Instructions Cycles
  1258                           ; simple_byte           13     7 (average)
  1259                           ;	Chosen strategy is simple_byte
  1260   00151A  5040               	movf	??_lcd_4bit_set_cursor^0,w,c
  1261   00151C  0A01               	xorlw	1	; case 1
  1262   00151E  B4D8               	btfsc	status,2,c
  1263   001520  EF5B  F00A         	goto	l2474
  1264   001524  0A03               	xorlw	3	; case 2
  1265   001526  B4D8               	btfsc	status,2,c
  1266   001528  EF65  F00A         	goto	l2476
  1267   00152C  0A01               	xorlw	1	; case 3
  1268   00152E  B4D8               	btfsc	status,2,c
  1269   001530  EF6F  F00A         	goto	l2478
  1270   001534  0A07               	xorlw	7	; case 4
  1271   001536  B4D8               	btfsc	status,2,c
  1272   001538  EF79  F00A         	goto	l2480
  1273   00153C  EFA0  F00A         	goto	l2484
  1274   001540                     l2484:
  1275                           
  1276                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 445:     return ret;
  1277   001540  5042               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1278   001542  0012               	return		;funcret
  1279   001544                     __end_of_lcd_4bit_set_cursor:
  1280                           	callstack 0
  1281                           
  1282 ;; *************** function _lcd_4bit_send_char_data *****************
  1283 ;; Defined at:
  1284 ;;		line 84 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  lcd             1   11[COMRAM] PTR const struct .
  1287 ;;		 -> lcd_1(6), 
  1288 ;;  data            1   12[COMRAM] unsigned char 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  ret             1   13[COMRAM] unsigned char 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      unsigned char 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;Total ram usage:        3 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 2
  1307 ;; This function calls:
  1308 ;;		_gpio_pin_write_logic
  1309 ;;		_lcd_4bit_send_enable_signal
  1310 ;;		_lcd_send_4bits
  1311 ;; This function is called by:
  1312 ;;		_lcd_4bit_send_char_data_pos
  1313 ;;		_lcd_4bit_send_custom_char
  1314 ;;		_lcd_4bit_send_string
  1315 ;;		_lcd_4bit_send_string_pos
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text7
  1320   00179A                     __ptext7:
  1321                           	callstack 0
  1322   00179A                     _lcd_4bit_send_char_data:
  1323                           	callstack 26
  1324   00179A                     
  1325                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 86:     if(((void*)0) == lcd){
  1326   00179A  503A               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1327   00179C  A4D8               	btfss	status,2,c
  1328   00179E  EFD3  F00B         	goto	u1401
  1329   0017A2  EFD5  F00B         	goto	u1400
  1330   0017A6                     u1401:
  1331   0017A6  EFD9  F00B         	goto	l2464
  1332   0017AA                     u1400:
  1333   0017AA                     
  1334                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 87:         ret = (Std_ReturnType)0x00;
  1335   0017AA  0E00               	movlw	0
  1336   0017AC  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1337                           
  1338                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 88:     }
  1339   0017AE  EFF9  F00B         	goto	l2466
  1340   0017B2                     l2464:
  1341                           
  1342                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 90:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_HIGH);
  1343   0017B2  C03A  F02F         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1344   0017B6  0E01               	movlw	1
  1345   0017B8  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1346   0017BA  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  1347   0017BE  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1348                           
  1349                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 91:         ret = lcd_send_4bits(lcd, (data >> 4));
  1350   0017C0  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1351   0017C4  383B               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1352   0017C6  0B0F               	andlw	15
  1353   0017C8  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  1354   0017CA  EC60  F00B         	call	_lcd_send_4bits	;wreg free
  1355   0017CE  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1356                           
  1357                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 92:         ret = lcd_4bit_send_enable_signal(lcd);
  1358   0017D0  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1359   0017D4  ECB1  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  1360   0017D8  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1361                           
  1362                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 93:         ret = lcd_send_4bits(lcd, data);
  1363   0017DA  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1364   0017DE  C03B  F038         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  1365   0017E2  EC60  F00B         	call	_lcd_send_4bits	;wreg free
  1366   0017E6  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1367                           
  1368                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 94:         ret = lcd_4bit_send_enable_signal(lcd);
  1369   0017E8  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1370   0017EC  ECB1  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  1371   0017F0  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1372   0017F2                     l2466:
  1373                           
  1374                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 96:     return ret;
  1375   0017F2  503C               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1376   0017F4  0012               	return		;funcret
  1377   0017F6                     __end_of_lcd_4bit_send_char_data:
  1378                           	callstack 0
  1379                           
  1380 ;; *************** function _app_init *****************
  1381 ;; Defined at:
  1382 ;;		line 34 in file "appplication.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;		None
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;Total ram usage:        0 bytes
  1401 ;; Hardware stack levels used: 1
  1402 ;; Hardware stack levels required when called: 5
  1403 ;; This function calls:
  1404 ;;		_ecu_layer_initialize
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text8
  1411   001A10                     __ptext8:
  1412                           	callstack 0
  1413   001A10                     _app_init:
  1414                           	callstack 25
  1415   001A10                     
  1416                           ;appplication.c: 36:     ecu_layer_initialize();
  1417   001A10  ECFF  F00C         	call	_ecu_layer_initialize	;wreg free
  1418   001A14  0012               	return		;funcret
  1419   001A16                     __end_of_app_init:
  1420                           	callstack 0
  1421                           
  1422 ;; *************** function _ecu_layer_initialize *****************
  1423 ;; Defined at:
  1424 ;;		line 84 in file "ECU_Layer/ecu_layer_init.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  ret             1    0        unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;Total ram usage:        0 bytes
  1443 ;; Hardware stack levels used: 1
  1444 ;; Hardware stack levels required when called: 4
  1445 ;; This function calls:
  1446 ;;		_lcd_4bit_initialize
  1447 ;;		_lcd_8bit_initialize
  1448 ;; This function is called by:
  1449 ;;		_app_init
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text9
  1454   0019FE                     __ptext9:
  1455                           	callstack 0
  1456   0019FE                     _ecu_layer_initialize:
  1457                           	callstack 25
  1458   0019FE  0E29               	movlw	low _lcd_1
  1459   001A00  6E3D               	movwf	lcd_4bit_initialize@lcd^0,c
  1460   001A02  EC9C  F009         	call	_lcd_4bit_initialize	;wreg free
  1461   001A06  0E1F               	movlw	low _lcd_2
  1462   001A08  6E3F               	movwf	lcd_8bit_initialize@lcd^0,c
  1463   001A0A  EC2E  F009         	call	_lcd_8bit_initialize	;wreg free
  1464   001A0E  0012               	return		;funcret
  1465   001A10                     __end_of_ecu_layer_initialize:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _lcd_8bit_initialize *****************
  1469 ;; Defined at:
  1470 ;;		line 205 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  lcd             1   16[COMRAM] PTR const struct .
  1473 ;;		 -> lcd_2(10), 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  ret             1   19[COMRAM] unsigned char 
  1476 ;;  l_data_pins_    1   18[COMRAM] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      unsigned char 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1486 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;Total ram usage:        4 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 3
  1493 ;; This function calls:
  1494 ;;		_gpio_pin_initialize
  1495 ;;		_lcd_8bit_send_command
  1496 ;; This function is called by:
  1497 ;;		_ecu_layer_initialize
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text10
  1502   00125C                     __ptext10:
  1503                           	callstack 0
  1504   00125C                     _lcd_8bit_initialize:
  1505                           	callstack 25
  1506   00125C                     
  1507                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 207:     uint8 l_data_pins_counter = 0;
  1508   00125C  0E00               	movlw	0
  1509   00125E  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  1510                           
  1511                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 208:     if(((void*)0) == lcd){
  1512   001260  503F               	movf	lcd_8bit_initialize@lcd^0,w,c
  1513   001262  A4D8               	btfss	status,2,c
  1514   001264  EF36  F009         	goto	u1411
  1515   001268  EF38  F009         	goto	u1410
  1516   00126C                     u1411:
  1517   00126C  EF3A  F009         	goto	l2496
  1518   001270                     u1410:
  1519   001270                     
  1520                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 210:     }
  1521   001270  EF55  F009         	goto	l2510
  1522   001274                     l2496:
  1523                           
  1524                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 212:         ret = gpio_pin_initialize(&(lcd->lcd_rs))
      +                          ;
  1525   001274  C03F  F037         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialize@_pin_config
  1526   001278  EC29  F00C         	call	_gpio_pin_initialize	;wreg free
  1527   00127C  6E42               	movwf	lcd_8bit_initialize@ret^0,c
  1528                           
  1529                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 213:         ret = gpio_pin_initialize(&(lcd->lcd_en))
      +                          ;
  1530   00127E  283F               	incf	lcd_8bit_initialize@lcd^0,w,c
  1531   001280  6E37               	movwf	gpio_pin_initialize@_pin_config^0,c
  1532   001282  EC29  F00C         	call	_gpio_pin_initialize	;wreg free
  1533   001286  6E42               	movwf	lcd_8bit_initialize@ret^0,c
  1534   001288                     
  1535                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 214:         for(l_data_pins_counter = 0; l_data_pins_
      +                          counter<8; l_data_pins_counter++){
  1536   001288  0E00               	movlw	0
  1537   00128A  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  1538   00128C                     l2504:
  1539   00128C  503F               	movf	lcd_8bit_initialize@lcd^0,w,c
  1540   00128E  2441               	addwf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
  1541   001290  0F02               	addlw	2
  1542   001292  6E37               	movwf	gpio_pin_initialize@_pin_config^0,c
  1543   001294  EC29  F00C         	call	_gpio_pin_initialize	;wreg free
  1544   001298                     
  1545                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 216:         }
  1546   001298  2A41               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
  1547   00129A  0E07               	movlw	7
  1548   00129C  6441               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
  1549   00129E  EF53  F009         	goto	u1421
  1550   0012A2  EF55  F009         	goto	u1420
  1551   0012A6                     u1421:
  1552   0012A6  EF46  F009         	goto	l2504
  1553   0012AA                     u1420:
  1554   0012AA                     l2510:
  1555                           
  1556                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 218:     _delay((unsigned long)((20)*(4000000UL/4000.0
      +                          )));
  1557   0012AA  0E1A               	movlw	26
  1558   0012AC  6E40               	movwf	??_lcd_8bit_initialize^0,c
  1559   0012AE  0EF8               	movlw	248
  1560   0012B0                     u1907:
  1561   0012B0  2EE8               	decfsz	wreg,f,c
  1562   0012B2  D7FE               	bra	u1907
  1563   0012B4  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
  1564   0012B6  D7FC               	bra	u1907
  1565   0012B8  D000               	nop2	
  1566   0012BA  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1567   0012BE  0E38               	movlw	56
  1568   0012C0  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1569   0012C2  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1570   0012C6                     
  1571                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 220:     _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
  1572   0012C6  D000               	nop2		;2 cycle nop
  1573   0012C8  D000               	nop2		;2 cycle nop
  1574   0012CA  0000               	nop	
  1575   0012CC  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1576   0012D0  0E38               	movlw	56
  1577   0012D2  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1578   0012D4  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1579                           
  1580                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 222:     _delay((unsigned long)((150)*(4000000UL/40000
      +                          00.0)));
  1581   0012D8  0E32               	movlw	50
  1582   0012DA                     u1917:
  1583   0012DA  2EE8               	decfsz	wreg,f,c
  1584   0012DC  D7FE               	bra	u1917
  1585   0012DE  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1586   0012E2  0E38               	movlw	56
  1587   0012E4  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1588   0012E6  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1589   0012EA  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1590   0012EE  0E01               	movlw	1
  1591   0012F0  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1592   0012F2  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1593   0012F6  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1594   0012FA  0E02               	movlw	2
  1595   0012FC  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1596   0012FE  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1597   001302  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1598   001306  0E06               	movlw	6
  1599   001308  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1600   00130A  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1601   00130E  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1602   001312  0E0C               	movlw	12
  1603   001314  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1604   001316  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1605   00131A  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1606   00131E  0E38               	movlw	56
  1607   001320  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1608   001322  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1609   001326                     
  1610                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 230:     ret = lcd_8bit_send_command(lcd, 0x80);
  1611   001326  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1612   00132A  0E80               	movlw	128
  1613   00132C  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1614   00132E  EC25  F00B         	call	_lcd_8bit_send_command	;wreg free
  1615   001332  6E42               	movwf	lcd_8bit_initialize@ret^0,c
  1616   001334                     
  1617                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 231:     return ret;
  1618   001334  5042               	movf	lcd_8bit_initialize@ret^0,w,c
  1619   001336  0012               	return		;funcret
  1620   001338                     __end_of_lcd_8bit_initialize:
  1621                           	callstack 0
  1622                           
  1623 ;; *************** function _lcd_8bit_send_command *****************
  1624 ;; Defined at:
  1625 ;;		line 242 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  lcd             1   10[COMRAM] PTR const struct .
  1628 ;;		 -> lcd_2(10), 
  1629 ;;  command         1   11[COMRAM] unsigned char 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  cnt             1   15[COMRAM] unsigned char 
  1632 ;;  ret             1   14[COMRAM] unsigned char 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      unsigned char 
  1635 ;; Registers used:
  1636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;Total ram usage:        6 bytes
  1647 ;; Hardware stack levels used: 1
  1648 ;; Hardware stack levels required when called: 2
  1649 ;; This function calls:
  1650 ;;		_gpio_pin_write_logic
  1651 ;;		_lcd_8bit_send_enable_signal
  1652 ;; This function is called by:
  1653 ;;		_lcd_8bit_initialize
  1654 ;;		_lcd_8bit_set_cursor
  1655 ;;		_lcd_8bit_send_custom_char
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text11
  1660   00164A                     __ptext11:
  1661                           	callstack 0
  1662   00164A                     _lcd_8bit_send_command:
  1663                           	callstack 26
  1664   00164A                     
  1665                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 244:     uint8 cnt = 0;
  1666   00164A  0E00               	movlw	0
  1667   00164C  6E3E               	movwf	lcd_8bit_send_command@cnt^0,c
  1668                           
  1669                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 245:     if(((void*)0) == lcd){
  1670   00164E  5039               	movf	lcd_8bit_send_command@lcd^0,w,c
  1671   001650  A4D8               	btfss	status,2,c
  1672   001652  EF2D  F00B         	goto	u1351
  1673   001656  EF2F  F00B         	goto	u1350
  1674   00165A                     u1351:
  1675   00165A  EF33  F00B         	goto	l2396
  1676   00165E                     u1350:
  1677   00165E                     
  1678                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 246:         ret = (Std_ReturnType)0x00;
  1679   00165E  0E00               	movlw	0
  1680   001660  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1681                           
  1682                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 247:     }
  1683   001662  EF5E  F00B         	goto	l2412
  1684   001666                     l2396:
  1685   001666  C039  F02F         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1686   00166A  0E00               	movlw	0
  1687   00166C  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1688   00166E  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  1689   001672                     
  1690                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 250:         for(cnt=0; cnt<8; cnt++)
  1691   001672  0E00               	movlw	0
  1692   001674  6E3E               	movwf	lcd_8bit_send_command@cnt^0,c
  1693   001676                     l2404:
  1694   001676  5039               	movf	lcd_8bit_send_command@lcd^0,w,c
  1695   001678  243E               	addwf	lcd_8bit_send_command@cnt^0,w,c
  1696   00167A  0F02               	addlw	2
  1697   00167C  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1698   00167E  C03E  F03B         	movff	lcd_8bit_send_command@cnt,??_lcd_8bit_send_command
  1699   001682  C03A  F03C         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1700   001686  2A3B               	incf	??_lcd_8bit_send_command^0,f,c
  1701   001688  EF48  F00B         	goto	u1364
  1702   00168C                     u1365:
  1703   00168C  90D8               	bcf	status,0,c
  1704   00168E  323C               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1705   001690                     u1364:
  1706   001690  2E3B               	decfsz	??_lcd_8bit_send_command^0,f,c
  1707   001692  EF46  F00B         	goto	u1365
  1708   001696  503C               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1709   001698  0B01               	andlw	1
  1710   00169A  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1711   00169C  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  1712   0016A0                     
  1713                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 253:         }
  1714   0016A0  2A3E               	incf	lcd_8bit_send_command@cnt^0,f,c
  1715   0016A2  0E07               	movlw	7
  1716   0016A4  643E               	cpfsgt	lcd_8bit_send_command@cnt^0,c
  1717   0016A6  EF57  F00B         	goto	u1371
  1718   0016AA  EF59  F00B         	goto	u1370
  1719   0016AE                     u1371:
  1720   0016AE  EF3B  F00B         	goto	l2404
  1721   0016B2                     u1370:
  1722   0016B2                     
  1723                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 254:         ret = lcd_8bit_send_enable_signal(lcd);
  1724   0016B2  C039  F037         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  1725   0016B6  EC93  F00C         	call	_lcd_8bit_send_enable_signal	;wreg free
  1726   0016BA  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1727   0016BC                     l2412:
  1728                           
  1729                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 256:     return ret;
  1730   0016BC  503D               	movf	lcd_8bit_send_command@ret^0,w,c
  1731   0016BE  0012               	return		;funcret
  1732   0016C0                     __end_of_lcd_8bit_send_command:
  1733                           	callstack 0
  1734                           
  1735 ;; *************** function _lcd_8bit_send_enable_signal *****************
  1736 ;; Defined at:
  1737 ;;		line 455 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  lcd             1    8[COMRAM] PTR const struct .
  1740 ;;		 -> lcd_2(10), 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  ret             1    9[COMRAM] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      unsigned char 
  1745 ;; Registers used:
  1746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1752 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;Total ram usage:        2 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; Hardware stack levels required when called: 1
  1759 ;; This function calls:
  1760 ;;		_gpio_pin_write_logic
  1761 ;; This function is called by:
  1762 ;;		_lcd_8bit_send_command
  1763 ;;		_lcd_8bit_send_char_data
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text12
  1768   001926                     __ptext12:
  1769                           	callstack 0
  1770   001926                     _lcd_8bit_send_enable_signal:
  1771                           	callstack 26
  1772   001926                     
  1773                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 457:     if(((void*)0) == lcd){
  1774   001926  5037               	movf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1775   001928  A4D8               	btfss	status,2,c
  1776   00192A  EF99  F00C         	goto	u1311
  1777   00192E  EF9B  F00C         	goto	u1310
  1778   001932                     u1311:
  1779   001932  EF9F  F00C         	goto	l2362
  1780   001936                     u1310:
  1781   001936                     
  1782                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 458:         ret = (Std_ReturnType)0x00;
  1783   001936  0E00               	movlw	0
  1784   001938  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1785                           
  1786                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 459:     }
  1787   00193A  EFAF  F00C         	goto	l2366
  1788   00193E                     l2362:
  1789   00193E  2837               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1790   001940  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1791   001942  0E01               	movlw	1
  1792   001944  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1793   001946  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  1794   00194A                     
  1795                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 462:         _delay((unsigned long)((5)*(4000000UL/400
      +                          0000.0)));
  1796   00194A  D000               	nop2		;2 cycle nop
  1797   00194C  D000               	nop2		;2 cycle nop
  1798   00194E  0000               	nop	
  1799                           
  1800                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 463:         ret = gpio_pin_write_logic(&(lcd->lcd_en)
      +                          , GPIO_LOW);
  1801   001950  2837               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1802   001952  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1803   001954  0E00               	movlw	0
  1804   001956  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1805   001958  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  1806   00195C  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1807   00195E                     l2366:
  1808                           
  1809                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 465:     return ret;
  1810   00195E  5038               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  1811   001960  0012               	return		;funcret
  1812   001962                     __end_of_lcd_8bit_send_enable_signal:
  1813                           	callstack 0
  1814                           
  1815 ;; *************** function _lcd_4bit_initialize *****************
  1816 ;; Defined at:
  1817 ;;		line 24 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  lcd             1   14[COMRAM] PTR const struct .
  1820 ;;		 -> lcd_1(6), 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;  ret             1   17[COMRAM] unsigned char 
  1823 ;;  l_data_pins_    1   16[COMRAM] unsigned char 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      unsigned char 
  1826 ;; Registers used:
  1827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1833 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;Total ram usage:        4 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; Hardware stack levels required when called: 3
  1840 ;; This function calls:
  1841 ;;		_gpio_pin_initialize
  1842 ;;		_lcd_4bit_send_command
  1843 ;; This function is called by:
  1844 ;;		_ecu_layer_initialize
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text13
  1849   001338                     __ptext13:
  1850                           	callstack 0
  1851   001338                     _lcd_4bit_initialize:
  1852                           	callstack 25
  1853   001338                     
  1854                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 26:     uint8 l_data_pins_counter = 0;
  1855   001338  0E00               	movlw	0
  1856   00133A  6E3F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1857                           
  1858                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 27:     if(((void*)0) == lcd){
  1859   00133C  503D               	movf	lcd_4bit_initialize@lcd^0,w,c
  1860   00133E  A4D8               	btfss	status,2,c
  1861   001340  EFA4  F009         	goto	u1381
  1862   001344  EFA6  F009         	goto	u1380
  1863   001348                     u1381:
  1864   001348  EFA8  F009         	goto	l2420
  1865   00134C                     u1380:
  1866   00134C                     
  1867                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 29:     }
  1868   00134C  EFC3  F009         	goto	l2434
  1869   001350                     l2420:
  1870                           
  1871                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 31:         ret = gpio_pin_initialize(&(lcd->lcd_rs));
  1872   001350  C03D  F037         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@_pin_config
  1873   001354  EC29  F00C         	call	_gpio_pin_initialize	;wreg free
  1874   001358  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1875                           
  1876                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 32:         ret = gpio_pin_initialize(&(lcd->lcd_en));
  1877   00135A  283D               	incf	lcd_4bit_initialize@lcd^0,w,c
  1878   00135C  6E37               	movwf	gpio_pin_initialize@_pin_config^0,c
  1879   00135E  EC29  F00C         	call	_gpio_pin_initialize	;wreg free
  1880   001362  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1881   001364                     
  1882                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 33:         for(l_data_pins_counter = 0; l_data_pins_c
      +                          ounter<4; l_data_pins_counter++){
  1883   001364  0E00               	movlw	0
  1884   001366  6E3F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1885   001368                     l2428:
  1886   001368  503D               	movf	lcd_4bit_initialize@lcd^0,w,c
  1887   00136A  243F               	addwf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
  1888   00136C  0F02               	addlw	2
  1889   00136E  6E37               	movwf	gpio_pin_initialize@_pin_config^0,c
  1890   001370  EC29  F00C         	call	_gpio_pin_initialize	;wreg free
  1891   001374                     
  1892                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:         }
  1893   001374  2A3F               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
  1894   001376  0E03               	movlw	3
  1895   001378  643F               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
  1896   00137A  EFC1  F009         	goto	u1391
  1897   00137E  EFC3  F009         	goto	u1390
  1898   001382                     u1391:
  1899   001382  EFB4  F009         	goto	l2428
  1900   001386                     u1390:
  1901   001386                     l2434:
  1902                           
  1903                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 37:     _delay((unsigned long)((20)*(4000000UL/4000.0)
      +                          ));
  1904   001386  0E1A               	movlw	26
  1905   001388  6E3E               	movwf	??_lcd_4bit_initialize^0,c
  1906   00138A  0EF8               	movlw	248
  1907   00138C                     u1927:
  1908   00138C  2EE8               	decfsz	wreg,f,c
  1909   00138E  D7FE               	bra	u1927
  1910   001390  2E3E               	decfsz	??_lcd_4bit_initialize^0,f,c
  1911   001392  D7FC               	bra	u1927
  1912   001394  D000               	nop2	
  1913   001396  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1914   00139A  0E38               	movlw	56
  1915   00139C  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1916   00139E  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1917   0013A2                     
  1918                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 39:     _delay((unsigned long)((5)*(4000000UL/4000000.
      +                          0)));
  1919   0013A2  D000               	nop2		;2 cycle nop
  1920   0013A4  D000               	nop2		;2 cycle nop
  1921   0013A6  0000               	nop	
  1922   0013A8  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1923   0013AC  0E38               	movlw	56
  1924   0013AE  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1925   0013B0  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1926                           
  1927                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 41:     _delay((unsigned long)((150)*(4000000UL/400000
      +                          0.0)));
  1928   0013B4  0E32               	movlw	50
  1929   0013B6                     u1937:
  1930   0013B6  2EE8               	decfsz	wreg,f,c
  1931   0013B8  D7FE               	bra	u1937
  1932   0013BA  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1933   0013BE  0E38               	movlw	56
  1934   0013C0  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1935   0013C2  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1936   0013C6  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1937   0013CA  0E01               	movlw	1
  1938   0013CC  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1939   0013CE  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1940   0013D2  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1941   0013D6  0E02               	movlw	2
  1942   0013D8  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1943   0013DA  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1944   0013DE  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1945   0013E2  0E06               	movlw	6
  1946   0013E4  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1947   0013E6  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1948   0013EA  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1949   0013EE  0E0C               	movlw	12
  1950   0013F0  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1951   0013F2  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1952   0013F6  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1953   0013FA  0E28               	movlw	40
  1954   0013FC  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1955   0013FE  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1956   001402                     
  1957                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 49:     ret = lcd_4bit_send_command(lcd, 0x80);
  1958   001402  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1959   001406  0E80               	movlw	128
  1960   001408  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1961   00140A  ECFB  F00B         	call	_lcd_4bit_send_command	;wreg free
  1962   00140E  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1963   001410                     
  1964                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 50:     return ret;
  1965   001410  5040               	movf	lcd_4bit_initialize@ret^0,w,c
  1966   001412  0012               	return		;funcret
  1967   001414                     __end_of_lcd_4bit_initialize:
  1968                           	callstack 0
  1969                           
  1970 ;; *************** function _lcd_4bit_send_command *****************
  1971 ;; Defined at:
  1972 ;;		line 61 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  lcd             1   11[COMRAM] PTR const struct .
  1975 ;;		 -> lcd_1(6), 
  1976 ;;  command         1   12[COMRAM] unsigned char 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  ret             1   13[COMRAM] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      unsigned char 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;Total ram usage:        3 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; Hardware stack levels required when called: 2
  1995 ;; This function calls:
  1996 ;;		_gpio_pin_write_logic
  1997 ;;		_lcd_4bit_send_enable_signal
  1998 ;;		_lcd_send_4bits
  1999 ;; This function is called by:
  2000 ;;		_lcd_4bit_initialize
  2001 ;;		_lcd_4bit_send_custom_char
  2002 ;;		_lcd_4bit_set_cursor
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text14
  2007   0017F6                     __ptext14:
  2008                           	callstack 0
  2009   0017F6                     _lcd_4bit_send_command:
  2010                           	callstack 27
  2011   0017F6                     
  2012                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 63:     if(((void*)0) == lcd){
  2013   0017F6  503A               	movf	lcd_4bit_send_command@lcd^0,w,c
  2014   0017F8  A4D8               	btfss	status,2,c
  2015   0017FA  EF01  F00C         	goto	u1341
  2016   0017FE  EF03  F00C         	goto	u1340
  2017   001802                     u1341:
  2018   001802  EF07  F00C         	goto	l2386
  2019   001806                     u1340:
  2020   001806                     
  2021                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 64:         ret = (Std_ReturnType)0x00;
  2022   001806  0E00               	movlw	0
  2023   001808  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2024                           
  2025                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 65:     }
  2026   00180A  EF27  F00C         	goto	l2388
  2027   00180E                     l2386:
  2028                           
  2029                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 67:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_LOW);
  2030   00180E  C03A  F02F         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  2031   001812  0E00               	movlw	0
  2032   001814  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2033   001816  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  2034   00181A  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2035                           
  2036                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 68:         ret = lcd_send_4bits(lcd, (command >> 4));
  2037   00181C  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2038   001820  383B               	swapf	lcd_4bit_send_command@command^0,w,c
  2039   001822  0B0F               	andlw	15
  2040   001824  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  2041   001826  EC60  F00B         	call	_lcd_send_4bits	;wreg free
  2042   00182A  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2043                           
  2044                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 69:         ret = lcd_4bit_send_enable_signal(lcd);
  2045   00182C  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  2046   001830  ECB1  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  2047   001834  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2048                           
  2049                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret = lcd_send_4bits(lcd, command);
  2050   001836  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2051   00183A  C03B  F038         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  2052   00183E  EC60  F00B         	call	_lcd_send_4bits	;wreg free
  2053   001842  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2054                           
  2055                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 71:         ret = lcd_4bit_send_enable_signal(lcd);
  2056   001844  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  2057   001848  ECB1  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  2058   00184C  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2059   00184E                     l2388:
  2060                           
  2061                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 73:     return ret;
  2062   00184E  503C               	movf	lcd_4bit_send_command@ret^0,w,c
  2063   001850  0012               	return		;funcret
  2064   001852                     __end_of_lcd_4bit_send_command:
  2065                           	callstack 0
  2066                           
  2067 ;; *************** function _lcd_send_4bits *****************
  2068 ;; Defined at:
  2069 ;;		line 392 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  lcd             1    8[COMRAM] PTR const struct .
  2072 ;;		 -> lcd_1(6), 
  2073 ;;  _data_comman    1    9[COMRAM] unsigned char 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  ret             1   10[COMRAM] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      unsigned char 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;Total ram usage:        3 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 1
  2092 ;; This function calls:
  2093 ;;		_gpio_pin_write_logic
  2094 ;; This function is called by:
  2095 ;;		_lcd_4bit_send_command
  2096 ;;		_lcd_4bit_send_char_data
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text15
  2101   0016C0                     __ptext15:
  2102                           	callstack 0
  2103   0016C0                     _lcd_send_4bits:
  2104                           	callstack 27
  2105   0016C0                     
  2106                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 394:     if(((void*)0) == lcd){
  2107   0016C0  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2108   0016C2  A4D8               	btfss	status,2,c
  2109   0016C4  EF66  F00B         	goto	u1291
  2110   0016C8  EF68  F00B         	goto	u1290
  2111   0016CC                     u1291:
  2112   0016CC  EF6C  F00B         	goto	l2340
  2113   0016D0                     u1290:
  2114   0016D0                     
  2115                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 395:         ret = (Std_ReturnType)0x00;
  2116   0016D0  0E00               	movlw	0
  2117   0016D2  6E39               	movwf	lcd_send_4bits@ret^0,c
  2118                           
  2119                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 396:     }
  2120   0016D4  EF95  F00B         	goto	l2342
  2121   0016D8                     l2340:
  2122                           
  2123                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 398:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[0]), (_data_command >> 0) & (uint8)0x01);
  2124   0016D8  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2125   0016DA  0F02               	addlw	2
  2126   0016DC  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2127   0016DE  5038               	movf	lcd_send_4bits@_data_command^0,w,c
  2128   0016E0  0B01               	andlw	1
  2129   0016E2  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2130   0016E4  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  2131   0016E8  6E39               	movwf	lcd_send_4bits@ret^0,c
  2132                           
  2133                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 399:         ret &= gpio_pin_write_logic(&(lcd->lcd_da
      +                          ta[1]), (_data_command >> 1) & (uint8)0x01);
  2134   0016EA  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2135   0016EC  0F03               	addlw	3
  2136   0016EE  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2137   0016F0  90D8               	bcf	status,0,c
  2138   0016F2  3038               	rrcf	lcd_send_4bits@_data_command^0,w,c
  2139   0016F4  0B01               	andlw	1
  2140   0016F6  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2141   0016F8  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  2142   0016FC  1639               	andwf	lcd_send_4bits@ret^0,f,c
  2143                           
  2144                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 400:         ret &= gpio_pin_write_logic(&(lcd->lcd_da
      +                          ta[2]), (_data_command >> 2) & (uint8)0x01);
  2145   0016FE  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2146   001700  0F04               	addlw	4
  2147   001702  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2148   001704  4038               	rrncf	lcd_send_4bits@_data_command^0,w,c
  2149   001706  42E8               	rrncf	wreg,f,c
  2150   001708  0B3F               	andlw	63
  2151   00170A  0B01               	andlw	1
  2152   00170C  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2153   00170E  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  2154   001712  1639               	andwf	lcd_send_4bits@ret^0,f,c
  2155                           
  2156                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 401:         ret &= gpio_pin_write_logic(&(lcd->lcd_da
      +                          ta[3]), (_data_command >> 3) & (uint8)0x01);
  2157   001714  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2158   001716  0F05               	addlw	5
  2159   001718  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2160   00171A  3838               	swapf	lcd_send_4bits@_data_command^0,w,c
  2161   00171C  46E8               	rlncf	wreg,f,c
  2162   00171E  0B1F               	andlw	31
  2163   001720  0B01               	andlw	1
  2164   001722  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2165   001724  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  2166   001728  1639               	andwf	lcd_send_4bits@ret^0,f,c
  2167   00172A                     l2342:
  2168                           
  2169                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 403:     return ret;
  2170   00172A  5039               	movf	lcd_send_4bits@ret^0,w,c
  2171   00172C  0012               	return		;funcret
  2172   00172E                     __end_of_lcd_send_4bits:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function _lcd_4bit_send_enable_signal *****************
  2176 ;; Defined at:
  2177 ;;		line 413 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  lcd             1    8[COMRAM] PTR const struct .
  2180 ;;		 -> lcd_1(6), 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  ret             1    9[COMRAM] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      unsigned char 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2192 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;Total ram usage:        2 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 1
  2199 ;; This function calls:
  2200 ;;		_gpio_pin_write_logic
  2201 ;; This function is called by:
  2202 ;;		_lcd_4bit_send_command
  2203 ;;		_lcd_4bit_send_char_data
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text16
  2208   001962                     __ptext16:
  2209                           	callstack 0
  2210   001962                     _lcd_4bit_send_enable_signal:
  2211                           	callstack 27
  2212   001962                     
  2213                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 415:     if(((void*)0) == lcd){
  2214   001962  5037               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2215   001964  A4D8               	btfss	status,2,c
  2216   001966  EFB7  F00C         	goto	u1301
  2217   00196A  EFB9  F00C         	goto	u1300
  2218   00196E                     u1301:
  2219   00196E  EFBD  F00C         	goto	l2350
  2220   001972                     u1300:
  2221   001972                     
  2222                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 416:         ret = (Std_ReturnType)0x00;
  2223   001972  0E00               	movlw	0
  2224   001974  6E38               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2225                           
  2226                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 417:     }
  2227   001976  EFCD  F00C         	goto	l2354
  2228   00197A                     l2350:
  2229   00197A  2837               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2230   00197C  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2231   00197E  0E01               	movlw	1
  2232   001980  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2233   001982  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  2234   001986                     
  2235                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 420:         _delay((unsigned long)((5)*(4000000UL/400
      +                          0000.0)));
  2236   001986  D000               	nop2		;2 cycle nop
  2237   001988  D000               	nop2		;2 cycle nop
  2238   00198A  0000               	nop	
  2239                           
  2240                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 421:         ret = gpio_pin_write_logic(&(lcd->lcd_en)
      +                          , GPIO_LOW);
  2241   00198C  2837               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2242   00198E  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2243   001990  0E00               	movlw	0
  2244   001992  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2245   001994  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  2246   001998  6E38               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2247   00199A                     l2354:
  2248                           
  2249                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 423:     return ret;
  2250   00199A  5038               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  2251   00199C  0012               	return		;funcret
  2252   00199E                     __end_of_lcd_4bit_send_enable_signal:
  2253                           	callstack 0
  2254                           
  2255 ;; *************** function _gpio_pin_initialize *****************
  2256 ;; Defined at:
  2257 ;;		line 134 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  _pin_config     1    8[COMRAM] PTR struct .
  2260 ;;		 -> lcd_2$lcd_data(8), lcd_2$lcd_en(1), lcd_2$lcd_rs(1), lcd_2(10), 
  2261 ;;		 -> lcd_1$lcd_data(4), lcd_1$lcd_en(1), lcd_1$lcd_rs(1), lcd_1(6), 
  2262 ;;		 -> led_initialize@pin_obj(1), 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  ret             1   10[COMRAM] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      unsigned char 
  2267 ;; Registers used:
  2268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2274 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;Total ram usage:        3 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 1
  2281 ;; This function calls:
  2282 ;;		_gpio_pin_direction_initialize
  2283 ;;		_gpio_pin_write_logic
  2284 ;; This function is called by:
  2285 ;;		_lcd_4bit_initialize
  2286 ;;		_lcd_8bit_initialize
  2287 ;;		_keypad_initialize
  2288 ;;		_led_initialize
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text17
  2293   001852                     __ptext17:
  2294                           	callstack 0
  2295   001852                     _gpio_pin_initialize:
  2296                           	callstack 26
  2297   001852                     
  2298                           ;MCAL_Layer/GPIO/hal_gpio.c: 136:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           (8 - 1))
  2299   001852  5037               	movf	gpio_pin_initialize@_pin_config^0,w,c
  2300   001854  B4D8               	btfsc	status,2,c
  2301   001856  EF2F  F00C         	goto	u1321
  2302   00185A  EF31  F00C         	goto	u1320
  2303   00185E                     u1321:
  2304   00185E  EF41  F00C         	goto	l2374
  2305   001862                     u1320:
  2306   001862  5037               	movf	gpio_pin_initialize@_pin_config^0,w,c
  2307   001864  6ED9               	movwf	fsr2l,c
  2308   001866  6ADA               	clrf	fsr2h,c
  2309   001868  30DF               	rrcf	223,w,c
  2310   00186A  32E8               	rrcf	wreg,f,c
  2311   00186C  32E8               	rrcf	wreg,f,c
  2312   00186E  0B07               	andlw	7
  2313   001870  6E38               	movwf	??_gpio_pin_initialize^0,c
  2314   001872  0E07               	movlw	7
  2315   001874  6438               	cpfsgt	??_gpio_pin_initialize^0,c
  2316   001876  EF3F  F00C         	goto	u1331
  2317   00187A  EF41  F00C         	goto	u1330
  2318   00187E                     u1331:
  2319   00187E  EF45  F00C         	goto	l2376
  2320   001882                     u1330:
  2321   001882                     l2374:
  2322                           
  2323                           ;MCAL_Layer/GPIO/hal_gpio.c: 137:     {;MCAL_Layer/GPIO/hal_gpio.c: 138:         ret = (
      +                          Std_ReturnType)0x00;
  2324   001882  0E00               	movlw	0
  2325   001884  6E39               	movwf	gpio_pin_initialize@ret^0,c
  2326                           
  2327                           ;MCAL_Layer/GPIO/hal_gpio.c: 139:     }
  2328   001886  EF51  F00C         	goto	l2378
  2329   00188A                     l2376:
  2330                           
  2331                           ;MCAL_Layer/GPIO/hal_gpio.c: 141:     {;MCAL_Layer/GPIO/hal_gpio.c: 142:         ret = g
      +                          pio_pin_direction_initialize(_pin_config);
  2332   00188A  C037  F02F         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  2333   00188E  EC13  F008         	call	_gpio_pin_direction_initialize	;wreg free
  2334   001892  6E39               	movwf	gpio_pin_initialize@ret^0,c
  2335                           
  2336                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:         ret = gpio_pin_write_logic(_pin_config, GPIO_L
      +                          OW);
  2337   001894  C037  F02F         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  2338   001898  0E00               	movlw	0
  2339   00189A  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2340   00189C  ECA6  F008         	call	_gpio_pin_write_logic	;wreg free
  2341   0018A0  6E39               	movwf	gpio_pin_initialize@ret^0,c
  2342   0018A2                     l2378:
  2343                           
  2344                           ;MCAL_Layer/GPIO/hal_gpio.c: 145:     return ret;
  2345   0018A2  5039               	movf	gpio_pin_initialize@ret^0,w,c
  2346   0018A4  0012               	return		;funcret
  2347   0018A6                     __end_of_gpio_pin_initialize:
  2348                           	callstack 0
  2349                           
  2350 ;; *************** function _gpio_pin_write_logic *****************
  2351 ;; Defined at:
  2352 ;;		line 78 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  _pin_config     1    0[COMRAM] PTR struct .
  2355 ;;		 -> lcd_2$lcd_data(8), lcd_2$lcd_en(1), lcd_2$lcd_rs(1), lcd_2(10), 
  2356 ;;		 -> lcd_1$lcd_data(4), lcd_1$lcd_en(1), lcd_1$lcd_rs(1), lcd_1(6), 
  2357 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), 
  2358 ;;		 -> led_initialize@pin_obj(1), 
  2359 ;;  logic           1    1[COMRAM] enum E2978
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  ret             1    7[COMRAM] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      unsigned char 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2374 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;Total ram usage:        8 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_lcd_4bit_send_command
  2381 ;;		_lcd_4bit_send_char_data
  2382 ;;		_lcd_8bit_send_command
  2383 ;;		_lcd_8bit_send_char_data
  2384 ;;		_lcd_send_4bits
  2385 ;;		_lcd_4bit_send_enable_signal
  2386 ;;		_lcd_8bit_send_enable_signal
  2387 ;;		_gpio_pin_initialize
  2388 ;;		_seven_segment_write_number
  2389 ;;		_dc_motor_move_right
  2390 ;;		_dc_motor_move_left
  2391 ;;		_dc_motor_stop
  2392 ;;		_keypad_get_value
  2393 ;;		_led_turn_on
  2394 ;;		_led_turn_off
  2395 ;;		_relay_turn_on
  2396 ;;		_relay_turn_off
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text18
  2401   00114C                     __ptext18:
  2402                           	callstack 0
  2403   00114C                     _gpio_pin_write_logic:
  2404                           	callstack 26
  2405   00114C                     
  2406                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  2407   00114C  0E01               	movlw	1
  2408   00114E  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  2409                           
  2410                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          (8 - 1))
  2411   001150  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2412   001152  B4D8               	btfsc	status,2,c
  2413   001154  EFAE  F008         	goto	u1191
  2414   001158  EFB0  F008         	goto	u1190
  2415   00115C                     u1191:
  2416   00115C  EFC0  F008         	goto	l2296
  2417   001160                     u1190:
  2418   001160  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2419   001162  6ED9               	movwf	fsr2l,c
  2420   001164  6ADA               	clrf	fsr2h,c
  2421   001166  30DF               	rrcf	223,w,c
  2422   001168  32E8               	rrcf	wreg,f,c
  2423   00116A  32E8               	rrcf	wreg,f,c
  2424   00116C  0B07               	andlw	7
  2425   00116E  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2426   001170  0E07               	movlw	7
  2427   001172  6431               	cpfsgt	??_gpio_pin_write_logic^0,c
  2428   001174  EFBE  F008         	goto	u1201
  2429   001178  EFC0  F008         	goto	u1200
  2430   00117C                     u1201:
  2431   00117C  EF17  F009         	goto	l2304
  2432   001180                     u1200:
  2433   001180                     l2296:
  2434                           
  2435                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:     {;MCAL_Layer/GPIO/hal_gpio.c: 82:         ret = (St
      +                          d_ReturnType)0x00;
  2436   001180  0E00               	movlw	0
  2437   001182  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  2438                           
  2439                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:     }
  2440   001184  EF2C  F009         	goto	l2306
  2441   001188                     l2298:
  2442                           
  2443                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:                 (*lat_registers[_pin_config->port] &= ~
      +                          (((uint8)1) << _pin_config->pin));
  2444   001188  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2445   00118A  6ED9               	movwf	fsr2l,c
  2446   00118C  6ADA               	clrf	fsr2h,c
  2447   00118E  30DF               	rrcf	223,w,c
  2448   001190  32E8               	rrcf	wreg,f,c
  2449   001192  32E8               	rrcf	wreg,f,c
  2450   001194  0B07               	andlw	7
  2451   001196  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2452   001198  0E01               	movlw	1
  2453   00119A  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2454   00119C  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  2455   00119E  EFD3  F008         	goto	u1214
  2456   0011A2                     u1215:
  2457   0011A2  90D8               	bcf	status,0,c
  2458   0011A4  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2459   0011A6                     u1214:
  2460   0011A6  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  2461   0011A8  EFD1  F008         	goto	u1215
  2462   0011AC  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2463   0011AE  0AFF               	xorlw	255
  2464   0011B0  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2465   0011B2  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2466   0011B4  6ED9               	movwf	fsr2l,c
  2467   0011B6  6ADA               	clrf	fsr2h,c
  2468   0011B8  50DF               	movf	223,w,c
  2469   0011BA  0B07               	andlw	7
  2470   0011BC  0D02               	mullw	2
  2471   0011BE  50F3               	movf	243,w,c
  2472   0011C0  0F0B               	addlw	low _lat_registers
  2473   0011C2  6ED9               	movwf	fsr2l,c
  2474   0011C4  6ADA               	clrf	fsr2h,c
  2475   0011C6  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+3
  2476   0011CA  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+4
  2477   0011CE  C034  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2478   0011D2  C035  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2479   0011D6  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2480   0011D8  16DF               	andwf	indf2,f,c
  2481                           
  2482                           ;MCAL_Layer/GPIO/hal_gpio.c: 90:                 break;
  2483   0011DA  EF2C  F009         	goto	l2306
  2484   0011DE                     l2300:
  2485                           
  2486                           ;MCAL_Layer/GPIO/hal_gpio.c: 92:                 (*lat_registers[_pin_config->port] |= (
      +                          ((uint8)1) << _pin_config->pin));
  2487   0011DE  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2488   0011E0  6ED9               	movwf	fsr2l,c
  2489   0011E2  6ADA               	clrf	fsr2h,c
  2490   0011E4  30DF               	rrcf	223,w,c
  2491   0011E6  32E8               	rrcf	wreg,f,c
  2492   0011E8  32E8               	rrcf	wreg,f,c
  2493   0011EA  0B07               	andlw	7
  2494   0011EC  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2495   0011EE  0E01               	movlw	1
  2496   0011F0  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2497   0011F2  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  2498   0011F4  EFFE  F008         	goto	u1224
  2499   0011F8                     u1225:
  2500   0011F8  90D8               	bcf	status,0,c
  2501   0011FA  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2502   0011FC                     u1224:
  2503   0011FC  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  2504   0011FE  EFFC  F008         	goto	u1225
  2505   001202  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2506   001204  6ED9               	movwf	fsr2l,c
  2507   001206  6ADA               	clrf	fsr2h,c
  2508   001208  50DF               	movf	223,w,c
  2509   00120A  0B07               	andlw	7
  2510   00120C  0D02               	mullw	2
  2511   00120E  50F3               	movf	243,w,c
  2512   001210  0F0B               	addlw	low _lat_registers
  2513   001212  6ED9               	movwf	fsr2l,c
  2514   001214  6ADA               	clrf	fsr2h,c
  2515   001216  CFDE F033          	movff	postinc2,??_gpio_pin_write_logic+2
  2516   00121A  CFDD F034          	movff	postdec2,??_gpio_pin_write_logic+3
  2517   00121E  C033  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2518   001222  C034  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2519   001226  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2520   001228  12DF               	iorwf	indf2,f,c
  2521                           
  2522                           ;MCAL_Layer/GPIO/hal_gpio.c: 93:                 break;
  2523   00122A  EF2C  F009         	goto	l2306
  2524   00122E                     l2304:
  2525   00122E  5030               	movf	gpio_pin_write_logic@logic^0,w,c
  2526   001230  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2527   001232  6A32               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2528                           
  2529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2530                           ; Switch size 1, requested type "simple"
  2531                           ; Number of cases is 1, Range of values is 0 to 0
  2532                           ; switch strategies available:
  2533                           ; Name         Instructions Cycles
  2534                           ; simple_byte            4     3 (average)
  2535                           ;	Chosen strategy is simple_byte
  2536   001234  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2537   001236  0A00               	xorlw	0	; case 0
  2538   001238  B4D8               	btfsc	status,2,c
  2539   00123A  EF21  F009         	goto	l3016
  2540   00123E  EFC0  F008         	goto	l2296
  2541   001242                     l3016:
  2542                           
  2543                           ; Switch size 1, requested type "simple"
  2544                           ; Number of cases is 2, Range of values is 0 to 1
  2545                           ; switch strategies available:
  2546                           ; Name         Instructions Cycles
  2547                           ; simple_byte            7     4 (average)
  2548                           ;	Chosen strategy is simple_byte
  2549   001242  5031               	movf	??_gpio_pin_write_logic^0,w,c
  2550   001244  0A00               	xorlw	0	; case 0
  2551   001246  B4D8               	btfsc	status,2,c
  2552   001248  EFC4  F008         	goto	l2298
  2553   00124C  0A01               	xorlw	1	; case 1
  2554   00124E  B4D8               	btfsc	status,2,c
  2555   001250  EFEF  F008         	goto	l2300
  2556   001254  EFC0  F008         	goto	l2296
  2557   001258                     l2306:
  2558                           
  2559                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:     return ret;
  2560   001258  5036               	movf	gpio_pin_write_logic@ret^0,w,c
  2561   00125A  0012               	return		;funcret
  2562   00125C                     __end_of_gpio_pin_write_logic:
  2563                           	callstack 0
  2564                           
  2565 ;; *************** function _gpio_pin_direction_initialize *****************
  2566 ;; Defined at:
  2567 ;;		line 22 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  _pin_config     1    0[COMRAM] PTR struct .
  2570 ;;		 -> lcd_2$lcd_data(8), lcd_2$lcd_en(1), lcd_2$lcd_rs(1), lcd_2(10), 
  2571 ;;		 -> lcd_1$lcd_data(4), lcd_1$lcd_en(1), lcd_1$lcd_rs(1), lcd_1(6), 
  2572 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  ret             1    6[COMRAM] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      unsigned char 
  2577 ;; Registers used:
  2578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2584 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;Total ram usage:        7 bytes
  2589 ;; Hardware stack levels used: 1
  2590 ;; This function calls:
  2591 ;;		Nothing
  2592 ;; This function is called by:
  2593 ;;		_gpio_pin_initialize
  2594 ;;		_seven_segment_initialize
  2595 ;;		_button_initialize
  2596 ;;		_dc_motor_initialize
  2597 ;;		_keypad_initialize
  2598 ;;		_relay_initialize
  2599 ;;		_Interrupt_INTx_Pin_Init
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text19
  2604   001026                     __ptext19:
  2605                           	callstack 0
  2606   001026                     _gpio_pin_direction_initialize:
  2607                           	callstack 26
  2608   001026                     
  2609                           ;MCAL_Layer/GPIO/hal_gpio.c: 22: Std_ReturnType gpio_pin_direction_initialize(pin_config
      +                          _t *_pin_config);MCAL_Layer/GPIO/hal_gpio.c: 23: {;MCAL_Layer/GPIO/hal_gpio.c: 24:     S
      +                          td_ReturnType ret = (Std_ReturnType)0x01 ;
  2610   001026  0E01               	movlw	1
  2611   001028  6E35               	movwf	gpio_pin_direction_initialize@ret^0,c
  2612                           
  2613                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          (8 - 1))
  2614   00102A  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2615   00102C  B4D8               	btfsc	status,2,c
  2616   00102E  EF1B  F008         	goto	u1231
  2617   001032  EF1D  F008         	goto	u1230
  2618   001036                     u1231:
  2619   001036  EF2D  F008         	goto	l2318
  2620   00103A                     u1230:
  2621   00103A  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2622   00103C  6ED9               	movwf	fsr2l,c
  2623   00103E  6ADA               	clrf	fsr2h,c
  2624   001040  30DF               	rrcf	223,w,c
  2625   001042  32E8               	rrcf	wreg,f,c
  2626   001044  32E8               	rrcf	wreg,f,c
  2627   001046  0B07               	andlw	7
  2628   001048  6E30               	movwf	??_gpio_pin_direction_initialize^0,c
  2629   00104A  0E07               	movlw	7
  2630   00104C  6430               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  2631   00104E  EF2B  F008         	goto	u1241
  2632   001052  EF2D  F008         	goto	u1240
  2633   001056                     u1241:
  2634   001056  EF84  F008         	goto	l2326
  2635   00105A                     u1240:
  2636   00105A                     l2318:
  2637                           
  2638                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     {;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret = (St
      +                          d_ReturnType)0x00;
  2639   00105A  0E00               	movlw	0
  2640   00105C  6E35               	movwf	gpio_pin_direction_initialize@ret^0,c
  2641                           
  2642                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }
  2643   00105E  EFA4  F008         	goto	l2328
  2644   001062                     l2320:
  2645                           
  2646                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 (*tris_registers[_pin_config->port] &= 
      +                          ~(((uint8)1) << _pin_config->pin));
  2647   001062  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2648   001064  6ED9               	movwf	fsr2l,c
  2649   001066  6ADA               	clrf	fsr2h,c
  2650   001068  30DF               	rrcf	223,w,c
  2651   00106A  32E8               	rrcf	wreg,f,c
  2652   00106C  32E8               	rrcf	wreg,f,c
  2653   00106E  0B07               	andlw	7
  2654   001070  6E30               	movwf	??_gpio_pin_direction_initialize^0,c
  2655   001072  0E01               	movlw	1
  2656   001074  6E31               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  2657   001076  2A30               	incf	??_gpio_pin_direction_initialize^0,f,c
  2658   001078  EF40  F008         	goto	u1254
  2659   00107C                     u1255:
  2660   00107C  90D8               	bcf	status,0,c
  2661   00107E  3631               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  2662   001080                     u1254:
  2663   001080  2E30               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  2664   001082  EF3E  F008         	goto	u1255
  2665   001086  5031               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2666   001088  0AFF               	xorlw	255
  2667   00108A  6E32               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  2668   00108C  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2669   00108E  6ED9               	movwf	fsr2l,c
  2670   001090  6ADA               	clrf	fsr2h,c
  2671   001092  50DF               	movf	223,w,c
  2672   001094  0B07               	andlw	7
  2673   001096  0D02               	mullw	2
  2674   001098  50F3               	movf	243,w,c
  2675   00109A  0F15               	addlw	low _tris_registers
  2676   00109C  6ED9               	movwf	fsr2l,c
  2677   00109E  6ADA               	clrf	fsr2h,c
  2678   0010A0  CFDE F033          	movff	postinc2,??_gpio_pin_direction_initialize+3
  2679   0010A4  CFDD F034          	movff	postdec2,??_gpio_pin_direction_initialize+4
  2680   0010A8  C033  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  2681   0010AC  C034  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  2682   0010B0  5032               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  2683   0010B2  16DF               	andwf	indf2,f,c
  2684                           
  2685                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
  2686   0010B4  EFA4  F008         	goto	l2328
  2687   0010B8                     l2322:
  2688                           
  2689                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] |= 
      +                          (((uint8)1) << _pin_config->pin));
  2690   0010B8  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2691   0010BA  6ED9               	movwf	fsr2l,c
  2692   0010BC  6ADA               	clrf	fsr2h,c
  2693   0010BE  30DF               	rrcf	223,w,c
  2694   0010C0  32E8               	rrcf	wreg,f,c
  2695   0010C2  32E8               	rrcf	wreg,f,c
  2696   0010C4  0B07               	andlw	7
  2697   0010C6  6E30               	movwf	??_gpio_pin_direction_initialize^0,c
  2698   0010C8  0E01               	movlw	1
  2699   0010CA  6E31               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  2700   0010CC  2A30               	incf	??_gpio_pin_direction_initialize^0,f,c
  2701   0010CE  EF6B  F008         	goto	u1264
  2702   0010D2                     u1265:
  2703   0010D2  90D8               	bcf	status,0,c
  2704   0010D4  3631               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  2705   0010D6                     u1264:
  2706   0010D6  2E30               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  2707   0010D8  EF69  F008         	goto	u1265
  2708   0010DC  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2709   0010DE  6ED9               	movwf	fsr2l,c
  2710   0010E0  6ADA               	clrf	fsr2h,c
  2711   0010E2  50DF               	movf	223,w,c
  2712   0010E4  0B07               	andlw	7
  2713   0010E6  0D02               	mullw	2
  2714   0010E8  50F3               	movf	243,w,c
  2715   0010EA  0F15               	addlw	low _tris_registers
  2716   0010EC  6ED9               	movwf	fsr2l,c
  2717   0010EE  6ADA               	clrf	fsr2h,c
  2718   0010F0  CFDE F032          	movff	postinc2,??_gpio_pin_direction_initialize+2
  2719   0010F4  CFDD F033          	movff	postdec2,??_gpio_pin_direction_initialize+3
  2720   0010F8  C032  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  2721   0010FC  C033  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  2722   001100  5031               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2723   001102  12DF               	iorwf	indf2,f,c
  2724                           
  2725                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 break;
  2726   001104  EFA4  F008         	goto	l2328
  2727   001108                     l2326:
  2728   001108  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2729   00110A  6ED9               	movwf	fsr2l,c
  2730   00110C  6ADA               	clrf	fsr2h,c
  2731   00110E  BCDF               	btfsc	indf2,6,c
  2732   001110  EF8C  F008         	goto	u1271
  2733   001114  EF8F  F008         	goto	u1270
  2734   001118                     u1271:
  2735   001118  0E01               	movlw	1
  2736   00111A  EF90  F008         	goto	u1280
  2737   00111E                     u1270:
  2738   00111E  0E00               	movlw	0
  2739   001120                     u1280:
  2740   001120  6E30               	movwf	??_gpio_pin_direction_initialize^0,c
  2741   001122  6A31               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  2742                           
  2743                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2744                           ; Switch size 1, requested type "simple"
  2745                           ; Number of cases is 1, Range of values is 0 to 0
  2746                           ; switch strategies available:
  2747                           ; Name         Instructions Cycles
  2748                           ; simple_byte            4     3 (average)
  2749                           ;	Chosen strategy is simple_byte
  2750   001124  5031               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2751   001126  0A00               	xorlw	0	; case 0
  2752   001128  B4D8               	btfsc	status,2,c
  2753   00112A  EF99  F008         	goto	l3018
  2754   00112E  EF2D  F008         	goto	l2318
  2755   001132                     l3018:
  2756                           
  2757                           ; Switch size 1, requested type "simple"
  2758                           ; Number of cases is 2, Range of values is 0 to 1
  2759                           ; switch strategies available:
  2760                           ; Name         Instructions Cycles
  2761                           ; simple_byte            7     4 (average)
  2762                           ;	Chosen strategy is simple_byte
  2763   001132  5030               	movf	??_gpio_pin_direction_initialize^0,w,c
  2764   001134  0A00               	xorlw	0	; case 0
  2765   001136  B4D8               	btfsc	status,2,c
  2766   001138  EF31  F008         	goto	l2320
  2767   00113C  0A01               	xorlw	1	; case 1
  2768   00113E  B4D8               	btfsc	status,2,c
  2769   001140  EF5C  F008         	goto	l2322
  2770   001144  EF2D  F008         	goto	l2318
  2771   001148                     l2328:
  2772                           
  2773                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:     return ret;
  2774   001148  5035               	movf	gpio_pin_direction_initialize@ret^0,w,c
  2775   00114A  0012               	return		;funcret
  2776   00114C                     __end_of_gpio_pin_direction_initialize:
  2777                           	callstack 0
  2778                           
  2779                           	psect	rparam
  2780   000000                     
  2781                           	psect	config
  2782                           
  2783                           ; Padding undefined space
  2784   300000                     	org	3145728
  2785   300000  FF                 	db	255
  2786                           
  2787                           ;Config register CONFIG1H @ 0x300001
  2788                           ;	Oscillator Selection bits
  2789                           ;	OSC = HS, HS oscillator
  2790                           ;	Fail-Safe Clock Monitor Enable bit
  2791                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2792                           ;	Internal/External Oscillator Switchover bit
  2793                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2794   300001                     	org	3145729
  2795   300001  02                 	db	2
  2796                           
  2797                           ;Config register CONFIG2L @ 0x300002
  2798                           ;	Power-up Timer Enable bit
  2799                           ;	PWRT = OFF, PWRT disabled
  2800                           ;	Brown-out Reset Enable bits
  2801                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2802                           ;	Brown Out Reset Voltage bits
  2803                           ;	BORV = 1, 
  2804   300002                     	org	3145730
  2805   300002  09                 	db	9
  2806                           
  2807                           ;Config register CONFIG2H @ 0x300003
  2808                           ;	Watchdog Timer Enable bit
  2809                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2810                           ;	Watchdog Timer Postscale Select bits
  2811                           ;	WDTPS = 32768, 1:32768
  2812   300003                     	org	3145731
  2813   300003  1E                 	db	30
  2814                           
  2815                           ; Padding undefined space
  2816   300004                     	org	3145732
  2817   300004  FF                 	db	255
  2818                           
  2819                           ;Config register CONFIG3H @ 0x300005
  2820                           ;	CCP2 MUX bit
  2821                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2822                           ;	PORTB A/D Enable bit
  2823                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2824                           ;	Low-Power Timer1 Oscillator Enable bit
  2825                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2826                           ;	MCLR Pin Enable bit
  2827                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2828   300005                     	org	3145733
  2829   300005  81                 	db	129
  2830                           
  2831                           ;Config register CONFIG4L @ 0x300006
  2832                           ;	Stack Full/Underflow Reset Enable bit
  2833                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2834                           ;	Single-Supply ICSP Enable bit
  2835                           ;	LVP = OFF, Single-Supply ICSP disabled
  2836                           ;	Extended Instruction Set Enable bit
  2837                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2838                           ;	Background Debugger Enable bit
  2839                           ;	DEBUG = 0x1, unprogrammed default
  2840   300006                     	org	3145734
  2841   300006  81                 	db	129
  2842                           
  2843                           ; Padding undefined space
  2844   300007                     	org	3145735
  2845   300007  FF                 	db	255
  2846                           
  2847                           ;Config register CONFIG5L @ 0x300008
  2848                           ;	Code Protection bit
  2849                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2850                           ;	Code Protection bit
  2851                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2852                           ;	Code Protection bit
  2853                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2854                           ;	Code Protection bit
  2855                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2856   300008                     	org	3145736
  2857   300008  0F                 	db	15
  2858                           
  2859                           ;Config register CONFIG5H @ 0x300009
  2860                           ;	Boot Block Code Protection bit
  2861                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2862                           ;	Data EEPROM Code Protection bit
  2863                           ;	CPD = OFF, Data EEPROM not code-protected
  2864   300009                     	org	3145737
  2865   300009  C0                 	db	192
  2866                           
  2867                           ;Config register CONFIG6L @ 0x30000A
  2868                           ;	Write Protection bit
  2869                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2870                           ;	Write Protection bit
  2871                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2872                           ;	Write Protection bit
  2873                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2874                           ;	Write Protection bit
  2875                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2876   30000A                     	org	3145738
  2877   30000A  0F                 	db	15
  2878                           
  2879                           ;Config register CONFIG6H @ 0x30000B
  2880                           ;	Configuration Register Write Protection bit
  2881                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2882                           ;	Boot Block Write Protection bit
  2883                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2884                           ;	Data EEPROM Write Protection bit
  2885                           ;	WRTD = OFF, Data EEPROM not write-protected
  2886   30000B                     	org	3145739
  2887   30000B  E0                 	db	224
  2888                           
  2889                           ;Config register CONFIG7L @ 0x30000C
  2890                           ;	Table Read Protection bit
  2891                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2892                           ;	Table Read Protection bit
  2893                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2894                           ;	Table Read Protection bit
  2895                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2896                           ;	Table Read Protection bit
  2897                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2898   30000C                     	org	3145740
  2899   30000C  0F                 	db	15
  2900                           
  2901                           ;Config register CONFIG7H @ 0x30000D
  2902                           ;	Boot Block Table Read Protection bit
  2903                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2904   30000D                     	org	3145741
  2905   30000D  40                 	db	64
  2906                           tosu	equ	0xFFF
  2907                           tosh	equ	0xFFE
  2908                           tosl	equ	0xFFD
  2909                           stkptr	equ	0xFFC
  2910                           pclatu	equ	0xFFB
  2911                           pclath	equ	0xFFA
  2912                           pcl	equ	0xFF9
  2913                           tblptru	equ	0xFF8
  2914                           tblptrh	equ	0xFF7
  2915                           tblptrl	equ	0xFF6
  2916                           tablat	equ	0xFF5
  2917                           prodh	equ	0xFF4
  2918                           prodl	equ	0xFF3
  2919                           indf0	equ	0xFEF
  2920                           postinc0	equ	0xFEE
  2921                           postdec0	equ	0xFED
  2922                           preinc0	equ	0xFEC
  2923                           plusw0	equ	0xFEB
  2924                           fsr0h	equ	0xFEA
  2925                           fsr0l	equ	0xFE9
  2926                           wreg	equ	0xFE8
  2927                           indf1	equ	0xFE7
  2928                           postinc1	equ	0xFE6
  2929                           postdec1	equ	0xFE5
  2930                           preinc1	equ	0xFE4
  2931                           plusw1	equ	0xFE3
  2932                           fsr1h	equ	0xFE2
  2933                           fsr1l	equ	0xFE1
  2934                           bsr	equ	0xFE0
  2935                           indf2	equ	0xFDF
  2936                           postinc2	equ	0xFDE
  2937                           postdec2	equ	0xFDD
  2938                           preinc2	equ	0xFDC
  2939                           plusw2	equ	0xFDB
  2940                           fsr2h	equ	0xFDA
  2941                           fsr2l	equ	0xFD9
  2942                           status	equ	0xFD8

Data Sizes:
    Strings     12
    Constant    24
    Data        46
    BSS         7
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     39      93
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_initialize@_pin_config	PTR struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_1$lcd_en(COMRAM[1]), lcd_1$lcd_rs(COMRAM[1]), 
		 -> lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), lcd_2$lcd_en(COMRAM[1]), lcd_2$lcd_rs(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_1$lcd_en(COMRAM[1]), lcd_1$lcd_rs(COMRAM[1]), 
		 -> lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), lcd_2$lcd_en(COMRAM[1]), lcd_2$lcd_rs(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_1$lcd_en(COMRAM[1]), lcd_1$lcd_rs(COMRAM[1]), 
		 -> lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), lcd_2$lcd_en(COMRAM[1]), lcd_2$lcd_rs(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), 
		 -> relay_turn_on@pin_obj(COMRAM[1]), 

    Interrupt_INTx_Disable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Priority_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_custom_char@_chr	PTR const unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), 

    lcd_4bit_send_custom_char@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 9
		 -> STR_4(CODE[9]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S1512$buffer	PTR unsigned char  size(2) Largest target is 0

    S1512$source	PTR const unsigned char  size(2) Largest target is 0

    S830$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRhll[1]), TRISC(BITBIGSFRhll[1]), TRISD(BITBIGSFRhll[1]), 
		 -> TRISE(BITBIGSFRhll[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_4bit_send_custom_char
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _lcd_4bit_send_custom_char->_lcd_4bit_send_char_data_pos
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _ecu_layer_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  140944
                           _app_init
          _lcd_4bit_send_custom_char
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             5     1      4   24411
                                             22 COMRAM     5     1      4
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  6     3      3   13064
                                             16 COMRAM     6     3      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data                              6     4      2   10862
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_custom_char                           14     7      7   71722
                                             25 COMRAM    14     7      7
            _lcd_4bit_send_char_data
        _lcd_4bit_send_char_data_pos
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data_pos                          5     1      4   36096
                                             20 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_set_cursor                                  6     3      3   18918
                                             14 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              3     1      2   16716
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0   44811
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   44811
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  4     3      1   19477
                                             16 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   12382
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          2     1      1    5135
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  4     3      1   25331
                                             14 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_command                                3     1      2   18236
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (3) _lcd_send_4bits                                       3     1      2    5725
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_enable_signal                          2     1      1    5287
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  3     2      1    6628
                                              8 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4891
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     6      1    1015
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic
   _lcd_4bit_send_custom_char
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_send_char_data_pos
       _lcd_4bit_send_char_data
       _lcd_4bit_set_cursor
         _lcd_4bit_send_command
     _lcd_4bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bit_send_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     27      5D       1       73.2%
BITBIGSFRhll        59      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlh          4      0       0      39        0.0%
BITBIGSFRll          4      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5D      26        0.0%
DATA                 0      0      5D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Feb 11 00:33:29 2024

                         ?_lcd_send_4bits 0037                                        l71 1412  
                                      l81 17F4                                        l76 1850  
                                      l86 1924                                       l130 1648  
                                     l123 16BE                                       l116 1336  
                                     l109 15D2                                       l151 1798  
                                     l402 125A                                       l163 172C  
                                     l183 1960                                       l335 1A0E  
                                     l416 18A4                                       l168 199C  
                                     l193 14AA                                       l178 1542  
                                     l383 114A                                       l479 1A14  
                                     _ret 005D       __end_of_lcd_4bit_send_enable_signal 199E  
             _lcd_4bit_send_enable_signal 1962                       led_initialize@F3058 005C  
               ?_lcd_8bit_send_string_pos 0045                     relay_initialize@F3052 0058  
                                     wreg 0FE8               __end_of_lcd_8bit_set_cursor 14AC  
             lcd_send_4bits@_data_command 0038                                      l2300 11DE  
                                    l3012 1482                                      l3014 151A  
                                    l2320 1062                                      l3016 1242  
                                    l2304 122E                                      l3018 1132  
                                    l2322 10B8                                      l2314 1026  
                                    l2306 1258                                      l2410 16B2  
                                    l2316 103A                                      l2340 16D8  
                                    l2420 1350                                      l2404 1676  
                                    l2412 16BC                                      l2326 1108  
                                    l2318 105A                                      l2350 197A  
                                    l2342 172A                                      l2430 1374  
                                    l2422 1364                                      l2406 16A0  
                                    l2510 12AA                                      l2328 1148  
                                    l2352 1986                                      l2336 16C0  
                                    l2440 13A8                                      l2432 1376  
                                    l2416 1338                                      l2360 1936  
                                    l2408 16A2                                      l2520 12EA  
                                    l2512 12BA                                      l2504 128C  
                                    l2600 1558                                      l2370 1852  
                                    l2354 199A                                      l2346 1962  
                                    l2338 16D0                                      l2450 13EA  
                                    l2442 13BA                                      l2434 1386  
                                    l2418 134C                                      l2362 193E  
                                    l2530 1326                                      l2522 12F6  
                                    l2514 12C6                                      l2506 1298  
                                    l2610 1576                                      l2602 1560  
                                    l2292 114C                                      l2372 1862  
                                    l2348 1972                                      l2452 13F6  
                                    l2444 13C6                                      l2436 1396  
                                    l2428 1368                                      l2364 194A  
                                    l2532 1334                                      l2524 1302  
                                    l2516 12CC                                      l2508 129A  
                                    l2460 179A                                      l2540 1902  
                                    l2612 15A8                                      l2604 1572  
                                    l2294 1160                                      l2374 1882  
                                    l2382 17F6                                      l2454 1402  
                                    l2446 13D2                                      l2438 13A2  
                                    l2366 195E                                      l2358 1926  
                                    l2526 130E                                      l2518 12DE  
                                    l2462 17AA                                      l2470 14AC  
                                    l2542 1922                                      l2614 15AA  
                                    l2550 15F0                                      l2296 1180  
                                    l2376 188A                                      l2384 1806  
                                    l2456 1410                                      l2448 13DE  
                                    l2392 164A                                      l2528 131A  
                                    l2464 17B2                                      l2480 14F2  
                                    l2472 14B0                                      l2536 18EA  
                                    l2616 15BA                                      l2560 162A  
                                    l2552 15FC                                      l2640 175C  
                                    l2298 1188                                      l2378 18A2  
                                    l2386 180E                                      l2394 165E  
                                    l2650 1A10                                      l2466 17F2  
                                    l2474 14B6                                      l2482 1506  
                                    l2538 18FA                                      l2618 15D0  
                                    l2562 162C                                      l2546 15D4  
                                    l2570 1414                                      l2642 1776  
                                    l2634 172E                                      l2388 184E  
                                    l2396 1666                                      l2492 125C  
                                    l2476 14CA                                      l2484 1540  
                                    l2564 163C                                      l2548 15E8  
                                    l2580 145A                                      l2572 1418  
                                    l2644 1778                                      l2636 173E  
                                    l2398 1672                                      l2494 1270  
                                    l2478 14DE                                      l2558 1600  
                                    l2566 1646                                      l2574 141E  
                                    l2582 146E                                      l2646 1796  
                                    l2638 1746                                      l2496 1274  
                                    l2592 19FE                                      l2576 1432  
                                    l2584 14A8                                      l2498 1288  
                                    l2594 19FE                                      l2578 1446  
                                    l2596 1A06                                      l2598 1544  
                                    l2980 18A6                                      l2982 18AA  
                                    l2984 18C0                                      STR_1 1022  
                                    STR_4 1019                                      u1200 1180  
                                    u1201 117C                                      u1300 1972  
                                    u1301 196E                                      u1230 103A  
                                    u1214 11A6                                      u1310 1936  
                                    u1231 1036                                      u1215 11A2  
                                    u1311 1932                                      u1240 105A  
                                    u1224 11FC                                      u1320 1862  
                                    u1400 17AA                                      u1241 1056  
                                    u1225 11F8                                      u1321 185E  
                                    u1401 17A6                                      u1330 1882  
                                    u1410 1270                                      u1331 187E  
                                    u1411 126C                                      u1340 1806  
                                    u1420 12AA                                      u1500 173E  
                                    u1341 1802                                      u1421 12A6  
                                    u1501 173A                                      _LATA 0F89  
                                    u1270 111E                                      u1254 1080  
                                    u1190 1160                                      u1350 165E  
                                    u1430 18FA                                      u1510 1796  
                                    _LATB 0F8A                                      u1271 1118  
                                    u1255 107C                                      u1191 115C  
                                    u1351 165A                                      u1431 18F6  
                                    u1511 1792                                      _LATC 0F8B  
                                    u1280 1120                                      u1264 10D6  
                                    u1440 15E8                                      _LATD 0F8C  
                                    u1265 10D2                                      u1441 15E4  
                                    _LATE 0F8D                                      u1290 16D0  
                                    u1370 16B2                                      u1291 16CC  
                                    u1371 16AE                                      u1380 134C  
                                    u1364 1690                                      u1460 163C  
                                    u1381 1348                                      u1365 168C  
                                    u1461 1638                                      u1390 1386  
                                    u1470 1558                                      u1454 161A  
                                    u1391 1382                                      u1471 1554  
                                    u1455 1616                                      u1480 15BA  
                                    u1481 15B6                                      u1907 12B0  
                                    u1917 12DA                                      u1927 138C  
                                    u1937 13B6             ??_lcd_4bit_send_enable_signal 0038  
                                    _main 18A6                                      fsr2h 0FDA  
                                    indf2 0FDF                                      fsr1l 0FE1  
                                    fsr2l 0FD9         lcd_4bit_send_char_data_pos@column 0045  
                                    prodl 0FF3                                      start 0000  
           __end_of_lcd_8bit_send_command 16C0                              ___param_bank 0000  
                   _lcd_4bit_send_command 17F6                      _gpio_pin_write_logic 114C  
                                   ?_main 002F                       relay_turn_off@F3062 0056  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
               lcd_4bit_set_cursor@column 003F                                     _lcd_1 0029  
                                   _lcd_2 001F                  ?_lcd_8bit_send_char_data 0039  
                                   tablat 0FF5                                     status 0FD8  
          ?_gpio_pin_direction_initialize 002F                           __initialization 199E  
                            __end_of_main 18EA                     ?_gpio_pin_write_logic 002F  
                  lcd_8bit_set_cursor@lcd 003F                    lcd_8bit_set_cursor@ret 0044  
                  lcd_8bit_set_cursor@row 0040                             _lat_registers 000B  
       __end_of_lcd_4bit_send_custom_char 15D4                                    ??_main 0056  
                           __activetblptr 0003                          led_turn_on@F3063 005B  
                        __end_of_app_init 1A16                    ?_lcd_4bit_send_command 003A  
                                  clear_0 19C4                                    isa$std 0001  
             lcd_8bit_send_string_pos@lcd 0045               lcd_8bit_send_string_pos@ret 0049  
             lcd_8bit_send_string_pos@row 0046               lcd_8bit_send_string_pos@str 0048  
                            __pdataCOMRAM 0001                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                                __accesstop 0080  
                 __end_of__initialization 19CA                             ___rparam_used 0001  
                        ??_lcd_send_4bits 0039                   _lcd_4bit_send_char_data 179A  
                  ??_gpio_pin_write_logic 0031                            __pcstackCOMRAM 002F  
                lcd_4bit_send_command@lcd 003A                  lcd_4bit_send_command@ret 003C  
           lcd_4bit_send_custom_char@_chr 0049  gpio_pin_direction_initialize@_pin_config 002F  
            ?_lcd_4bit_send_char_data_pos 0043                                __pnvCOMRAM 005D  
                  lcd_8bit_initialize@lcd 003F                    lcd_8bit_initialize@ret 0042  
         lcd_4bit_send_custom_char@column 004D                         led_turn_off@F3068 005A  
            lcd_4bit_send_custom_char@lcd 0048              lcd_4bit_send_custom_char@ret 0054  
            lcd_4bit_send_custom_char@row 004C                      led_turn_toggle@F3073 0059  
     __end_of_lcd_8bit_send_enable_signal 1962               _lcd_8bit_send_enable_signal 1926  
                               ?_app_init 002F                                _btn_values 1001  
          lcd_8bit_send_enable_signal@lcd 0037            lcd_8bit_send_enable_signal@ret 0038  
                          _tris_registers 0015                 ??_lcd_4bit_send_char_data 003C  
           ??_lcd_8bit_send_enable_signal 0038    lcd_8bit_initialize@l_data_pins_counter 0041  
  lcd_4bit_initialize@l_data_pins_counter 003F                                   __Hparam 0000  
                                 __Lparam 0000                       _gpio_pin_initialize 1852  
                   _lcd_8bit_send_command 164A                              __psmallconst 1000  
                                 __pcinit 199E                                   __ramtop 1000  
                              _customChar 1011                  _lcd_8bit_send_string_pos 172E  
                                 __ptext0 18A6                                   __ptext1 172E  
                                 __ptext2 1414                                   __ptext3 15D4  
                                 __ptext4 1544                                   __ptext5 18EA  
                                 __ptext6 14AC                                   __ptext7 179A  
                                 __ptext8 1A10                                   __ptext9 19FE  
         ??_gpio_pin_direction_initialize 0030                      ?_gpio_pin_initialize 0037  
                              ??_app_init 0043                      end_of_initialization 19CA  
                       lcd_send_4bits@lcd 0037                         lcd_send_4bits@ret 0039  
                 ??_lcd_4bit_send_command 003C                                   postdec1 0FE5  
                                 postdec2 0FDD                                   postinc0 0FEE  
                                 postinc2 0FDE                       _lcd_4bit_initialize 1338  
         __end_of_lcd_4bit_send_char_data 17F6                ?_lcd_4bit_send_custom_char 0048  
              lcd_4bit_send_char_data@lcd 003A                lcd_4bit_send_char_data@ret 003C  
                   ??_gpio_pin_initialize 0038           lcd_4bit_send_char_data_pos@data 0046  
                    ?_lcd_4bit_initialize 003D                       _lcd_4bit_set_cursor 14AC  
                      relay_turn_on@F3057 0057                    ?_lcd_8bit_send_command 0039  
          lcd_8bit_send_string_pos@column 0047                             __pidataCOMRAM 19D0  
                     start_initialization 199E              ?_lcd_4bit_send_enable_signal 0037  
                    ?_lcd_4bit_set_cursor 003D                       _lcd_8bit_initialize 125C  
   __end_of_gpio_pin_direction_initialize 114C             _gpio_pin_direction_initialize 1026  
                   ??_lcd_4bit_initialize 003E                      ?_lcd_8bit_initialize 003F  
                 _lcd_8bit_send_char_data 15D4              __end_of_ecu_layer_initialize 1A10  
                     _lcd_8bit_set_cursor 1414              lcd_4bit_send_command@command 003B  
                lcd_8bit_send_command@lcd 0039                  lcd_8bit_send_command@cnt 003E  
                lcd_8bit_send_command@ret 003D                               __pbssCOMRAM 0056  
                   ??_lcd_4bit_set_cursor 0040                      ?_lcd_8bit_set_cursor 003F  
                   ??_lcd_8bit_initialize 0040                ??_lcd_8bit_send_string_pos 0049  
             lcd_8bit_send_char_data@data 003A           gpio_pin_write_logic@_pin_config 002F  
        lcd_4bit_send_custom_char@mem_pos 004E                 gpio_pin_write_logic@logic 0030  
                             __smallconst 1000                     ??_lcd_8bit_set_cursor 0042  
               ??_lcd_8bit_send_char_data 003B             __end_of_lcd_4bit_send_command 1852  
        gpio_pin_direction_initialize@ret 0035            lcd_4bit_send_char_data_pos@lcd 0043  
          lcd_4bit_send_char_data_pos@ret 0047            lcd_4bit_send_char_data_pos@row 0044  
             ??_lcd_4bit_send_custom_char 004F                    gpio_pin_initialize@ret 0039  
               lcd_8bit_set_cursor@column 0041       __end_of_lcd_4bit_send_char_data_pos 1926  
             _lcd_4bit_send_char_data_pos 18EA                   gpio_pin_write_logic@ret 0036  
                             _INTCON2bits 0FF1                               _INTCON3bits 0FF0  
                ?_lcd_4bit_send_char_data 003A                                 copy_data0 19B2  
                    _ecu_layer_initialize 19FE             ??_lcd_4bit_send_char_data_pos 0047  
                 ??_lcd_8bit_send_command 003B      lcd_4bit_send_custom_char@lcd_counter 0055  
                                __Hrparam 0000                                  __Lrparam 0000  
                  lcd_4bit_set_cursor@lcd 003D                    lcd_4bit_set_cursor@ret 0042  
                  lcd_4bit_set_cursor@row 003E           __end_of_lcd_8bit_send_char_data 164A  
             __end_of_gpio_pin_initialize 18A6                        __end_of_btn_values 1011  
          gpio_pin_initialize@_pin_config 0037                lcd_8bit_send_char_data@lcd 0039  
              lcd_8bit_send_char_data@cnt 003E                lcd_8bit_send_char_data@ret 003D  
                                __ptext10 125C                                  __ptext11 164A  
                                __ptext12 1926                                  __ptext13 1338  
                                __ptext14 17F6                                  __ptext15 16C0  
                                __ptext16 1962                                  __ptext17 1852  
                                __ptext18 114C                                  __ptext19 1026  
                                _app_init 1A10                     ?_ecu_layer_initialize 002F  
               _lcd_4bit_send_custom_char 1544                        __end_of_customChar 1019  
        __end_of_lcd_8bit_send_string_pos 179A                                  isa$xinst 0000  
                          _lcd_send_4bits 16C0                                _INTCONbits 0FF2  
             __end_of_lcd_4bit_initialize 1414              __end_of_gpio_pin_write_logic 125C  
            ?_lcd_8bit_send_enable_signal 0037            lcd_4bit_send_enable_signal@lcd 0037  
          lcd_4bit_send_enable_signal@ret 0038                    __end_of_lcd_send_4bits 172E  
             __end_of_lcd_4bit_set_cursor 1544                            _port_registers 0001  
                  ??_ecu_layer_initialize 0043               __end_of_lcd_8bit_initialize 1338  
            lcd_8bit_send_command@command 003A               lcd_4bit_send_char_data@data 003B  
                  lcd_4bit_initialize@lcd 003D                    lcd_4bit_initialize@ret 0040  
