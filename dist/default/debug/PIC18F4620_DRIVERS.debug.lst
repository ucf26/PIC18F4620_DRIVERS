

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Dec 11 11:21:56 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 23/03/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4620 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   0019DA                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _port_registers
    75   0019DA  80                 	db	128
    76   0019DB  0F                 	db	15
    77   0019DC  81                 	db	129
    78   0019DD  0F                 	db	15
    79   0019DE  82                 	db	130
    80   0019DF  0F                 	db	15
    81   0019E0  83                 	db	131
    82   0019E1  0F                 	db	15
    83   0019E2  84                 	db	132
    84   0019E3  0F                 	db	15
    85                           
    86                           ;initializer for _lat_registers
    87   0019E4  89                 	db	137
    88   0019E5  0F                 	db	15
    89   0019E6  8A                 	db	138
    90   0019E7  0F                 	db	15
    91   0019E8  8B                 	db	139
    92   0019E9  0F                 	db	15
    93   0019EA  8C                 	db	140
    94   0019EB  0F                 	db	15
    95   0019EC  8D                 	db	141
    96   0019ED  0F                 	db	15
    97                           
    98                           ;initializer for _tris_registers
    99   0019EE  92                 	db	146
   100   0019EF  0F                 	db	15
   101   0019F0  93                 	db	147
   102   0019F1  0F                 	db	15
   103   0019F2  94                 	db	148
   104   0019F3  0F                 	db	15
   105   0019F4  95                 	db	149
   106   0019F5  0F                 	db	15
   107   0019F6  96                 	db	150
   108   0019F7  0F                 	db	15
   109                           
   110                           ;initializer for _lcd_2
   111   0019F8  32                 	db	50
   112   0019F9  3A                 	db	58
   113   0019FA  03                 	db	3
   114   0019FB  0B                 	db	11
   115   0019FC  13                 	db	19
   116   0019FD  1B                 	db	27
   117   0019FE  23                 	db	35
   118   0019FF  2B                 	db	43
   119   001A00  33                 	db	51
   120   001A01  3B                 	db	59
   121                           
   122                           ;initializer for _lcd_1
   123   001A02  02                 	db	2
   124   001A03  0A                 	db	10
   125   001A04  12                 	db	18
   126   001A05  1A                 	db	26
   127   001A06  22                 	db	34
   128   001A07  2A                 	db	42
   129                           
   130                           	psect	smallconst
   131   001000                     __psmallconst:
   132                           	callstack 0
   133   001000  00                 	db	0
   134   001001                     _btn_values:
   135                           	callstack 0
   136   001001  37                 	db	55
   137   001002  38                 	db	56
   138   001003  39                 	db	57
   139   001004  2F                 	db	47
   140   001005  34                 	db	52
   141   001006  35                 	db	53
   142   001007  36                 	db	54
   143   001008  2A                 	db	42
   144   001009  31                 	db	49
   145   00100A  32                 	db	50
   146   00100B  33                 	db	51
   147   00100C  2D                 	db	45
   148   00100D  23                 	db	35
   149   00100E  38                 	db	56
   150   00100F  3D                 	db	61
   151   001010  2B                 	db	43
   152   001011                     __end_of_btn_values:
   153                           	callstack 0
   154   001011                     STR_1:
   155   001011  66                 	db	102	;'f'
   156   001012  75                 	db	117	;'u'
   157   001013  63                 	db	99	;'c'
   158   001014  6B                 	db	107	;'k'
   159   001015  00                 	db	0
   160   001016                     STR_3:
   161   001016  61                 	db	97	;'a'
   162   001017  37                 	db	55	;'7'
   163   001018  61                 	db	97	;'a'
   164   001019  00                 	db	0
   165   00101A  00                 	db	0	; dummy byte at the end
   166   000000                     
   167                           	psect	nvCOMRAM
   168   000051                     __pnvCOMRAM:
   169                           	callstack 0
   170   000051                     _ret:
   171                           	callstack 0
   172   000051                     	ds	1
   173   000000                     _PORTE	set	3972
   174   000000                     _PORTD	set	3971
   175   000000                     _PORTC	set	3970
   176   000000                     _PORTB	set	3969
   177   000000                     _PORTA	set	3968
   178   000000                     _LATA	set	3977
   179   000000                     _TRISA	set	3986
   180   000000                     _TRISE	set	3990
   181   000000                     _TRISD	set	3989
   182   000000                     _TRISC	set	3988
   183   000000                     _TRISB	set	3987
   184   000000                     _LATE	set	3981
   185   000000                     _LATD	set	3980
   186   000000                     _LATC	set	3979
   187   000000                     _LATB	set	3978
   188                           
   189                           ; #config settings
   190                           
   191                           	psect	cinit
   192   0019A4                     __pcinit:
   193                           	callstack 0
   194   0019A4                     start_initialization:
   195                           	callstack 0
   196   0019A4                     __initialization:
   197                           	callstack 0
   198                           
   199                           ; Initialize objects allocated to COMRAM (46 bytes)
   200                           ; load TBLPTR registers with __pidataCOMRAM
   201   0019A4  0EDA               	movlw	low __pidataCOMRAM
   202   0019A6  6EF6               	movwf	tblptrl,c
   203   0019A8  0E19               	movlw	high __pidataCOMRAM
   204   0019AA  6EF7               	movwf	tblptrh,c
   205   0019AC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   206   0019AE  6EF8               	movwf	tblptru,c
   207   0019B0  EE00  F001         	lfsr	0,__pdataCOMRAM
   208   0019B4  EE10 F02E          	lfsr	1,46
   209   0019B8                     copy_data0:
   210   0019B8  0009               	tblrd		*+
   211   0019BA  CFF5 FFEE          	movff	tablat,postinc0
   212   0019BE  50E5               	movf	postdec1,w,c
   213   0019C0  50E1               	movf	fsr1l,w,c
   214   0019C2  E1FA               	bnz	copy_data0
   215                           
   216                           ; Clear objects allocated to COMRAM (7 bytes)
   217   0019C4  EE00  F04A         	lfsr	0,__pbssCOMRAM
   218   0019C8  0E07               	movlw	7
   219   0019CA                     clear_0:
   220   0019CA  6AEE               	clrf	postinc0,c
   221   0019CC  06E8               	decf	wreg,f,c
   222   0019CE  E1FD               	bnz	clear_0
   223   0019D0                     end_of_initialization:
   224                           	callstack 0
   225   0019D0                     __end_of__initialization:
   226                           	callstack 0
   227   0019D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   228   0019D2  6EF8               	movwf	tblptru,c
   229   0019D4  0100               	movlb	0
   230   0019D6  EF05  F00A         	goto	_main	;jump to C main() function
   231                           
   232                           	psect	bssCOMRAM
   233   00004A                     __pbssCOMRAM:
   234                           	callstack 0
   235   00004A                     relay_turn_off@F2895:
   236                           	callstack 0
   237   00004A                     	ds	1
   238   00004B                     relay_turn_on@F2890:
   239                           	callstack 0
   240   00004B                     	ds	1
   241   00004C                     relay_initialize@F2885:
   242                           	callstack 0
   243   00004C                     	ds	1
   244   00004D                     led_turn_toggle@F2906:
   245                           	callstack 0
   246   00004D                     	ds	1
   247   00004E                     led_turn_off@F2901:
   248                           	callstack 0
   249   00004E                     	ds	1
   250   00004F                     led_turn_on@F2896:
   251                           	callstack 0
   252   00004F                     	ds	1
   253   000050                     led_initialize@F2891:
   254                           	callstack 0
   255   000050                     	ds	1
   256                           
   257                           	psect	dataCOMRAM
   258   000001                     __pdataCOMRAM:
   259                           	callstack 0
   260   000001                     _port_registers:
   261                           	callstack 0
   262   000001                     	ds	10
   263   00000B                     _lat_registers:
   264                           	callstack 0
   265   00000B                     	ds	10
   266   000015                     _tris_registers:
   267                           	callstack 0
   268   000015                     	ds	10
   269   00001F                     _lcd_2:
   270                           	callstack 0
   271   00001F                     	ds	10
   272   000029                     _lcd_1:
   273                           	callstack 0
   274   000029                     	ds	6
   275                           
   276                           	psect	cstackCOMRAM
   277   00002F                     __pcstackCOMRAM:
   278                           	callstack 0
   279   00002F                     gpio_pin_direction_initialize@_pin_config:
   280                           	callstack 0
   281   00002F                     gpio_pin_write_logic@_pin_config:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0x0
   285   00002F                     	ds	1
   286   000030                     ??_gpio_pin_direction_initialize:
   287   000030                     gpio_pin_write_logic@logic:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x1
   291   000030                     	ds	1
   292   000031                     ??_gpio_pin_write_logic:
   293                           
   294                           ; 1 bytes @ 0x2
   295   000031                     	ds	4
   296   000035                     gpio_pin_direction_initialize@ret:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0x6
   300   000035                     	ds	1
   301   000036                     gpio_pin_write_logic@ret:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x7
   305   000036                     	ds	1
   306   000037                     gpio_pin_initialize@_pin_config:
   307                           	callstack 0
   308   000037                     lcd_send_4bits@lcd:
   309                           	callstack 0
   310   000037                     lcd_4bit_send_enable_signal@lcd:
   311                           	callstack 0
   312   000037                     lcd_8bit_send_enable_signal@lcd:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x8
   316   000037                     	ds	1
   317   000038                     ??_gpio_pin_initialize:
   318   000038                     lcd_send_4bits@_data_command:
   319                           	callstack 0
   320   000038                     lcd_4bit_send_enable_signal@ret:
   321                           	callstack 0
   322   000038                     lcd_8bit_send_enable_signal@ret:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x9
   326   000038                     	ds	1
   327   000039                     gpio_pin_initialize@ret:
   328                           	callstack 0
   329   000039                     lcd_8bit_send_command@lcd:
   330                           	callstack 0
   331   000039                     lcd_8bit_send_char_data@lcd:
   332                           	callstack 0
   333   000039                     lcd_send_4bits@ret:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0xA
   337   000039                     	ds	1
   338   00003A                     lcd_4bit_send_command@lcd:
   339                           	callstack 0
   340   00003A                     lcd_4bit_send_char_data@lcd:
   341                           	callstack 0
   342   00003A                     lcd_8bit_send_command@command:
   343                           	callstack 0
   344   00003A                     lcd_8bit_send_char_data@data:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0xB
   348   00003A                     	ds	1
   349   00003B                     ??_lcd_8bit_send_command:
   350   00003B                     ??_lcd_8bit_send_char_data:
   351   00003B                     lcd_4bit_send_command@command:
   352                           	callstack 0
   353   00003B                     lcd_4bit_send_char_data@data:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0xC
   357   00003B                     	ds	1
   358   00003C                     lcd_4bit_send_command@ret:
   359                           	callstack 0
   360   00003C                     lcd_4bit_send_char_data@ret:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0xD
   364   00003C                     	ds	1
   365   00003D                     lcd_4bit_initialize@lcd:
   366                           	callstack 0
   367   00003D                     lcd_8bit_send_command@ret:
   368                           	callstack 0
   369   00003D                     lcd_8bit_send_char_data@ret:
   370                           	callstack 0
   371   00003D                     lcd_4bit_set_cursor@lcd:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0xE
   375   00003D                     	ds	1
   376   00003E                     ??_lcd_4bit_initialize:
   377   00003E                     lcd_8bit_send_command@cnt:
   378                           	callstack 0
   379   00003E                     lcd_8bit_send_char_data@cnt:
   380                           	callstack 0
   381   00003E                     lcd_4bit_set_cursor@row:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0xF
   385   00003E                     	ds	1
   386   00003F                     lcd_4bit_initialize@l_data_pins_counter:
   387                           	callstack 0
   388   00003F                     lcd_8bit_initialize@lcd:
   389                           	callstack 0
   390   00003F                     lcd_4bit_set_cursor@column:
   391                           	callstack 0
   392   00003F                     lcd_8bit_set_cursor@lcd:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x10
   396   00003F                     	ds	1
   397   000040                     ??_lcd_8bit_initialize:
   398   000040                     ??_lcd_4bit_set_cursor:
   399   000040                     lcd_4bit_initialize@ret:
   400                           	callstack 0
   401   000040                     lcd_8bit_set_cursor@row:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0x11
   405   000040                     	ds	1
   406   000041                     lcd_8bit_initialize@l_data_pins_counter:
   407                           	callstack 0
   408   000041                     lcd_8bit_set_cursor@column:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x12
   412   000041                     	ds	1
   413   000042                     ??_lcd_8bit_set_cursor:
   414   000042                     lcd_8bit_initialize@ret:
   415                           	callstack 0
   416   000042                     lcd_4bit_set_cursor@ret:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x13
   420   000042                     	ds	1
   421   000043                     lcd_4bit_send_string_pos@lcd:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x14
   425   000043                     	ds	1
   426   000044                     lcd_4bit_send_string_pos@row:
   427                           	callstack 0
   428   000044                     lcd_8bit_set_cursor@ret:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x15
   432   000044                     	ds	1
   433   000045                     lcd_4bit_send_string_pos@column:
   434                           	callstack 0
   435   000045                     lcd_8bit_send_string_pos@lcd:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x16
   439   000045                     	ds	1
   440   000046                     lcd_4bit_send_string_pos@str:
   441                           	callstack 0
   442   000046                     lcd_8bit_send_string_pos@row:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x17
   446   000046                     	ds	1
   447   000047                     lcd_4bit_send_string_pos@ret:
   448                           	callstack 0
   449   000047                     lcd_8bit_send_string_pos@column:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x18
   453   000047                     	ds	1
   454   000048                     lcd_8bit_send_string_pos@str:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x19
   458   000048                     	ds	1
   459   000049                     lcd_8bit_send_string_pos@ret:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x1A
   463   000049                     	ds	1
   464   00004A                     
   465                           ; 1 bytes @ 0x1B
   466 ;;
   467 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   468 ;;
   469 ;; *************** function _main *****************
   470 ;; Defined at:
   471 ;;		line 13 in file "appplication.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  2  302[None  ] int 
   478 ;; Registers used:
   479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;Total ram usage:        0 bytes
   490 ;; Hardware stack levels required when called: 6
   491 ;; This function calls:
   492 ;;		_app_init
   493 ;;		_lcd_4bit_send_string_pos
   494 ;;		_lcd_8bit_send_string_pos
   495 ;; This function is called by:
   496 ;;		Startup code after reset
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           	psect	text0
   501   00140A                     __ptext0:
   502                           	callstack 0
   503   00140A                     _main:
   504                           	callstack 25
   505   00140A                     
   506                           ;appplication.c: 15:     app_init();
   507   00140A  EC0D  F00D         	call	_app_init	;wreg free
   508   00140E                     l2534:
   509                           
   510                           ;appplication.c: 18:     {;appplication.c: 20:         ret = lcd_8bit_send_string_pos(&l
      +                          cd_2, 1, 1, "fuck");
   511   00140E  0E1F               	movlw	low _lcd_2
   512   001410  6E45               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   513   001412  0E01               	movlw	1
   514   001414  6E46               	movwf	lcd_8bit_send_string_pos@row^0,c
   515   001416  0E01               	movlw	1
   516   001418  6E47               	movwf	lcd_8bit_send_string_pos@column^0,c
   517   00141A  0E11               	movlw	low STR_1
   518   00141C  6E48               	movwf	lcd_8bit_send_string_pos@str^0,c
   519   00141E  ECA8  F00B         	call	_lcd_8bit_send_string_pos	;wreg free
   520   001422  6E51               	movwf	_ret^0,c
   521   001424                     
   522                           ;appplication.c: 21:         ret = lcd_8bit_send_string_pos(&lcd_2, 2, 2, "fuck");
   523   001424  0E1F               	movlw	low _lcd_2
   524   001426  6E45               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   525   001428  0E02               	movlw	2
   526   00142A  6E46               	movwf	lcd_8bit_send_string_pos@row^0,c
   527   00142C  0E02               	movlw	2
   528   00142E  6E47               	movwf	lcd_8bit_send_string_pos@column^0,c
   529   001430  0E11               	movlw	low STR_1
   530   001432  6E48               	movwf	lcd_8bit_send_string_pos@str^0,c
   531   001434  ECA8  F00B         	call	_lcd_8bit_send_string_pos	;wreg free
   532   001438  6E51               	movwf	_ret^0,c
   533   00143A                     
   534                           ;appplication.c: 22:         ret = lcd_8bit_send_string_pos(&lcd_2, 3, 3, "a7a");
   535   00143A  0E1F               	movlw	low _lcd_2
   536   00143C  6E45               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   537   00143E  0E03               	movlw	3
   538   001440  6E46               	movwf	lcd_8bit_send_string_pos@row^0,c
   539   001442  0E03               	movlw	3
   540   001444  6E47               	movwf	lcd_8bit_send_string_pos@column^0,c
   541   001446  0E16               	movlw	low STR_3
   542   001448  6E48               	movwf	lcd_8bit_send_string_pos@str^0,c
   543   00144A  ECA8  F00B         	call	_lcd_8bit_send_string_pos	;wreg free
   544   00144E  6E51               	movwf	_ret^0,c
   545   001450                     
   546                           ;appplication.c: 23:         ret = lcd_8bit_send_string_pos(&lcd_2, 4, 4, "a7a");
   547   001450  0E1F               	movlw	low _lcd_2
   548   001452  6E45               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   549   001454  0E04               	movlw	4
   550   001456  6E46               	movwf	lcd_8bit_send_string_pos@row^0,c
   551   001458  0E04               	movlw	4
   552   00145A  6E47               	movwf	lcd_8bit_send_string_pos@column^0,c
   553   00145C  0E16               	movlw	low STR_3
   554   00145E  6E48               	movwf	lcd_8bit_send_string_pos@str^0,c
   555   001460  ECA8  F00B         	call	_lcd_8bit_send_string_pos	;wreg free
   556   001464  6E51               	movwf	_ret^0,c
   557   001466                     
   558                           ;appplication.c: 24:         ret = lcd_4bit_send_string_pos(&lcd_1, 1, 1, "fuck");
   559   001466  0E29               	movlw	low _lcd_1
   560   001468  6E43               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   561   00146A  0E01               	movlw	1
   562   00146C  6E44               	movwf	lcd_4bit_send_string_pos@row^0,c
   563   00146E  0E01               	movlw	1
   564   001470  6E45               	movwf	lcd_4bit_send_string_pos@column^0,c
   565   001472  0E11               	movlw	low STR_1
   566   001474  6E46               	movwf	lcd_4bit_send_string_pos@str^0,c
   567   001476  ECDC  F00B         	call	_lcd_4bit_send_string_pos	;wreg free
   568   00147A  6E51               	movwf	_ret^0,c
   569   00147C                     
   570                           ;appplication.c: 25:         ret = lcd_4bit_send_string_pos(&lcd_1, 2, 2, "fuck");
   571   00147C  0E29               	movlw	low _lcd_1
   572   00147E  6E43               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   573   001480  0E02               	movlw	2
   574   001482  6E44               	movwf	lcd_4bit_send_string_pos@row^0,c
   575   001484  0E02               	movlw	2
   576   001486  6E45               	movwf	lcd_4bit_send_string_pos@column^0,c
   577   001488  0E11               	movlw	low STR_1
   578   00148A  6E46               	movwf	lcd_4bit_send_string_pos@str^0,c
   579   00148C  ECDC  F00B         	call	_lcd_4bit_send_string_pos	;wreg free
   580   001490  6E51               	movwf	_ret^0,c
   581   001492                     
   582                           ;appplication.c: 26:         ret = lcd_4bit_send_string_pos(&lcd_1, 3, 3, "a7a");
   583   001492  0E29               	movlw	low _lcd_1
   584   001494  6E43               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   585   001496  0E03               	movlw	3
   586   001498  6E44               	movwf	lcd_4bit_send_string_pos@row^0,c
   587   00149A  0E03               	movlw	3
   588   00149C  6E45               	movwf	lcd_4bit_send_string_pos@column^0,c
   589   00149E  0E16               	movlw	low STR_3
   590   0014A0  6E46               	movwf	lcd_4bit_send_string_pos@str^0,c
   591   0014A2  ECDC  F00B         	call	_lcd_4bit_send_string_pos	;wreg free
   592   0014A6  6E51               	movwf	_ret^0,c
   593   0014A8                     
   594                           ;appplication.c: 27:         ret = lcd_4bit_send_string_pos(&lcd_1, 4, 4, "a7a");
   595   0014A8  0E29               	movlw	low _lcd_1
   596   0014AA  6E43               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   597   0014AC  0E04               	movlw	4
   598   0014AE  6E44               	movwf	lcd_4bit_send_string_pos@row^0,c
   599   0014B0  0E04               	movlw	4
   600   0014B2  6E45               	movwf	lcd_4bit_send_string_pos@column^0,c
   601   0014B4  0E16               	movlw	low STR_3
   602   0014B6  6E46               	movwf	lcd_4bit_send_string_pos@str^0,c
   603   0014B8  ECDC  F00B         	call	_lcd_4bit_send_string_pos	;wreg free
   604   0014BC  6E51               	movwf	_ret^0,c
   605   0014BE  EF07  F00A         	goto	l2534
   606   0014C2  EF00  F000         	goto	start
   607   0014C6                     __end_of_main:
   608                           	callstack 0
   609                           
   610 ;; *************** function _lcd_8bit_send_string_pos *****************
   611 ;; Defined at:
   612 ;;		line 215 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  lcd             1   22[COMRAM] PTR const struct .
   615 ;;		 -> lcd_2(10), 
   616 ;;  row             1   23[COMRAM] unsigned char 
   617 ;;  column          1   24[COMRAM] unsigned char 
   618 ;;  str             1   25[COMRAM] PTR unsigned char 
   619 ;;		 -> STR_4(4), STR_3(4), STR_2(5), STR_1(5), 
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  ret             1   26[COMRAM] unsigned char 
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      unsigned char 
   624 ;; Registers used:
   625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   631 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;Total ram usage:        5 bytes
   636 ;; Hardware stack levels used: 1
   637 ;; Hardware stack levels required when called: 4
   638 ;; This function calls:
   639 ;;		_lcd_8bit_send_char_data
   640 ;;		_lcd_8bit_set_cursor
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text1
   647   001750                     __ptext1:
   648                           	callstack 0
   649   001750                     _lcd_8bit_send_string_pos:
   650                           	callstack 26
   651   001750                     
   652                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 217:     if(((void*)0) == lcd){
   653   001750  5045               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
   654   001752  A4D8               	btfss	status,2,c
   655   001754  EFAE  F00B         	goto	u1201
   656   001758  EFB0  F00B         	goto	u1200
   657   00175C                     u1201:
   658   00175C  EFB4  F00B         	goto	l2238
   659   001760                     u1200:
   660   001760                     
   661                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 218:         ret = (Std_ReturnType)0x00;
   662   001760  0E00               	movlw	0
   663   001762  6E49               	movwf	lcd_8bit_send_string_pos@ret^0,c
   664                           
   665                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 219:     }
   666   001764  EFDA  F00B         	goto	l2246
   667   001768                     l2238:
   668                           
   669                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 221:         ret = lcd_8bit_set_cursor(lcd, row, colum
      +                          n);
   670   001768  C045  F03F         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
   671   00176C  C046  F040         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
   672   001770  C047  F041         	movff	lcd_8bit_send_string_pos@column,lcd_8bit_set_cursor@column
   673   001774  EC63  F00A         	call	_lcd_8bit_set_cursor	;wreg free
   674   001778  6E49               	movwf	lcd_8bit_send_string_pos@ret^0,c
   675                           
   676                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 222:         while(*str != '\0')
   677   00177A  EFCC  F00B         	goto	l2244
   678   00177E                     l2240:
   679                           
   680                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 223:         {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 224:  
      +                                     ret = lcd_8bit_send_char_data(lcd, *str);
   681   00177E  C045  F039         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_char_data@lcd
   682   001782  C048  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
   683   001786                     	if	1	;There is more than 1 active tblptr byte
   684   001786  0E10               	movlw	high __smallconst
   685   001788  6EF7               	movwf	tblptrh,c
   686   00178A                     	endif
   687   00178A                     	if	0	;tblptru may be non-zero
   688   00178A                     	endif
   689   00178A                     	if	0	;tblptru may be non-zero
   690   00178A                     	endif
   691   00178A  0008               	tblrd		*
   692   00178C  CFF5 F03A          	movff	tablat,lcd_8bit_send_char_data@data
   693   001790  ECFB  F00A         	call	_lcd_8bit_send_char_data	;wreg free
   694   001794  6E49               	movwf	lcd_8bit_send_string_pos@ret^0,c
   695   001796                     
   696                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 225:             str++;
   697   001796  2A48               	incf	lcd_8bit_send_string_pos@str^0,f,c
   698   001798                     l2244:
   699                           
   700                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 222:         while(*str != '\0')
   701   001798  C048  FFF6         	movff	lcd_8bit_send_string_pos@str,tblptrl
   702   00179C                     	if	1	;There is more than 1 active tblptr byte
   703   00179C  0E10               	movlw	high __smallconst
   704   00179E  6EF7               	movwf	tblptrh,c
   705   0017A0                     	endif
   706   0017A0                     	if	0	;tblptru may be non-zero
   707   0017A0                     	endif
   708   0017A0                     	if	0	;tblptru may be non-zero
   709   0017A0                     	endif
   710   0017A0  0008               	tblrd		*
   711   0017A2  50F5               	movf	tablat,w,c
   712   0017A4  0900               	iorlw	0
   713   0017A6  A4D8               	btfss	status,2,c
   714   0017A8  EFD8  F00B         	goto	u1211
   715   0017AC  EFDA  F00B         	goto	u1210
   716   0017B0                     u1211:
   717   0017B0  EFBF  F00B         	goto	l2240
   718   0017B4                     u1210:
   719   0017B4                     l2246:
   720                           
   721                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 228:     return ret;
   722   0017B4  5049               	movf	lcd_8bit_send_string_pos@ret^0,w,c
   723   0017B6  0012               	return		;funcret
   724   0017B8                     __end_of_lcd_8bit_send_string_pos:
   725                           	callstack 0
   726                           
   727 ;; *************** function _lcd_8bit_set_cursor *****************
   728 ;; Defined at:
   729 ;;		line 290 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  lcd             1   16[COMRAM] PTR const struct .
   732 ;;		 -> lcd_2(10), 
   733 ;;  row             1   17[COMRAM] unsigned char 
   734 ;;  column          1   18[COMRAM] unsigned char 
   735 ;; Auto vars:     Size  Location     Type
   736 ;;  ret             1   21[COMRAM] unsigned char 
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      unsigned char 
   739 ;; Registers used:
   740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   746 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;Total ram usage:        6 bytes
   751 ;; Hardware stack levels used: 1
   752 ;; Hardware stack levels required when called: 3
   753 ;; This function calls:
   754 ;;		_lcd_8bit_send_command
   755 ;; This function is called by:
   756 ;;		_lcd_8bit_send_string_pos
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text2
   761   0014C6                     __ptext2:
   762                           	callstack 0
   763   0014C6                     _lcd_8bit_set_cursor:
   764                           	callstack 26
   765   0014C6                     
   766                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 291:     Std_ReturnType ret = (Std_ReturnType)0x01;
   767   0014C6  0E01               	movlw	1
   768   0014C8  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   769   0014CA                     
   770                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 292:     column--;
   771   0014CA  0641               	decf	lcd_8bit_set_cursor@column^0,f,c
   772                           
   773                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 293:     switch(row)
   774   0014CC  EF90  F00A         	goto	l2222
   775   0014D0                     l2214:
   776   0014D0  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   777   0014D4  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
   778   0014D6  0F80               	addlw	128
   779   0014D8  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   780   0014DA  EC36  F00B         	call	_lcd_8bit_send_command	;wreg free
   781   0014DE  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   782   0014E0  EFAD  F00A         	goto	l2224
   783   0014E4                     l2216:
   784   0014E4  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   785   0014E8  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
   786   0014EA  0FC0               	addlw	192
   787   0014EC  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   788   0014EE  EC36  F00B         	call	_lcd_8bit_send_command	;wreg free
   789   0014F2  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   790   0014F4  EFAD  F00A         	goto	l2224
   791   0014F8                     l2218:
   792   0014F8  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   793   0014FC  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
   794   0014FE  0F94               	addlw	148
   795   001500  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   796   001502  EC36  F00B         	call	_lcd_8bit_send_command	;wreg free
   797   001506  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   798   001508  EFAD  F00A         	goto	l2224
   799   00150C                     l2220:
   800   00150C  C03F  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   801   001510  5041               	movf	lcd_8bit_set_cursor@column^0,w,c
   802   001512  0FD4               	addlw	212
   803   001514  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   804   001516  EC36  F00B         	call	_lcd_8bit_send_command	;wreg free
   805   00151A  6E44               	movwf	lcd_8bit_set_cursor@ret^0,c
   806   00151C  EFAD  F00A         	goto	l2224
   807   001520                     l2222:
   808   001520  5040               	movf	lcd_8bit_set_cursor@row^0,w,c
   809   001522  6E42               	movwf	??_lcd_8bit_set_cursor^0,c
   810   001524  6A43               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
   811                           
   812                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   813                           ; Switch size 1, requested type "simple"
   814                           ; Number of cases is 1, Range of values is 0 to 0
   815                           ; switch strategies available:
   816                           ; Name         Instructions Cycles
   817                           ; simple_byte            4     3 (average)
   818                           ;	Chosen strategy is simple_byte
   819   001526  5043               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
   820   001528  0A00               	xorlw	0	; case 0
   821   00152A  B4D8               	btfsc	status,2,c
   822   00152C  EF9A  F00A         	goto	l2610
   823   001530  EFAD  F00A         	goto	l2224
   824   001534                     l2610:
   825                           
   826                           ; Switch size 1, requested type "simple"
   827                           ; Number of cases is 4, Range of values is 1 to 4
   828                           ; switch strategies available:
   829                           ; Name         Instructions Cycles
   830                           ; simple_byte           13     7 (average)
   831                           ;	Chosen strategy is simple_byte
   832   001534  5042               	movf	??_lcd_8bit_set_cursor^0,w,c
   833   001536  0A01               	xorlw	1	; case 1
   834   001538  B4D8               	btfsc	status,2,c
   835   00153A  EF68  F00A         	goto	l2214
   836   00153E  0A03               	xorlw	3	; case 2
   837   001540  B4D8               	btfsc	status,2,c
   838   001542  EF72  F00A         	goto	l2216
   839   001546  0A01               	xorlw	1	; case 3
   840   001548  B4D8               	btfsc	status,2,c
   841   00154A  EF7C  F00A         	goto	l2218
   842   00154E  0A07               	xorlw	7	; case 4
   843   001550  B4D8               	btfsc	status,2,c
   844   001552  EF86  F00A         	goto	l2220
   845   001556  EFAD  F00A         	goto	l2224
   846   00155A                     l2224:
   847                           
   848                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 301:     return ret;
   849   00155A  5044               	movf	lcd_8bit_set_cursor@ret^0,w,c
   850   00155C  0012               	return		;funcret
   851   00155E                     __end_of_lcd_8bit_set_cursor:
   852                           	callstack 0
   853                           
   854 ;; *************** function _lcd_8bit_send_char_data *****************
   855 ;; Defined at:
   856 ;;		line 171 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;  lcd             1   10[COMRAM] PTR const struct .
   859 ;;		 -> lcd_2(10), 
   860 ;;  data            1   11[COMRAM] unsigned char 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  cnt             1   15[COMRAM] unsigned char 
   863 ;;  ret             1   14[COMRAM] unsigned char 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      unsigned char 
   866 ;; Registers used:
   867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;Total ram usage:        6 bytes
   878 ;; Hardware stack levels used: 1
   879 ;; Hardware stack levels required when called: 2
   880 ;; This function calls:
   881 ;;		_gpio_pin_write_logic
   882 ;;		_lcd_8bit_send_enable_signal
   883 ;; This function is called by:
   884 ;;		_lcd_8bit_send_string_pos
   885 ;;		_lcd_8bit_send_char_data_pos
   886 ;;		_lcd_8bit_send_string
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text3
   891   0015F6                     __ptext3:
   892                           	callstack 0
   893   0015F6                     _lcd_8bit_send_char_data:
   894                           	callstack 27
   895   0015F6                     
   896                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 173:     uint8 cnt = 0;
   897   0015F6  0E00               	movlw	0
   898   0015F8  6E3E               	movwf	lcd_8bit_send_char_data@cnt^0,c
   899                           
   900                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 174:     if(((void*)0) == lcd){
   901   0015FA  5039               	movf	lcd_8bit_send_char_data@lcd^0,w,c
   902   0015FC  A4D8               	btfss	status,2,c
   903   0015FE  EF03  F00B         	goto	u1171
   904   001602  EF05  F00B         	goto	u1170
   905   001606                     u1171:
   906   001606  EF09  F00B         	goto	l2190
   907   00160A                     u1170:
   908   00160A                     
   909                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 175:         ret = (Std_ReturnType)0x00;
   910   00160A  0E00               	movlw	0
   911   00160C  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
   912                           
   913                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 176:     }
   914   00160E  EF34  F00B         	goto	l2206
   915   001612                     l2190:
   916   001612  C039  F02F         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
   917   001616  0E01               	movlw	1
   918   001618  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   919   00161A  ECA1  F008         	call	_gpio_pin_write_logic	;wreg free
   920   00161E                     
   921                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 179:         for(cnt=0; cnt<8; cnt++)
   922   00161E  0E00               	movlw	0
   923   001620  6E3E               	movwf	lcd_8bit_send_char_data@cnt^0,c
   924   001622                     l2198:
   925   001622  5039               	movf	lcd_8bit_send_char_data@lcd^0,w,c
   926   001624  243E               	addwf	lcd_8bit_send_char_data@cnt^0,w,c
   927   001626  0F02               	addlw	2
   928   001628  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   929   00162A  C03E  F03B         	movff	lcd_8bit_send_char_data@cnt,??_lcd_8bit_send_char_data
   930   00162E  C03A  F03C         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
   931   001632  2A3B               	incf	??_lcd_8bit_send_char_data^0,f,c
   932   001634  EF1E  F00B         	goto	u1184
   933   001638                     u1185:
   934   001638  90D8               	bcf	status,0,c
   935   00163A  323C               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
   936   00163C                     u1184:
   937   00163C  2E3B               	decfsz	??_lcd_8bit_send_char_data^0,f,c
   938   00163E  EF1C  F00B         	goto	u1185
   939   001642  503C               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
   940   001644  0B01               	andlw	1
   941   001646  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   942   001648  ECA1  F008         	call	_gpio_pin_write_logic	;wreg free
   943   00164C                     
   944                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 182:         }
   945   00164C  2A3E               	incf	lcd_8bit_send_char_data@cnt^0,f,c
   946   00164E  0E07               	movlw	7
   947   001650  643E               	cpfsgt	lcd_8bit_send_char_data@cnt^0,c
   948   001652  EF2D  F00B         	goto	u1191
   949   001656  EF2F  F00B         	goto	u1190
   950   00165A                     u1191:
   951   00165A  EF11  F00B         	goto	l2198
   952   00165E                     u1190:
   953   00165E                     
   954                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 183:         ret = lcd_8bit_send_enable_signal(lcd);
   955   00165E  C039  F037         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
   956   001662  EC96  F00C         	call	_lcd_8bit_send_enable_signal	;wreg free
   957   001666  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
   958   001668                     l2206:
   959                           
   960                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 185:     return ret;
   961   001668  503D               	movf	lcd_8bit_send_char_data@ret^0,w,c
   962   00166A  0012               	return		;funcret
   963   00166C                     __end_of_lcd_8bit_send_char_data:
   964                           	callstack 0
   965                           
   966 ;; *************** function _lcd_4bit_send_string_pos *****************
   967 ;; Defined at:
   968 ;;		line 103 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  lcd             1   20[COMRAM] PTR const struct .
   971 ;;		 -> lcd_1(6), 
   972 ;;  row             1   21[COMRAM] unsigned char 
   973 ;;  column          1   22[COMRAM] unsigned char 
   974 ;;  str             1   23[COMRAM] PTR unsigned char 
   975 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(5), 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  ret             1   24[COMRAM] unsigned char 
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      unsigned char 
   980 ;; Registers used:
   981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;Total ram usage:        5 bytes
   992 ;; Hardware stack levels used: 1
   993 ;; Hardware stack levels required when called: 4
   994 ;; This function calls:
   995 ;;		_lcd_4bit_send_char_data
   996 ;;		_lcd_4bit_set_cursor
   997 ;; This function is called by:
   998 ;;		_main
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text4
  1003   0017B8                     __ptext4:
  1004                           	callstack 0
  1005   0017B8                     _lcd_4bit_send_string_pos:
  1006                           	callstack 26
  1007   0017B8                     
  1008                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 105:     if(((void*)0) == lcd){
  1009   0017B8  5043               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1010   0017BA  A4D8               	btfss	status,2,c
  1011   0017BC  EFE2  F00B         	goto	u1221
  1012   0017C0  EFE4  F00B         	goto	u1220
  1013   0017C4                     u1221:
  1014   0017C4  EFE8  F00B         	goto	l2254
  1015   0017C8                     u1220:
  1016   0017C8                     
  1017                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 106:         ret = (Std_ReturnType)0x00;
  1018   0017C8  0E00               	movlw	0
  1019   0017CA  6E47               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1020                           
  1021                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 107:     }
  1022   0017CC  EF0E  F00C         	goto	l2262
  1023   0017D0                     l2254:
  1024                           
  1025                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 109:         ret = lcd_4bit_set_cursor(lcd, row, colum
      +                          n);
  1026   0017D0  C043  F03D         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1027   0017D4  C044  F03E         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1028   0017D8  C045  F03F         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
  1029   0017DC  ECAF  F00A         	call	_lcd_4bit_set_cursor	;wreg free
  1030   0017E0  6E47               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1031                           
  1032                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 110:         while(*str != '\0')
  1033   0017E2  EF00  F00C         	goto	l2260
  1034   0017E6                     l2256:
  1035                           
  1036                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 111:         {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 112:  
      +                                     ret = lcd_4bit_send_char_data(lcd, *str);
  1037   0017E6  C043  F03A         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  1038   0017EA  C046  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1039   0017EE                     	if	1	;There is more than 1 active tblptr byte
  1040   0017EE  0E10               	movlw	high __smallconst
  1041   0017F0  6EF7               	movwf	tblptrh,c
  1042   0017F2                     	endif
  1043   0017F2                     	if	0	;tblptru may be non-zero
  1044   0017F2                     	endif
  1045   0017F2                     	if	0	;tblptru may be non-zero
  1046   0017F2                     	endif
  1047   0017F2  0008               	tblrd		*
  1048   0017F4  CFF5 F03B          	movff	tablat,lcd_4bit_send_char_data@data
  1049   0017F8  EC10  F00C         	call	_lcd_4bit_send_char_data	;wreg free
  1050   0017FC  6E47               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1051   0017FE                     
  1052                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 113:             str++;
  1053   0017FE  2A46               	incf	lcd_4bit_send_string_pos@str^0,f,c
  1054   001800                     l2260:
  1055                           
  1056                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 110:         while(*str != '\0')
  1057   001800  C046  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  1058   001804                     	if	1	;There is more than 1 active tblptr byte
  1059   001804  0E10               	movlw	high __smallconst
  1060   001806  6EF7               	movwf	tblptrh,c
  1061   001808                     	endif
  1062   001808                     	if	0	;tblptru may be non-zero
  1063   001808                     	endif
  1064   001808                     	if	0	;tblptru may be non-zero
  1065   001808                     	endif
  1066   001808  0008               	tblrd		*
  1067   00180A  50F5               	movf	tablat,w,c
  1068   00180C  0900               	iorlw	0
  1069   00180E  A4D8               	btfss	status,2,c
  1070   001810  EF0C  F00C         	goto	u1231
  1071   001814  EF0E  F00C         	goto	u1230
  1072   001818                     u1231:
  1073   001818  EFF3  F00B         	goto	l2256
  1074   00181C                     u1230:
  1075   00181C                     l2262:
  1076                           
  1077                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 116:     return ret;
  1078   00181C  5047               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1079   00181E  0012               	return		;funcret
  1080   001820                     __end_of_lcd_4bit_send_string_pos:
  1081                           	callstack 0
  1082                           
  1083 ;; *************** function _lcd_4bit_set_cursor *****************
  1084 ;; Defined at:
  1085 ;;		line 263 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;  lcd             1   14[COMRAM] PTR const struct .
  1088 ;;		 -> lcd_1(6), 
  1089 ;;  row             1   15[COMRAM] unsigned char 
  1090 ;;  column          1   16[COMRAM] unsigned char 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  ret             1   19[COMRAM] unsigned char 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      unsigned char 
  1095 ;; Registers used:
  1096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1102 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1104 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1106 ;;Total ram usage:        6 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 3
  1109 ;; This function calls:
  1110 ;;		_lcd_4bit_send_command
  1111 ;; This function is called by:
  1112 ;;		_lcd_4bit_send_string_pos
  1113 ;;		_lcd_4bit_send_char_data_pos
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text5
  1118   00155E                     __ptext5:
  1119                           	callstack 0
  1120   00155E                     _lcd_4bit_set_cursor:
  1121                           	callstack 26
  1122   00155E                     
  1123                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 264:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1124   00155E  0E01               	movlw	1
  1125   001560  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
  1126   001562                     
  1127                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 265:     column--;
  1128   001562  063F               	decf	lcd_4bit_set_cursor@column^0,f,c
  1129                           
  1130                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 266:     switch(row)
  1131   001564  EFDC  F00A         	goto	l2176
  1132   001568                     l2168:
  1133   001568  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1134   00156C  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
  1135   00156E  0F80               	addlw	128
  1136   001570  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1137   001572  EC3E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1138   001576  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
  1139   001578  EFF9  F00A         	goto	l2178
  1140   00157C                     l2170:
  1141   00157C  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1142   001580  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
  1143   001582  0FC0               	addlw	192
  1144   001584  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1145   001586  EC3E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1146   00158A  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
  1147   00158C  EFF9  F00A         	goto	l2178
  1148   001590                     l2172:
  1149   001590  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1150   001594  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
  1151   001596  0F94               	addlw	148
  1152   001598  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1153   00159A  EC3E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1154   00159E  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
  1155   0015A0  EFF9  F00A         	goto	l2178
  1156   0015A4                     l2174:
  1157   0015A4  C03D  F03A         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1158   0015A8  503F               	movf	lcd_4bit_set_cursor@column^0,w,c
  1159   0015AA  0FD4               	addlw	212
  1160   0015AC  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1161   0015AE  EC3E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1162   0015B2  6E42               	movwf	lcd_4bit_set_cursor@ret^0,c
  1163   0015B4  EFF9  F00A         	goto	l2178
  1164   0015B8                     l2176:
  1165   0015B8  503E               	movf	lcd_4bit_set_cursor@row^0,w,c
  1166   0015BA  6E40               	movwf	??_lcd_4bit_set_cursor^0,c
  1167   0015BC  6A41               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1168                           
  1169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1170                           ; Switch size 1, requested type "simple"
  1171                           ; Number of cases is 1, Range of values is 0 to 0
  1172                           ; switch strategies available:
  1173                           ; Name         Instructions Cycles
  1174                           ; simple_byte            4     3 (average)
  1175                           ;	Chosen strategy is simple_byte
  1176   0015BE  5041               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1177   0015C0  0A00               	xorlw	0	; case 0
  1178   0015C2  B4D8               	btfsc	status,2,c
  1179   0015C4  EFE6  F00A         	goto	l2612
  1180   0015C8  EFF9  F00A         	goto	l2178
  1181   0015CC                     l2612:
  1182                           
  1183                           ; Switch size 1, requested type "simple"
  1184                           ; Number of cases is 4, Range of values is 1 to 4
  1185                           ; switch strategies available:
  1186                           ; Name         Instructions Cycles
  1187                           ; simple_byte           13     7 (average)
  1188                           ;	Chosen strategy is simple_byte
  1189   0015CC  5040               	movf	??_lcd_4bit_set_cursor^0,w,c
  1190   0015CE  0A01               	xorlw	1	; case 1
  1191   0015D0  B4D8               	btfsc	status,2,c
  1192   0015D2  EFB4  F00A         	goto	l2168
  1193   0015D6  0A03               	xorlw	3	; case 2
  1194   0015D8  B4D8               	btfsc	status,2,c
  1195   0015DA  EFBE  F00A         	goto	l2170
  1196   0015DE  0A01               	xorlw	1	; case 3
  1197   0015E0  B4D8               	btfsc	status,2,c
  1198   0015E2  EFC8  F00A         	goto	l2172
  1199   0015E6  0A07               	xorlw	7	; case 4
  1200   0015E8  B4D8               	btfsc	status,2,c
  1201   0015EA  EFD2  F00A         	goto	l2174
  1202   0015EE  EFF9  F00A         	goto	l2178
  1203   0015F2                     l2178:
  1204                           
  1205                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 274:     return ret;
  1206   0015F2  5042               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1207   0015F4  0012               	return		;funcret
  1208   0015F6                     __end_of_lcd_4bit_set_cursor:
  1209                           	callstack 0
  1210                           
  1211 ;; *************** function _lcd_4bit_send_char_data *****************
  1212 ;; Defined at:
  1213 ;;		line 61 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  lcd             1   11[COMRAM] PTR const struct .
  1216 ;;		 -> lcd_1(6), 
  1217 ;;  data            1   12[COMRAM] unsigned char 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  ret             1   13[COMRAM] unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      unsigned char 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;Total ram usage:        3 bytes
  1234 ;; Hardware stack levels used: 1
  1235 ;; Hardware stack levels required when called: 2
  1236 ;; This function calls:
  1237 ;;		_gpio_pin_write_logic
  1238 ;;		_lcd_4bit_send_enable_signal
  1239 ;;		_lcd_send_4bits
  1240 ;; This function is called by:
  1241 ;;		_lcd_4bit_send_string_pos
  1242 ;;		_lcd_4bit_send_char_data_pos
  1243 ;;		_lcd_4bit_send_string
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text6
  1248   001820                     __ptext6:
  1249                           	callstack 0
  1250   001820                     _lcd_4bit_send_char_data:
  1251                           	callstack 27
  1252   001820                     
  1253                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 63:     if(((void*)0) == lcd){
  1254   001820  503A               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1255   001822  A4D8               	btfss	status,2,c
  1256   001824  EF16  F00C         	goto	u1161
  1257   001828  EF18  F00C         	goto	u1160
  1258   00182C                     u1161:
  1259   00182C  EF1C  F00C         	goto	l2158
  1260   001830                     u1160:
  1261   001830                     
  1262                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 64:         ret = (Std_ReturnType)0x00;
  1263   001830  0E00               	movlw	0
  1264   001832  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1265                           
  1266                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 65:     }
  1267   001834  EF3C  F00C         	goto	l2160
  1268   001838                     l2158:
  1269                           
  1270                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 67:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_HIGH);
  1271   001838  C03A  F02F         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1272   00183C  0E01               	movlw	1
  1273   00183E  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1274   001840  ECA1  F008         	call	_gpio_pin_write_logic	;wreg free
  1275   001844  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1276                           
  1277                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 68:         ret = lcd_send_4bits(lcd, (data >> 4));
  1278   001846  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1279   00184A  383B               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1280   00184C  0B0F               	andlw	15
  1281   00184E  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  1282   001850  EC71  F00B         	call	_lcd_send_4bits	;wreg free
  1283   001854  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1284                           
  1285                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 69:         ret = lcd_4bit_send_enable_signal(lcd);
  1286   001856  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1287   00185A  ECB4  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  1288   00185E  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1289                           
  1290                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret = lcd_send_4bits(lcd, data);
  1291   001860  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1292   001864  C03B  F038         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  1293   001868  EC71  F00B         	call	_lcd_send_4bits	;wreg free
  1294   00186C  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1295                           
  1296                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 71:         ret = lcd_4bit_send_enable_signal(lcd);
  1297   00186E  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1298   001872  ECB4  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  1299   001876  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1300   001878                     l2160:
  1301                           
  1302                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 73:     return ret;
  1303   001878  503C               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1304   00187A  0012               	return		;funcret
  1305   00187C                     __end_of_lcd_4bit_send_char_data:
  1306                           	callstack 0
  1307                           
  1308 ;; *************** function _app_init *****************
  1309 ;; Defined at:
  1310 ;;		line 34 in file "appplication.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;Total ram usage:        0 bytes
  1329 ;; Hardware stack levels used: 1
  1330 ;; Hardware stack levels required when called: 5
  1331 ;; This function calls:
  1332 ;;		_ecu_layer_initialize
  1333 ;; This function is called by:
  1334 ;;		_main
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           	psect	text7
  1339   001A1A                     __ptext7:
  1340                           	callstack 0
  1341   001A1A                     _app_init:
  1342                           	callstack 25
  1343   001A1A                     
  1344                           ;appplication.c: 36:     ecu_layer_initialize();
  1345   001A1A  EC04  F00D         	call	_ecu_layer_initialize	;wreg free
  1346   001A1E  0012               	return		;funcret
  1347   001A20                     __end_of_app_init:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function _ecu_layer_initialize *****************
  1351 ;; Defined at:
  1352 ;;		line 84 in file "ECU_Layer/ecu_layer_init.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  ret             1    0        unsigned char 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1370 ;;Total ram usage:        0 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 4
  1373 ;; This function calls:
  1374 ;;		_lcd_4bit_initialize
  1375 ;;		_lcd_8bit_initialize
  1376 ;; This function is called by:
  1377 ;;		_app_init
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text8
  1382   001A08                     __ptext8:
  1383                           	callstack 0
  1384   001A08                     _ecu_layer_initialize:
  1385                           	callstack 25
  1386   001A08  0E29               	movlw	low _lcd_1
  1387   001A0A  6E3D               	movwf	lcd_4bit_initialize@lcd^0,c
  1388   001A0C  EC97  F009         	call	_lcd_4bit_initialize	;wreg free
  1389   001A10  0E1F               	movlw	low _lcd_2
  1390   001A12  6E3F               	movwf	lcd_8bit_initialize@lcd^0,c
  1391   001A14  EC29  F009         	call	_lcd_8bit_initialize	;wreg free
  1392   001A18  0012               	return		;funcret
  1393   001A1A                     __end_of_ecu_layer_initialize:
  1394                           	callstack 0
  1395                           
  1396 ;; *************** function _lcd_8bit_initialize *****************
  1397 ;; Defined at:
  1398 ;;		line 125 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  lcd             1   16[COMRAM] PTR const struct .
  1401 ;;		 -> lcd_2(10), 
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;  ret             1   19[COMRAM] unsigned char 
  1404 ;;  l_data_pins_    1   18[COMRAM] unsigned char 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      unsigned char 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1414 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;Total ram usage:        4 bytes
  1419 ;; Hardware stack levels used: 1
  1420 ;; Hardware stack levels required when called: 3
  1421 ;; This function calls:
  1422 ;;		_gpio_pin_initialize
  1423 ;;		_lcd_8bit_send_command
  1424 ;; This function is called by:
  1425 ;;		_ecu_layer_initialize
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text9
  1430   001252                     __ptext9:
  1431                           	callstack 0
  1432   001252                     _lcd_8bit_initialize:
  1433                           	callstack 25
  1434   001252                     
  1435                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 127:     uint8 l_data_pins_counter = 0;
  1436   001252  0E00               	movlw	0
  1437   001254  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  1438                           
  1439                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 128:     if(((void*)0) == lcd){
  1440   001256  503F               	movf	lcd_8bit_initialize@lcd^0,w,c
  1441   001258  A4D8               	btfss	status,2,c
  1442   00125A  EF31  F009         	goto	u1141
  1443   00125E  EF33  F009         	goto	u1140
  1444   001262                     u1141:
  1445   001262  EF35  F009         	goto	l2108
  1446   001266                     u1140:
  1447   001266                     
  1448                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 130:     }
  1449   001266  EF50  F009         	goto	l2122
  1450   00126A                     l2108:
  1451                           
  1452                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 132:         ret = gpio_pin_initialize(&(lcd->lcd_rs))
      +                          ;
  1453   00126A  C03F  F037         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialize@_pin_config
  1454   00126E  EC6C  F00C         	call	_gpio_pin_initialize	;wreg free
  1455   001272  6E42               	movwf	lcd_8bit_initialize@ret^0,c
  1456                           
  1457                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 133:         ret = gpio_pin_initialize(&(lcd->lcd_en))
      +                          ;
  1458   001274  283F               	incf	lcd_8bit_initialize@lcd^0,w,c
  1459   001276  6E37               	movwf	gpio_pin_initialize@_pin_config^0,c
  1460   001278  EC6C  F00C         	call	_gpio_pin_initialize	;wreg free
  1461   00127C  6E42               	movwf	lcd_8bit_initialize@ret^0,c
  1462   00127E                     
  1463                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 134:         for(l_data_pins_counter = 0; l_data_pins_
      +                          counter<8; l_data_pins_counter++){
  1464   00127E  0E00               	movlw	0
  1465   001280  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
  1466   001282                     l2116:
  1467   001282  503F               	movf	lcd_8bit_initialize@lcd^0,w,c
  1468   001284  2441               	addwf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
  1469   001286  0F02               	addlw	2
  1470   001288  6E37               	movwf	gpio_pin_initialize@_pin_config^0,c
  1471   00128A  EC6C  F00C         	call	_gpio_pin_initialize	;wreg free
  1472   00128E                     
  1473                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 136:         }
  1474   00128E  2A41               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
  1475   001290  0E07               	movlw	7
  1476   001292  6441               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
  1477   001294  EF4E  F009         	goto	u1151
  1478   001298  EF50  F009         	goto	u1150
  1479   00129C                     u1151:
  1480   00129C  EF41  F009         	goto	l2116
  1481   0012A0                     u1150:
  1482   0012A0                     l2122:
  1483                           
  1484                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 138:     _delay((unsigned long)((20)*(4000000UL/4000.0
      +                          )));
  1485   0012A0  0E1A               	movlw	26
  1486   0012A2  6E40               	movwf	??_lcd_8bit_initialize^0,c
  1487   0012A4  0EF8               	movlw	248
  1488   0012A6                     u1597:
  1489   0012A6  2EE8               	decfsz	wreg,f,c
  1490   0012A8  D7FE               	bra	u1597
  1491   0012AA  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
  1492   0012AC  D7FC               	bra	u1597
  1493   0012AE  D000               	nop2	
  1494   0012B0  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1495   0012B4  0E38               	movlw	56
  1496   0012B6  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1497   0012B8  EC36  F00B         	call	_lcd_8bit_send_command	;wreg free
  1498   0012BC                     
  1499                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 140:     _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
  1500   0012BC  D000               	nop2		;2 cycle nop
  1501   0012BE  D000               	nop2		;2 cycle nop
  1502   0012C0  0000               	nop	
  1503   0012C2  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1504   0012C6  0E38               	movlw	56
  1505   0012C8  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1506   0012CA  EC36  F00B         	call	_lcd_8bit_send_command	;wreg free
  1507                           
  1508                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 142:     _delay((unsigned long)((150)*(4000000UL/40000
      +                          00.0)));
  1509   0012CE  0E32               	movlw	50
  1510   0012D0                     u1607:
  1511   0012D0  2EE8               	decfsz	wreg,f,c
  1512   0012D2  D7FE               	bra	u1607
  1513   0012D4  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1514   0012D8  0E38               	movlw	56
  1515   0012DA  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1516   0012DC  EC36  F00B         	call	_lcd_8bit_send_command	;wreg free
  1517   0012E0  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1518   0012E4  0E01               	movlw	1
  1519   0012E6  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1520   0012E8  EC36  F00B         	call	_lcd_8bit_send_command	;wreg free
  1521   0012EC  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1522   0012F0  0E02               	movlw	2
  1523   0012F2  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1524   0012F4  EC36  F00B         	call	_lcd_8bit_send_command	;wreg free
  1525   0012F8  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1526   0012FC  0E06               	movlw	6
  1527   0012FE  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1528   001300  EC36  F00B         	call	_lcd_8bit_send_command	;wreg free
  1529   001304  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1530   001308  0E0C               	movlw	12
  1531   00130A  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1532   00130C  EC36  F00B         	call	_lcd_8bit_send_command	;wreg free
  1533   001310  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1534   001314  0E38               	movlw	56
  1535   001316  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1536   001318  EC36  F00B         	call	_lcd_8bit_send_command	;wreg free
  1537   00131C                     
  1538                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 150:     ret = lcd_8bit_send_command(lcd, 0x80);
  1539   00131C  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1540   001320  0E80               	movlw	128
  1541   001322  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1542   001324  EC36  F00B         	call	_lcd_8bit_send_command	;wreg free
  1543   001328  6E42               	movwf	lcd_8bit_initialize@ret^0,c
  1544   00132A                     
  1545                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 151:     return ret;
  1546   00132A  5042               	movf	lcd_8bit_initialize@ret^0,w,c
  1547   00132C  0012               	return		;funcret
  1548   00132E                     __end_of_lcd_8bit_initialize:
  1549                           	callstack 0
  1550                           
  1551 ;; *************** function _lcd_8bit_send_command *****************
  1552 ;; Defined at:
  1553 ;;		line 154 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  lcd             1   10[COMRAM] PTR const struct .
  1556 ;;		 -> lcd_2(10), 
  1557 ;;  command         1   11[COMRAM] unsigned char 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  cnt             1   15[COMRAM] unsigned char 
  1560 ;;  ret             1   14[COMRAM] unsigned char 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      unsigned char 
  1563 ;; Registers used:
  1564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;Total ram usage:        6 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 2
  1577 ;; This function calls:
  1578 ;;		_gpio_pin_write_logic
  1579 ;;		_lcd_8bit_send_enable_signal
  1580 ;; This function is called by:
  1581 ;;		_lcd_8bit_initialize
  1582 ;;		_lcd_8bit_set_cursor
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text10
  1587   00166C                     __ptext10:
  1588                           	callstack 0
  1589   00166C                     _lcd_8bit_send_command:
  1590                           	callstack 26
  1591   00166C                     
  1592                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 156:     uint8 cnt = 0;
  1593   00166C  0E00               	movlw	0
  1594   00166E  6E3E               	movwf	lcd_8bit_send_command@cnt^0,c
  1595                           
  1596                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 157:     if(((void*)0) == lcd){
  1597   001670  5039               	movf	lcd_8bit_send_command@lcd^0,w,c
  1598   001672  A4D8               	btfss	status,2,c
  1599   001674  EF3E  F00B         	goto	u1091
  1600   001678  EF40  F00B         	goto	u1090
  1601   00167C                     u1091:
  1602   00167C  EF44  F00B         	goto	l2040
  1603   001680                     u1090:
  1604   001680                     
  1605                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 158:         ret = (Std_ReturnType)0x00;
  1606   001680  0E00               	movlw	0
  1607   001682  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1608                           
  1609                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 159:     }
  1610   001684  EF6F  F00B         	goto	l2056
  1611   001688                     l2040:
  1612   001688  C039  F02F         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1613   00168C  0E00               	movlw	0
  1614   00168E  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1615   001690  ECA1  F008         	call	_gpio_pin_write_logic	;wreg free
  1616   001694                     
  1617                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 162:         for(cnt=0; cnt<8; cnt++)
  1618   001694  0E00               	movlw	0
  1619   001696  6E3E               	movwf	lcd_8bit_send_command@cnt^0,c
  1620   001698                     l2048:
  1621   001698  5039               	movf	lcd_8bit_send_command@lcd^0,w,c
  1622   00169A  243E               	addwf	lcd_8bit_send_command@cnt^0,w,c
  1623   00169C  0F02               	addlw	2
  1624   00169E  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1625   0016A0  C03E  F03B         	movff	lcd_8bit_send_command@cnt,??_lcd_8bit_send_command
  1626   0016A4  C03A  F03C         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1627   0016A8  2A3B               	incf	??_lcd_8bit_send_command^0,f,c
  1628   0016AA  EF59  F00B         	goto	u1104
  1629   0016AE                     u1105:
  1630   0016AE  90D8               	bcf	status,0,c
  1631   0016B0  323C               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1632   0016B2                     u1104:
  1633   0016B2  2E3B               	decfsz	??_lcd_8bit_send_command^0,f,c
  1634   0016B4  EF57  F00B         	goto	u1105
  1635   0016B8  503C               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1636   0016BA  0B01               	andlw	1
  1637   0016BC  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1638   0016BE  ECA1  F008         	call	_gpio_pin_write_logic	;wreg free
  1639   0016C2                     
  1640                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 165:         }
  1641   0016C2  2A3E               	incf	lcd_8bit_send_command@cnt^0,f,c
  1642   0016C4  0E07               	movlw	7
  1643   0016C6  643E               	cpfsgt	lcd_8bit_send_command@cnt^0,c
  1644   0016C8  EF68  F00B         	goto	u1111
  1645   0016CC  EF6A  F00B         	goto	u1110
  1646   0016D0                     u1111:
  1647   0016D0  EF4C  F00B         	goto	l2048
  1648   0016D4                     u1110:
  1649   0016D4                     
  1650                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 166:         ret = lcd_8bit_send_enable_signal(lcd);
  1651   0016D4  C039  F037         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  1652   0016D8  EC96  F00C         	call	_lcd_8bit_send_enable_signal	;wreg free
  1653   0016DC  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1654   0016DE                     l2056:
  1655                           
  1656                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 168:     return ret;
  1657   0016DE  503D               	movf	lcd_8bit_send_command@ret^0,w,c
  1658   0016E0  0012               	return		;funcret
  1659   0016E2                     __end_of_lcd_8bit_send_command:
  1660                           	callstack 0
  1661                           
  1662 ;; *************** function _lcd_8bit_send_enable_signal *****************
  1663 ;; Defined at:
  1664 ;;		line 277 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  lcd             1    8[COMRAM] PTR const struct .
  1667 ;;		 -> lcd_2(10), 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  ret             1    9[COMRAM] unsigned char 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      unsigned char 
  1672 ;; Registers used:
  1673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1679 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;Total ram usage:        2 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 1
  1686 ;; This function calls:
  1687 ;;		_gpio_pin_write_logic
  1688 ;; This function is called by:
  1689 ;;		_lcd_8bit_send_command
  1690 ;;		_lcd_8bit_send_char_data
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text11
  1695   00192C                     __ptext11:
  1696                           	callstack 0
  1697   00192C                     _lcd_8bit_send_enable_signal:
  1698                           	callstack 26
  1699   00192C                     
  1700                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 279:     if(((void*)0) == lcd){
  1701   00192C  5037               	movf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1702   00192E  A4D8               	btfss	status,2,c
  1703   001930  EF9C  F00C         	goto	u1051
  1704   001934  EF9E  F00C         	goto	u1050
  1705   001938                     u1051:
  1706   001938  EFA2  F00C         	goto	l2006
  1707   00193C                     u1050:
  1708   00193C                     
  1709                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 280:         ret = (Std_ReturnType)0x00;
  1710   00193C  0E00               	movlw	0
  1711   00193E  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1712                           
  1713                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 281:     }
  1714   001940  EFB2  F00C         	goto	l2010
  1715   001944                     l2006:
  1716   001944  2837               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1717   001946  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1718   001948  0E01               	movlw	1
  1719   00194A  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1720   00194C  ECA1  F008         	call	_gpio_pin_write_logic	;wreg free
  1721   001950                     
  1722                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 284:         _delay((unsigned long)((5)*(4000000UL/400
      +                          0000.0)));
  1723   001950  D000               	nop2		;2 cycle nop
  1724   001952  D000               	nop2		;2 cycle nop
  1725   001954  0000               	nop	
  1726                           
  1727                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 285:         ret = gpio_pin_write_logic(&(lcd->lcd_en)
      +                          , GPIO_LOW);
  1728   001956  2837               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1729   001958  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1730   00195A  0E00               	movlw	0
  1731   00195C  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1732   00195E  ECA1  F008         	call	_gpio_pin_write_logic	;wreg free
  1733   001962  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1734   001964                     l2010:
  1735                           
  1736                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 287:     return ret;
  1737   001964  5038               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  1738   001966  0012               	return		;funcret
  1739   001968                     __end_of_lcd_8bit_send_enable_signal:
  1740                           	callstack 0
  1741                           
  1742 ;; *************** function _lcd_4bit_initialize *****************
  1743 ;; Defined at:
  1744 ;;		line 17 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  lcd             1   14[COMRAM] PTR const struct .
  1747 ;;		 -> lcd_1(6), 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  ret             1   17[COMRAM] unsigned char 
  1750 ;;  l_data_pins_    1   16[COMRAM] unsigned char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      unsigned char 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1760 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;Total ram usage:        4 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 3
  1767 ;; This function calls:
  1768 ;;		_gpio_pin_initialize
  1769 ;;		_lcd_4bit_send_command
  1770 ;; This function is called by:
  1771 ;;		_ecu_layer_initialize
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text12
  1776   00132E                     __ptext12:
  1777                           	callstack 0
  1778   00132E                     _lcd_4bit_initialize:
  1779                           	callstack 25
  1780   00132E                     
  1781                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 19:     uint8 l_data_pins_counter = 0;
  1782   00132E  0E00               	movlw	0
  1783   001330  6E3F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1784                           
  1785                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 20:     if(((void*)0) == lcd){
  1786   001332  503D               	movf	lcd_4bit_initialize@lcd^0,w,c
  1787   001334  A4D8               	btfss	status,2,c
  1788   001336  EF9F  F009         	goto	u1121
  1789   00133A  EFA1  F009         	goto	u1120
  1790   00133E                     u1121:
  1791   00133E  EFA3  F009         	goto	l2064
  1792   001342                     u1120:
  1793   001342                     
  1794                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 22:     }
  1795   001342  EFBE  F009         	goto	l2078
  1796   001346                     l2064:
  1797                           
  1798                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 24:         ret = gpio_pin_initialize(&(lcd->lcd_rs));
  1799   001346  C03D  F037         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@_pin_config
  1800   00134A  EC6C  F00C         	call	_gpio_pin_initialize	;wreg free
  1801   00134E  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1802                           
  1803                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 25:         ret = gpio_pin_initialize(&(lcd->lcd_en));
  1804   001350  283D               	incf	lcd_4bit_initialize@lcd^0,w,c
  1805   001352  6E37               	movwf	gpio_pin_initialize@_pin_config^0,c
  1806   001354  EC6C  F00C         	call	_gpio_pin_initialize	;wreg free
  1807   001358  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1808   00135A                     
  1809                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 26:         for(l_data_pins_counter = 0; l_data_pins_c
      +                          ounter<4; l_data_pins_counter++){
  1810   00135A  0E00               	movlw	0
  1811   00135C  6E3F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
  1812   00135E                     l2072:
  1813   00135E  503D               	movf	lcd_4bit_initialize@lcd^0,w,c
  1814   001360  243F               	addwf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
  1815   001362  0F02               	addlw	2
  1816   001364  6E37               	movwf	gpio_pin_initialize@_pin_config^0,c
  1817   001366  EC6C  F00C         	call	_gpio_pin_initialize	;wreg free
  1818   00136A                     
  1819                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 28:         }
  1820   00136A  2A3F               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
  1821   00136C  0E03               	movlw	3
  1822   00136E  643F               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
  1823   001370  EFBC  F009         	goto	u1131
  1824   001374  EFBE  F009         	goto	u1130
  1825   001378                     u1131:
  1826   001378  EFAF  F009         	goto	l2072
  1827   00137C                     u1130:
  1828   00137C                     l2078:
  1829                           
  1830                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 30:     _delay((unsigned long)((20)*(4000000UL/4000.0)
      +                          ));
  1831   00137C  0E1A               	movlw	26
  1832   00137E  6E3E               	movwf	??_lcd_4bit_initialize^0,c
  1833   001380  0EF8               	movlw	248
  1834   001382                     u1617:
  1835   001382  2EE8               	decfsz	wreg,f,c
  1836   001384  D7FE               	bra	u1617
  1837   001386  2E3E               	decfsz	??_lcd_4bit_initialize^0,f,c
  1838   001388  D7FC               	bra	u1617
  1839   00138A  D000               	nop2	
  1840   00138C  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1841   001390  0E38               	movlw	56
  1842   001392  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1843   001394  EC3E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1844   001398                     
  1845                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 32:     _delay((unsigned long)((5)*(4000000UL/4000000.
      +                          0)));
  1846   001398  D000               	nop2		;2 cycle nop
  1847   00139A  D000               	nop2		;2 cycle nop
  1848   00139C  0000               	nop	
  1849   00139E  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1850   0013A2  0E38               	movlw	56
  1851   0013A4  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1852   0013A6  EC3E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1853                           
  1854                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 34:     _delay((unsigned long)((150)*(4000000UL/400000
      +                          0.0)));
  1855   0013AA  0E32               	movlw	50
  1856   0013AC                     u1627:
  1857   0013AC  2EE8               	decfsz	wreg,f,c
  1858   0013AE  D7FE               	bra	u1627
  1859   0013B0  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1860   0013B4  0E38               	movlw	56
  1861   0013B6  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1862   0013B8  EC3E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1863   0013BC  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1864   0013C0  0E01               	movlw	1
  1865   0013C2  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1866   0013C4  EC3E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1867   0013C8  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1868   0013CC  0E02               	movlw	2
  1869   0013CE  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1870   0013D0  EC3E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1871   0013D4  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1872   0013D8  0E06               	movlw	6
  1873   0013DA  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1874   0013DC  EC3E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1875   0013E0  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1876   0013E4  0E0C               	movlw	12
  1877   0013E6  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1878   0013E8  EC3E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1879   0013EC  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1880   0013F0  0E28               	movlw	40
  1881   0013F2  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1882   0013F4  EC3E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1883   0013F8                     
  1884                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 42:     ret = lcd_4bit_send_command(lcd, 0x80);
  1885   0013F8  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1886   0013FC  0E80               	movlw	128
  1887   0013FE  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1888   001400  EC3E  F00C         	call	_lcd_4bit_send_command	;wreg free
  1889   001404  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1890   001406                     
  1891                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 43:     return ret;
  1892   001406  5040               	movf	lcd_4bit_initialize@ret^0,w,c
  1893   001408  0012               	return		;funcret
  1894   00140A                     __end_of_lcd_4bit_initialize:
  1895                           	callstack 0
  1896                           
  1897 ;; *************** function _lcd_4bit_send_command *****************
  1898 ;; Defined at:
  1899 ;;		line 46 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  lcd             1   11[COMRAM] PTR const struct .
  1902 ;;		 -> lcd_1(6), 
  1903 ;;  command         1   12[COMRAM] unsigned char 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;  ret             1   13[COMRAM] unsigned char 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      unsigned char 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;Total ram usage:        3 bytes
  1920 ;; Hardware stack levels used: 1
  1921 ;; Hardware stack levels required when called: 2
  1922 ;; This function calls:
  1923 ;;		_gpio_pin_write_logic
  1924 ;;		_lcd_4bit_send_enable_signal
  1925 ;;		_lcd_send_4bits
  1926 ;; This function is called by:
  1927 ;;		_lcd_4bit_initialize
  1928 ;;		_lcd_4bit_set_cursor
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text13
  1933   00187C                     __ptext13:
  1934                           	callstack 0
  1935   00187C                     _lcd_4bit_send_command:
  1936                           	callstack 26
  1937   00187C                     
  1938                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 48:     if(((void*)0) == lcd){
  1939   00187C  503A               	movf	lcd_4bit_send_command@lcd^0,w,c
  1940   00187E  A4D8               	btfss	status,2,c
  1941   001880  EF44  F00C         	goto	u1081
  1942   001884  EF46  F00C         	goto	u1080
  1943   001888                     u1081:
  1944   001888  EF4A  F00C         	goto	l2030
  1945   00188C                     u1080:
  1946   00188C                     
  1947                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 49:         ret = (Std_ReturnType)0x00;
  1948   00188C  0E00               	movlw	0
  1949   00188E  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1950                           
  1951                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 50:     }
  1952   001890  EF6A  F00C         	goto	l2032
  1953   001894                     l2030:
  1954                           
  1955                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 52:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_LOW);
  1956   001894  C03A  F02F         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1957   001898  0E00               	movlw	0
  1958   00189A  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1959   00189C  ECA1  F008         	call	_gpio_pin_write_logic	;wreg free
  1960   0018A0  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1961                           
  1962                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 53:         ret = lcd_send_4bits(lcd, (command >> 4));
  1963   0018A2  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1964   0018A6  383B               	swapf	lcd_4bit_send_command@command^0,w,c
  1965   0018A8  0B0F               	andlw	15
  1966   0018AA  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  1967   0018AC  EC71  F00B         	call	_lcd_send_4bits	;wreg free
  1968   0018B0  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1969                           
  1970                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 54:         ret = lcd_4bit_send_enable_signal(lcd);
  1971   0018B2  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  1972   0018B6  ECB4  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  1973   0018BA  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1974                           
  1975                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 55:         ret = lcd_send_4bits(lcd, command);
  1976   0018BC  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1977   0018C0  C03B  F038         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  1978   0018C4  EC71  F00B         	call	_lcd_send_4bits	;wreg free
  1979   0018C8  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1980                           
  1981                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 56:         ret = lcd_4bit_send_enable_signal(lcd);
  1982   0018CA  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  1983   0018CE  ECB4  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  1984   0018D2  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1985   0018D4                     l2032:
  1986                           
  1987                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 58:     return ret;
  1988   0018D4  503C               	movf	lcd_4bit_send_command@ret^0,w,c
  1989   0018D6  0012               	return		;funcret
  1990   0018D8                     __end_of_lcd_4bit_send_command:
  1991                           	callstack 0
  1992                           
  1993 ;; *************** function _lcd_send_4bits *****************
  1994 ;; Defined at:
  1995 ;;		line 236 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  lcd             1    8[COMRAM] PTR const struct .
  1998 ;;		 -> lcd_1(6), 
  1999 ;;  _data_comman    1    9[COMRAM] unsigned char 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  ret             1   10[COMRAM] unsigned char 
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      unsigned char 
  2004 ;; Registers used:
  2005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;Total ram usage:        3 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; Hardware stack levels required when called: 1
  2018 ;; This function calls:
  2019 ;;		_gpio_pin_write_logic
  2020 ;; This function is called by:
  2021 ;;		_lcd_4bit_send_command
  2022 ;;		_lcd_4bit_send_char_data
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text14
  2027   0016E2                     __ptext14:
  2028                           	callstack 0
  2029   0016E2                     _lcd_send_4bits:
  2030                           	callstack 26
  2031   0016E2                     
  2032                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 238:     if(((void*)0) == lcd){
  2033   0016E2  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2034   0016E4  A4D8               	btfss	status,2,c
  2035   0016E6  EF77  F00B         	goto	u1031
  2036   0016EA  EF79  F00B         	goto	u1030
  2037   0016EE                     u1031:
  2038   0016EE  EF7D  F00B         	goto	l1984
  2039   0016F2                     u1030:
  2040   0016F2                     
  2041                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 239:         ret = (Std_ReturnType)0x00;
  2042   0016F2  0E00               	movlw	0
  2043   0016F4  6E39               	movwf	lcd_send_4bits@ret^0,c
  2044                           
  2045                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 240:     }
  2046   0016F6  EFA6  F00B         	goto	l1986
  2047   0016FA                     l1984:
  2048                           
  2049                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 242:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[0]), (_data_command >> 0) & (uint8)0x01);
  2050   0016FA  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2051   0016FC  0F02               	addlw	2
  2052   0016FE  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2053   001700  5038               	movf	lcd_send_4bits@_data_command^0,w,c
  2054   001702  0B01               	andlw	1
  2055   001704  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2056   001706  ECA1  F008         	call	_gpio_pin_write_logic	;wreg free
  2057   00170A  6E39               	movwf	lcd_send_4bits@ret^0,c
  2058                           
  2059                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 243:         ret &= gpio_pin_write_logic(&(lcd->lcd_da
      +                          ta[1]), (_data_command >> 1) & (uint8)0x01);
  2060   00170C  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2061   00170E  0F03               	addlw	3
  2062   001710  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2063   001712  90D8               	bcf	status,0,c
  2064   001714  3038               	rrcf	lcd_send_4bits@_data_command^0,w,c
  2065   001716  0B01               	andlw	1
  2066   001718  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2067   00171A  ECA1  F008         	call	_gpio_pin_write_logic	;wreg free
  2068   00171E  1639               	andwf	lcd_send_4bits@ret^0,f,c
  2069                           
  2070                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 244:         ret &= gpio_pin_write_logic(&(lcd->lcd_da
      +                          ta[2]), (_data_command >> 2) & (uint8)0x01);
  2071   001720  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2072   001722  0F04               	addlw	4
  2073   001724  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2074   001726  4038               	rrncf	lcd_send_4bits@_data_command^0,w,c
  2075   001728  42E8               	rrncf	wreg,f,c
  2076   00172A  0B3F               	andlw	63
  2077   00172C  0B01               	andlw	1
  2078   00172E  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2079   001730  ECA1  F008         	call	_gpio_pin_write_logic	;wreg free
  2080   001734  1639               	andwf	lcd_send_4bits@ret^0,f,c
  2081                           
  2082                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 245:         ret &= gpio_pin_write_logic(&(lcd->lcd_da
      +                          ta[3]), (_data_command >> 3) & (uint8)0x01);
  2083   001736  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2084   001738  0F05               	addlw	5
  2085   00173A  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2086   00173C  3838               	swapf	lcd_send_4bits@_data_command^0,w,c
  2087   00173E  46E8               	rlncf	wreg,f,c
  2088   001740  0B1F               	andlw	31
  2089   001742  0B01               	andlw	1
  2090   001744  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2091   001746  ECA1  F008         	call	_gpio_pin_write_logic	;wreg free
  2092   00174A  1639               	andwf	lcd_send_4bits@ret^0,f,c
  2093   00174C                     l1986:
  2094                           
  2095                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 247:     return ret;
  2096   00174C  5039               	movf	lcd_send_4bits@ret^0,w,c
  2097   00174E  0012               	return		;funcret
  2098   001750                     __end_of_lcd_send_4bits:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _lcd_4bit_send_enable_signal *****************
  2102 ;; Defined at:
  2103 ;;		line 250 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  lcd             1    8[COMRAM] PTR const struct .
  2106 ;;		 -> lcd_1(6), 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  ret             1    9[COMRAM] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      unsigned char 
  2111 ;; Registers used:
  2112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2118 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;Total ram usage:        2 bytes
  2123 ;; Hardware stack levels used: 1
  2124 ;; Hardware stack levels required when called: 1
  2125 ;; This function calls:
  2126 ;;		_gpio_pin_write_logic
  2127 ;; This function is called by:
  2128 ;;		_lcd_4bit_send_command
  2129 ;;		_lcd_4bit_send_char_data
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text15
  2134   001968                     __ptext15:
  2135                           	callstack 0
  2136   001968                     _lcd_4bit_send_enable_signal:
  2137                           	callstack 26
  2138   001968                     
  2139                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 252:     if(((void*)0) == lcd){
  2140   001968  5037               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2141   00196A  A4D8               	btfss	status,2,c
  2142   00196C  EFBA  F00C         	goto	u1041
  2143   001970  EFBC  F00C         	goto	u1040
  2144   001974                     u1041:
  2145   001974  EFC0  F00C         	goto	l1994
  2146   001978                     u1040:
  2147   001978                     
  2148                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 253:         ret = (Std_ReturnType)0x00;
  2149   001978  0E00               	movlw	0
  2150   00197A  6E38               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2151                           
  2152                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 254:     }
  2153   00197C  EFD0  F00C         	goto	l1998
  2154   001980                     l1994:
  2155   001980  2837               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2156   001982  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2157   001984  0E01               	movlw	1
  2158   001986  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2159   001988  ECA1  F008         	call	_gpio_pin_write_logic	;wreg free
  2160   00198C                     
  2161                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 257:         _delay((unsigned long)((5)*(4000000UL/400
      +                          0000.0)));
  2162   00198C  D000               	nop2		;2 cycle nop
  2163   00198E  D000               	nop2		;2 cycle nop
  2164   001990  0000               	nop	
  2165                           
  2166                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 258:         ret = gpio_pin_write_logic(&(lcd->lcd_en)
      +                          , GPIO_LOW);
  2167   001992  2837               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2168   001994  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2169   001996  0E00               	movlw	0
  2170   001998  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2171   00199A  ECA1  F008         	call	_gpio_pin_write_logic	;wreg free
  2172   00199E  6E38               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2173   0019A0                     l1998:
  2174                           
  2175                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 260:     return ret;
  2176   0019A0  5038               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  2177   0019A2  0012               	return		;funcret
  2178   0019A4                     __end_of_lcd_4bit_send_enable_signal:
  2179                           	callstack 0
  2180                           
  2181 ;; *************** function _gpio_pin_initialize *****************
  2182 ;; Defined at:
  2183 ;;		line 134 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  _pin_config     1    8[COMRAM] PTR struct .
  2186 ;;		 -> lcd_2$lcd_data(8), lcd_2$lcd_en(1), lcd_2$lcd_rs(1), lcd_2(10), 
  2187 ;;		 -> lcd_1$lcd_data(4), lcd_1$lcd_en(1), lcd_1$lcd_rs(1), lcd_1(6), 
  2188 ;;		 -> led_initialize@pin_obj(1), 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  ret             1   10[COMRAM] unsigned char 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      unsigned char 
  2193 ;; Registers used:
  2194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2200 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;Total ram usage:        3 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; Hardware stack levels required when called: 1
  2207 ;; This function calls:
  2208 ;;		_gpio_pin_direction_initialize
  2209 ;;		_gpio_pin_write_logic
  2210 ;; This function is called by:
  2211 ;;		_lcd_4bit_initialize
  2212 ;;		_lcd_8bit_initialize
  2213 ;;		_keypad_initialize
  2214 ;;		_led_initialize
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text16
  2219   0018D8                     __ptext16:
  2220                           	callstack 0
  2221   0018D8                     _gpio_pin_initialize:
  2222                           	callstack 26
  2223   0018D8                     
  2224                           ;MCAL_Layer/GPIO/hal_gpio.c: 136:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           (8 - 1))
  2225   0018D8  5037               	movf	gpio_pin_initialize@_pin_config^0,w,c
  2226   0018DA  B4D8               	btfsc	status,2,c
  2227   0018DC  EF72  F00C         	goto	u1061
  2228   0018E0  EF74  F00C         	goto	u1060
  2229   0018E4                     u1061:
  2230   0018E4  EF84  F00C         	goto	l2018
  2231   0018E8                     u1060:
  2232   0018E8  5037               	movf	gpio_pin_initialize@_pin_config^0,w,c
  2233   0018EA  6ED9               	movwf	fsr2l,c
  2234   0018EC  6ADA               	clrf	fsr2h,c
  2235   0018EE  30DF               	rrcf	223,w,c
  2236   0018F0  32E8               	rrcf	wreg,f,c
  2237   0018F2  32E8               	rrcf	wreg,f,c
  2238   0018F4  0B07               	andlw	7
  2239   0018F6  6E38               	movwf	??_gpio_pin_initialize^0,c
  2240   0018F8  0E07               	movlw	7
  2241   0018FA  6438               	cpfsgt	??_gpio_pin_initialize^0,c
  2242   0018FC  EF82  F00C         	goto	u1071
  2243   001900  EF84  F00C         	goto	u1070
  2244   001904                     u1071:
  2245   001904  EF88  F00C         	goto	l2020
  2246   001908                     u1070:
  2247   001908                     l2018:
  2248                           
  2249                           ;MCAL_Layer/GPIO/hal_gpio.c: 137:     {;MCAL_Layer/GPIO/hal_gpio.c: 138:         ret = (
      +                          Std_ReturnType)0x00;
  2250   001908  0E00               	movlw	0
  2251   00190A  6E39               	movwf	gpio_pin_initialize@ret^0,c
  2252                           
  2253                           ;MCAL_Layer/GPIO/hal_gpio.c: 139:     }
  2254   00190C  EF94  F00C         	goto	l2022
  2255   001910                     l2020:
  2256                           
  2257                           ;MCAL_Layer/GPIO/hal_gpio.c: 141:     {;MCAL_Layer/GPIO/hal_gpio.c: 142:         ret = g
      +                          pio_pin_direction_initialize(_pin_config);
  2258   001910  C037  F02F         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  2259   001914  EC0E  F008         	call	_gpio_pin_direction_initialize	;wreg free
  2260   001918  6E39               	movwf	gpio_pin_initialize@ret^0,c
  2261                           
  2262                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:         ret = gpio_pin_write_logic(_pin_config, GPIO_L
      +                          OW);
  2263   00191A  C037  F02F         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  2264   00191E  0E00               	movlw	0
  2265   001920  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2266   001922  ECA1  F008         	call	_gpio_pin_write_logic	;wreg free
  2267   001926  6E39               	movwf	gpio_pin_initialize@ret^0,c
  2268   001928                     l2022:
  2269                           
  2270                           ;MCAL_Layer/GPIO/hal_gpio.c: 145:     return ret;
  2271   001928  5039               	movf	gpio_pin_initialize@ret^0,w,c
  2272   00192A  0012               	return		;funcret
  2273   00192C                     __end_of_gpio_pin_initialize:
  2274                           	callstack 0
  2275                           
  2276 ;; *************** function _gpio_pin_write_logic *****************
  2277 ;; Defined at:
  2278 ;;		line 78 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  _pin_config     1    0[COMRAM] PTR struct .
  2281 ;;		 -> lcd_2$lcd_data(8), lcd_2$lcd_en(1), lcd_2$lcd_rs(1), lcd_2(10), 
  2282 ;;		 -> lcd_1$lcd_data(4), lcd_1$lcd_en(1), lcd_1$lcd_rs(1), lcd_1(6), 
  2283 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), 
  2284 ;;		 -> led_initialize@pin_obj(1), 
  2285 ;;  logic           1    1[COMRAM] enum E2811
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  ret             1    7[COMRAM] unsigned char 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      unsigned char 
  2290 ;; Registers used:
  2291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;Total ram usage:        8 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; This function calls:
  2304 ;;		Nothing
  2305 ;; This function is called by:
  2306 ;;		_gpio_pin_initialize
  2307 ;;		_lcd_4bit_send_command
  2308 ;;		_lcd_4bit_send_char_data
  2309 ;;		_lcd_8bit_send_command
  2310 ;;		_lcd_8bit_send_char_data
  2311 ;;		_lcd_send_4bits
  2312 ;;		_lcd_4bit_send_enable_signal
  2313 ;;		_lcd_8bit_send_enable_signal
  2314 ;;		_seven_segment_write_number
  2315 ;;		_dc_motor_move_right
  2316 ;;		_dc_motor_move_left
  2317 ;;		_dc_motor_stop
  2318 ;;		_keypad_get_value
  2319 ;;		_led_turn_on
  2320 ;;		_led_turn_off
  2321 ;;		_relay_turn_on
  2322 ;;		_relay_turn_off
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text17
  2327   001142                     __ptext17:
  2328                           	callstack 0
  2329   001142                     _gpio_pin_write_logic:
  2330                           	callstack 26
  2331   001142                     
  2332                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  2333   001142  0E01               	movlw	1
  2334   001144  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  2335                           
  2336                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          (8 - 1))
  2337   001146  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2338   001148  B4D8               	btfsc	status,2,c
  2339   00114A  EFA9  F008         	goto	u931
  2340   00114E  EFAB  F008         	goto	u930
  2341   001152                     u931:
  2342   001152  EFBB  F008         	goto	l1940
  2343   001156                     u930:
  2344   001156  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2345   001158  6ED9               	movwf	fsr2l,c
  2346   00115A  6ADA               	clrf	fsr2h,c
  2347   00115C  30DF               	rrcf	223,w,c
  2348   00115E  32E8               	rrcf	wreg,f,c
  2349   001160  32E8               	rrcf	wreg,f,c
  2350   001162  0B07               	andlw	7
  2351   001164  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2352   001166  0E07               	movlw	7
  2353   001168  6431               	cpfsgt	??_gpio_pin_write_logic^0,c
  2354   00116A  EFB9  F008         	goto	u941
  2355   00116E  EFBB  F008         	goto	u940
  2356   001172                     u941:
  2357   001172  EF12  F009         	goto	l1948
  2358   001176                     u940:
  2359   001176                     l1940:
  2360                           
  2361                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:     {;MCAL_Layer/GPIO/hal_gpio.c: 82:         ret = (St
      +                          d_ReturnType)0x00;
  2362   001176  0E00               	movlw	0
  2363   001178  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  2364                           
  2365                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:     }
  2366   00117A  EF27  F009         	goto	l1950
  2367   00117E                     l1942:
  2368                           
  2369                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:                 (*lat_registers[_pin_config->port] &= ~
      +                          (((uint8)1) << _pin_config->pin));
  2370   00117E  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2371   001180  6ED9               	movwf	fsr2l,c
  2372   001182  6ADA               	clrf	fsr2h,c
  2373   001184  30DF               	rrcf	223,w,c
  2374   001186  32E8               	rrcf	wreg,f,c
  2375   001188  32E8               	rrcf	wreg,f,c
  2376   00118A  0B07               	andlw	7
  2377   00118C  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2378   00118E  0E01               	movlw	1
  2379   001190  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2380   001192  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  2381   001194  EFCE  F008         	goto	u954
  2382   001198                     u955:
  2383   001198  90D8               	bcf	status,0,c
  2384   00119A  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2385   00119C                     u954:
  2386   00119C  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  2387   00119E  EFCC  F008         	goto	u955
  2388   0011A2  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2389   0011A4  0AFF               	xorlw	255
  2390   0011A6  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2391   0011A8  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2392   0011AA  6ED9               	movwf	fsr2l,c
  2393   0011AC  6ADA               	clrf	fsr2h,c
  2394   0011AE  50DF               	movf	223,w,c
  2395   0011B0  0B07               	andlw	7
  2396   0011B2  0D02               	mullw	2
  2397   0011B4  50F3               	movf	243,w,c
  2398   0011B6  0F0B               	addlw	low _lat_registers
  2399   0011B8  6ED9               	movwf	fsr2l,c
  2400   0011BA  6ADA               	clrf	fsr2h,c
  2401   0011BC  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+3
  2402   0011C0  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+4
  2403   0011C4  C034  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2404   0011C8  C035  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2405   0011CC  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2406   0011CE  16DF               	andwf	indf2,f,c
  2407                           
  2408                           ;MCAL_Layer/GPIO/hal_gpio.c: 90:                 break;
  2409   0011D0  EF27  F009         	goto	l1950
  2410   0011D4                     l1944:
  2411                           
  2412                           ;MCAL_Layer/GPIO/hal_gpio.c: 92:                 (*lat_registers[_pin_config->port] |= (
      +                          ((uint8)1) << _pin_config->pin));
  2413   0011D4  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2414   0011D6  6ED9               	movwf	fsr2l,c
  2415   0011D8  6ADA               	clrf	fsr2h,c
  2416   0011DA  30DF               	rrcf	223,w,c
  2417   0011DC  32E8               	rrcf	wreg,f,c
  2418   0011DE  32E8               	rrcf	wreg,f,c
  2419   0011E0  0B07               	andlw	7
  2420   0011E2  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2421   0011E4  0E01               	movlw	1
  2422   0011E6  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2423   0011E8  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  2424   0011EA  EFF9  F008         	goto	u964
  2425   0011EE                     u965:
  2426   0011EE  90D8               	bcf	status,0,c
  2427   0011F0  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2428   0011F2                     u964:
  2429   0011F2  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  2430   0011F4  EFF7  F008         	goto	u965
  2431   0011F8  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2432   0011FA  6ED9               	movwf	fsr2l,c
  2433   0011FC  6ADA               	clrf	fsr2h,c
  2434   0011FE  50DF               	movf	223,w,c
  2435   001200  0B07               	andlw	7
  2436   001202  0D02               	mullw	2
  2437   001204  50F3               	movf	243,w,c
  2438   001206  0F0B               	addlw	low _lat_registers
  2439   001208  6ED9               	movwf	fsr2l,c
  2440   00120A  6ADA               	clrf	fsr2h,c
  2441   00120C  CFDE F033          	movff	postinc2,??_gpio_pin_write_logic+2
  2442   001210  CFDD F034          	movff	postdec2,??_gpio_pin_write_logic+3
  2443   001214  C033  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2444   001218  C034  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2445   00121C  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2446   00121E  12DF               	iorwf	indf2,f,c
  2447                           
  2448                           ;MCAL_Layer/GPIO/hal_gpio.c: 93:                 break;
  2449   001220  EF27  F009         	goto	l1950
  2450   001224                     l1948:
  2451   001224  5030               	movf	gpio_pin_write_logic@logic^0,w,c
  2452   001226  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2453   001228  6A32               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2454                           
  2455                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2456                           ; Switch size 1, requested type "simple"
  2457                           ; Number of cases is 1, Range of values is 0 to 0
  2458                           ; switch strategies available:
  2459                           ; Name         Instructions Cycles
  2460                           ; simple_byte            4     3 (average)
  2461                           ;	Chosen strategy is simple_byte
  2462   00122A  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2463   00122C  0A00               	xorlw	0	; case 0
  2464   00122E  B4D8               	btfsc	status,2,c
  2465   001230  EF1C  F009         	goto	l2614
  2466   001234  EFBB  F008         	goto	l1940
  2467   001238                     l2614:
  2468                           
  2469                           ; Switch size 1, requested type "simple"
  2470                           ; Number of cases is 2, Range of values is 0 to 1
  2471                           ; switch strategies available:
  2472                           ; Name         Instructions Cycles
  2473                           ; simple_byte            7     4 (average)
  2474                           ;	Chosen strategy is simple_byte
  2475   001238  5031               	movf	??_gpio_pin_write_logic^0,w,c
  2476   00123A  0A00               	xorlw	0	; case 0
  2477   00123C  B4D8               	btfsc	status,2,c
  2478   00123E  EFBF  F008         	goto	l1942
  2479   001242  0A01               	xorlw	1	; case 1
  2480   001244  B4D8               	btfsc	status,2,c
  2481   001246  EFEA  F008         	goto	l1944
  2482   00124A  EFBB  F008         	goto	l1940
  2483   00124E                     l1950:
  2484                           
  2485                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:     return ret;
  2486   00124E  5036               	movf	gpio_pin_write_logic@ret^0,w,c
  2487   001250  0012               	return		;funcret
  2488   001252                     __end_of_gpio_pin_write_logic:
  2489                           	callstack 0
  2490                           
  2491 ;; *************** function _gpio_pin_direction_initialize *****************
  2492 ;; Defined at:
  2493 ;;		line 22 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  _pin_config     1    0[COMRAM] PTR struct .
  2496 ;;		 -> lcd_2$lcd_data(8), lcd_2$lcd_en(1), lcd_2$lcd_rs(1), lcd_2(10), 
  2497 ;;		 -> lcd_1$lcd_data(4), lcd_1$lcd_en(1), lcd_1$lcd_rs(1), lcd_1(6), 
  2498 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  ret             1    6[COMRAM] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      unsigned char 
  2503 ;; Registers used:
  2504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2510 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;Total ram usage:        7 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_gpio_pin_initialize
  2520 ;;		_seven_segment_initialize
  2521 ;;		_button_initialize
  2522 ;;		_dc_motor_initialize
  2523 ;;		_keypad_initialize
  2524 ;;		_relay_initialize
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text18
  2529   00101C                     __ptext18:
  2530                           	callstack 0
  2531   00101C                     _gpio_pin_direction_initialize:
  2532                           	callstack 26
  2533   00101C                     
  2534                           ;MCAL_Layer/GPIO/hal_gpio.c: 22: Std_ReturnType gpio_pin_direction_initialize(pin_config
      +                          _t *_pin_config);MCAL_Layer/GPIO/hal_gpio.c: 23: {;MCAL_Layer/GPIO/hal_gpio.c: 24:     S
      +                          td_ReturnType ret = (Std_ReturnType)0x01 ;
  2535   00101C  0E01               	movlw	1
  2536   00101E  6E35               	movwf	gpio_pin_direction_initialize@ret^0,c
  2537                           
  2538                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          (8 - 1))
  2539   001020  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2540   001022  B4D8               	btfsc	status,2,c
  2541   001024  EF16  F008         	goto	u971
  2542   001028  EF18  F008         	goto	u970
  2543   00102C                     u971:
  2544   00102C  EF28  F008         	goto	l1962
  2545   001030                     u970:
  2546   001030  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2547   001032  6ED9               	movwf	fsr2l,c
  2548   001034  6ADA               	clrf	fsr2h,c
  2549   001036  30DF               	rrcf	223,w,c
  2550   001038  32E8               	rrcf	wreg,f,c
  2551   00103A  32E8               	rrcf	wreg,f,c
  2552   00103C  0B07               	andlw	7
  2553   00103E  6E30               	movwf	??_gpio_pin_direction_initialize^0,c
  2554   001040  0E07               	movlw	7
  2555   001042  6430               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  2556   001044  EF26  F008         	goto	u981
  2557   001048  EF28  F008         	goto	u980
  2558   00104C                     u981:
  2559   00104C  EF7F  F008         	goto	l1970
  2560   001050                     u980:
  2561   001050                     l1962:
  2562                           
  2563                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     {;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret = (St
      +                          d_ReturnType)0x00;
  2564   001050  0E00               	movlw	0
  2565   001052  6E35               	movwf	gpio_pin_direction_initialize@ret^0,c
  2566                           
  2567                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }
  2568   001054  EF9F  F008         	goto	l1972
  2569   001058                     l1964:
  2570                           
  2571                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 (*tris_registers[_pin_config->port] &= 
      +                          ~(((uint8)1) << _pin_config->pin));
  2572   001058  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2573   00105A  6ED9               	movwf	fsr2l,c
  2574   00105C  6ADA               	clrf	fsr2h,c
  2575   00105E  30DF               	rrcf	223,w,c
  2576   001060  32E8               	rrcf	wreg,f,c
  2577   001062  32E8               	rrcf	wreg,f,c
  2578   001064  0B07               	andlw	7
  2579   001066  6E30               	movwf	??_gpio_pin_direction_initialize^0,c
  2580   001068  0E01               	movlw	1
  2581   00106A  6E31               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  2582   00106C  2A30               	incf	??_gpio_pin_direction_initialize^0,f,c
  2583   00106E  EF3B  F008         	goto	u994
  2584   001072                     u995:
  2585   001072  90D8               	bcf	status,0,c
  2586   001074  3631               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  2587   001076                     u994:
  2588   001076  2E30               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  2589   001078  EF39  F008         	goto	u995
  2590   00107C  5031               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2591   00107E  0AFF               	xorlw	255
  2592   001080  6E32               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  2593   001082  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2594   001084  6ED9               	movwf	fsr2l,c
  2595   001086  6ADA               	clrf	fsr2h,c
  2596   001088  50DF               	movf	223,w,c
  2597   00108A  0B07               	andlw	7
  2598   00108C  0D02               	mullw	2
  2599   00108E  50F3               	movf	243,w,c
  2600   001090  0F15               	addlw	low _tris_registers
  2601   001092  6ED9               	movwf	fsr2l,c
  2602   001094  6ADA               	clrf	fsr2h,c
  2603   001096  CFDE F033          	movff	postinc2,??_gpio_pin_direction_initialize+3
  2604   00109A  CFDD F034          	movff	postdec2,??_gpio_pin_direction_initialize+4
  2605   00109E  C033  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  2606   0010A2  C034  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  2607   0010A6  5032               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  2608   0010A8  16DF               	andwf	indf2,f,c
  2609                           
  2610                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
  2611   0010AA  EF9F  F008         	goto	l1972
  2612   0010AE                     l1966:
  2613                           
  2614                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] |= 
      +                          (((uint8)1) << _pin_config->pin));
  2615   0010AE  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2616   0010B0  6ED9               	movwf	fsr2l,c
  2617   0010B2  6ADA               	clrf	fsr2h,c
  2618   0010B4  30DF               	rrcf	223,w,c
  2619   0010B6  32E8               	rrcf	wreg,f,c
  2620   0010B8  32E8               	rrcf	wreg,f,c
  2621   0010BA  0B07               	andlw	7
  2622   0010BC  6E30               	movwf	??_gpio_pin_direction_initialize^0,c
  2623   0010BE  0E01               	movlw	1
  2624   0010C0  6E31               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  2625   0010C2  2A30               	incf	??_gpio_pin_direction_initialize^0,f,c
  2626   0010C4  EF66  F008         	goto	u1004
  2627   0010C8                     u1005:
  2628   0010C8  90D8               	bcf	status,0,c
  2629   0010CA  3631               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  2630   0010CC                     u1004:
  2631   0010CC  2E30               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  2632   0010CE  EF64  F008         	goto	u1005
  2633   0010D2  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2634   0010D4  6ED9               	movwf	fsr2l,c
  2635   0010D6  6ADA               	clrf	fsr2h,c
  2636   0010D8  50DF               	movf	223,w,c
  2637   0010DA  0B07               	andlw	7
  2638   0010DC  0D02               	mullw	2
  2639   0010DE  50F3               	movf	243,w,c
  2640   0010E0  0F15               	addlw	low _tris_registers
  2641   0010E2  6ED9               	movwf	fsr2l,c
  2642   0010E4  6ADA               	clrf	fsr2h,c
  2643   0010E6  CFDE F032          	movff	postinc2,??_gpio_pin_direction_initialize+2
  2644   0010EA  CFDD F033          	movff	postdec2,??_gpio_pin_direction_initialize+3
  2645   0010EE  C032  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  2646   0010F2  C033  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  2647   0010F6  5031               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2648   0010F8  12DF               	iorwf	indf2,f,c
  2649                           
  2650                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 break;
  2651   0010FA  EF9F  F008         	goto	l1972
  2652   0010FE                     l1970:
  2653   0010FE  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2654   001100  6ED9               	movwf	fsr2l,c
  2655   001102  6ADA               	clrf	fsr2h,c
  2656   001104  BCDF               	btfsc	indf2,6,c
  2657   001106  EF87  F008         	goto	u1011
  2658   00110A  EF8A  F008         	goto	u1010
  2659   00110E                     u1011:
  2660   00110E  0E01               	movlw	1
  2661   001110  EF8B  F008         	goto	u1020
  2662   001114                     u1010:
  2663   001114  0E00               	movlw	0
  2664   001116                     u1020:
  2665   001116  6E30               	movwf	??_gpio_pin_direction_initialize^0,c
  2666   001118  6A31               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  2667                           
  2668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2669                           ; Switch size 1, requested type "simple"
  2670                           ; Number of cases is 1, Range of values is 0 to 0
  2671                           ; switch strategies available:
  2672                           ; Name         Instructions Cycles
  2673                           ; simple_byte            4     3 (average)
  2674                           ;	Chosen strategy is simple_byte
  2675   00111A  5031               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2676   00111C  0A00               	xorlw	0	; case 0
  2677   00111E  B4D8               	btfsc	status,2,c
  2678   001120  EF94  F008         	goto	l2616
  2679   001124  EF28  F008         	goto	l1962
  2680   001128                     l2616:
  2681                           
  2682                           ; Switch size 1, requested type "simple"
  2683                           ; Number of cases is 2, Range of values is 0 to 1
  2684                           ; switch strategies available:
  2685                           ; Name         Instructions Cycles
  2686                           ; simple_byte            7     4 (average)
  2687                           ;	Chosen strategy is simple_byte
  2688   001128  5030               	movf	??_gpio_pin_direction_initialize^0,w,c
  2689   00112A  0A00               	xorlw	0	; case 0
  2690   00112C  B4D8               	btfsc	status,2,c
  2691   00112E  EF2C  F008         	goto	l1964
  2692   001132  0A01               	xorlw	1	; case 1
  2693   001134  B4D8               	btfsc	status,2,c
  2694   001136  EF57  F008         	goto	l1966
  2695   00113A  EF28  F008         	goto	l1962
  2696   00113E                     l1972:
  2697                           
  2698                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:     return ret;
  2699   00113E  5035               	movf	gpio_pin_direction_initialize@ret^0,w,c
  2700   001140  0012               	return		;funcret
  2701   001142                     __end_of_gpio_pin_direction_initialize:
  2702                           	callstack 0
  2703                           
  2704                           	psect	rparam
  2705   000000                     
  2706                           	psect	config
  2707                           
  2708                           ; Padding undefined space
  2709   300000                     	org	3145728
  2710   300000  FF                 	db	255
  2711                           
  2712                           ;Config register CONFIG1H @ 0x300001
  2713                           ;	Oscillator Selection bits
  2714                           ;	OSC = HS, HS oscillator
  2715                           ;	Fail-Safe Clock Monitor Enable bit
  2716                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2717                           ;	Internal/External Oscillator Switchover bit
  2718                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2719   300001                     	org	3145729
  2720   300001  02                 	db	2
  2721                           
  2722                           ;Config register CONFIG2L @ 0x300002
  2723                           ;	Power-up Timer Enable bit
  2724                           ;	PWRT = OFF, PWRT disabled
  2725                           ;	Brown-out Reset Enable bits
  2726                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2727                           ;	Brown Out Reset Voltage bits
  2728                           ;	BORV = 1, 
  2729   300002                     	org	3145730
  2730   300002  09                 	db	9
  2731                           
  2732                           ;Config register CONFIG2H @ 0x300003
  2733                           ;	Watchdog Timer Enable bit
  2734                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2735                           ;	Watchdog Timer Postscale Select bits
  2736                           ;	WDTPS = 32768, 1:32768
  2737   300003                     	org	3145731
  2738   300003  1E                 	db	30
  2739                           
  2740                           ; Padding undefined space
  2741   300004                     	org	3145732
  2742   300004  FF                 	db	255
  2743                           
  2744                           ;Config register CONFIG3H @ 0x300005
  2745                           ;	CCP2 MUX bit
  2746                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2747                           ;	PORTB A/D Enable bit
  2748                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2749                           ;	Low-Power Timer1 Oscillator Enable bit
  2750                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2751                           ;	MCLR Pin Enable bit
  2752                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2753   300005                     	org	3145733
  2754   300005  81                 	db	129
  2755                           
  2756                           ;Config register CONFIG4L @ 0x300006
  2757                           ;	Stack Full/Underflow Reset Enable bit
  2758                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2759                           ;	Single-Supply ICSP Enable bit
  2760                           ;	LVP = OFF, Single-Supply ICSP disabled
  2761                           ;	Extended Instruction Set Enable bit
  2762                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2763                           ;	Background Debugger Enable bit
  2764                           ;	DEBUG = 0x1, unprogrammed default
  2765   300006                     	org	3145734
  2766   300006  81                 	db	129
  2767                           
  2768                           ; Padding undefined space
  2769   300007                     	org	3145735
  2770   300007  FF                 	db	255
  2771                           
  2772                           ;Config register CONFIG5L @ 0x300008
  2773                           ;	Code Protection bit
  2774                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2775                           ;	Code Protection bit
  2776                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2777                           ;	Code Protection bit
  2778                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2779                           ;	Code Protection bit
  2780                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2781   300008                     	org	3145736
  2782   300008  0F                 	db	15
  2783                           
  2784                           ;Config register CONFIG5H @ 0x300009
  2785                           ;	Boot Block Code Protection bit
  2786                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2787                           ;	Data EEPROM Code Protection bit
  2788                           ;	CPD = OFF, Data EEPROM not code-protected
  2789   300009                     	org	3145737
  2790   300009  C0                 	db	192
  2791                           
  2792                           ;Config register CONFIG6L @ 0x30000A
  2793                           ;	Write Protection bit
  2794                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2795                           ;	Write Protection bit
  2796                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2797                           ;	Write Protection bit
  2798                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2799                           ;	Write Protection bit
  2800                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2801   30000A                     	org	3145738
  2802   30000A  0F                 	db	15
  2803                           
  2804                           ;Config register CONFIG6H @ 0x30000B
  2805                           ;	Configuration Register Write Protection bit
  2806                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2807                           ;	Boot Block Write Protection bit
  2808                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2809                           ;	Data EEPROM Write Protection bit
  2810                           ;	WRTD = OFF, Data EEPROM not write-protected
  2811   30000B                     	org	3145739
  2812   30000B  E0                 	db	224
  2813                           
  2814                           ;Config register CONFIG7L @ 0x30000C
  2815                           ;	Table Read Protection bit
  2816                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2817                           ;	Table Read Protection bit
  2818                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2819                           ;	Table Read Protection bit
  2820                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2821                           ;	Table Read Protection bit
  2822                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2823   30000C                     	org	3145740
  2824   30000C  0F                 	db	15
  2825                           
  2826                           ;Config register CONFIG7H @ 0x30000D
  2827                           ;	Boot Block Table Read Protection bit
  2828                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2829   30000D                     	org	3145741
  2830   30000D  40                 	db	64
  2831                           tosu	equ	0xFFF
  2832                           tosh	equ	0xFFE
  2833                           tosl	equ	0xFFD
  2834                           stkptr	equ	0xFFC
  2835                           pclatu	equ	0xFFB
  2836                           pclath	equ	0xFFA
  2837                           pcl	equ	0xFF9
  2838                           tblptru	equ	0xFF8
  2839                           tblptrh	equ	0xFF7
  2840                           tblptrl	equ	0xFF6
  2841                           tablat	equ	0xFF5
  2842                           prodh	equ	0xFF4
  2843                           prodl	equ	0xFF3
  2844                           indf0	equ	0xFEF
  2845                           postinc0	equ	0xFEE
  2846                           postdec0	equ	0xFED
  2847                           preinc0	equ	0xFEC
  2848                           plusw0	equ	0xFEB
  2849                           fsr0h	equ	0xFEA
  2850                           fsr0l	equ	0xFE9
  2851                           wreg	equ	0xFE8
  2852                           indf1	equ	0xFE7
  2853                           postinc1	equ	0xFE6
  2854                           postdec1	equ	0xFE5
  2855                           preinc1	equ	0xFE4
  2856                           plusw1	equ	0xFE3
  2857                           fsr1h	equ	0xFE2
  2858                           fsr1l	equ	0xFE1
  2859                           bsr	equ	0xFE0
  2860                           indf2	equ	0xFDF
  2861                           postinc2	equ	0xFDE
  2862                           postdec2	equ	0xFDD
  2863                           preinc2	equ	0xFDC
  2864                           plusw2	equ	0xFDB
  2865                           fsr2h	equ	0xFDA
  2866                           fsr2l	equ	0xFD9
  2867                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    16
    Data        46
    BSS         7
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     27      81
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_initialize@_pin_config	PTR struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_1$lcd_en(COMRAM[1]), lcd_1$lcd_rs(COMRAM[1]), 
		 -> lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), lcd_2$lcd_en(COMRAM[1]), lcd_2$lcd_rs(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_1$lcd_en(COMRAM[1]), lcd_1$lcd_rs(COMRAM[1]), 
		 -> lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), lcd_2$lcd_en(COMRAM[1]), lcd_2$lcd_rs(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_1$lcd_en(COMRAM[1]), lcd_1$lcd_rs(COMRAM[1]), 
		 -> lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), lcd_2$lcd_en(COMRAM[1]), lcd_2$lcd_rs(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), 
		 -> relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 5
		 -> STR_5(CODE[5]), STR_6(CODE[5]), STR_7(CODE[4]), STR_8(CODE[4]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_2(CODE[5]), STR_3(CODE[4]), STR_4(CODE[4]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_8bit_send_string_pos
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _ecu_layer_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  105873
                           _app_init
           _lcd_4bit_send_string_pos
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             5     1      4   24791
                                             22 COMRAM     5     1      4
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  6     3      3   12684
                                             16 COMRAM     6     3      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data                              6     4      2   10710
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             5     1      4   36727
                                             20 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  6     3      3   18766
                                             14 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              3     1      2   16564
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0   44355
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   44355
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  4     3      1   19249
                                             16 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   12230
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          2     1      1    5135
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  4     3      1   25103
                                             14 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   18084
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       3     1      2    5725
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          2     1      1    5287
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  3     2      1    6552
                                              8 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4891
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     6      1     939
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bit_send_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1B      51       1       63.8%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      51      39        0.0%
DATA                 0      0      51       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Dec 11 11:21:56 2023

                         ?_lcd_send_4bits 0037                                       l215 1140  
                                     l234 1250                                       l420 174E  
                                     l412 17B6                                       l341 18D6  
                                     l309 1A1E                                       l167 1A18  
                                     l248 192A                                       l336 1408  
                                     l440 1966                                       l425 19A2  
                                     l346 187A                                       l450 155C  
                                     l435 15F4                                       l367 181E  
                                     l391 166A                                       l384 16E0  
                                     l377 132C                                       u930 1156  
                                     u931 1152                                       u940 1176  
                                     u941 1172                                       u970 1030  
                                     u954 119C                                       u971 102C  
                                     u955 1198                                       u980 1050  
                                     u964 11F2                                       u981 104C  
                                     u965 11EE                                       u994 1076  
                                     u995 1072                                       _ret 0051  
     __end_of_lcd_4bit_send_enable_signal 19A4               _lcd_4bit_send_enable_signal 1968  
                     led_initialize@F2891 0050                 ?_lcd_8bit_send_string_pos 0045  
                                     wreg 0FE8                     relay_initialize@F2885 004C  
             __end_of_lcd_8bit_set_cursor 155E               lcd_send_4bits@_data_command 0038  
                                    l2010 1964                                      l2002 192C  
                                    l2020 1910                                      l2100 1406  
                                    l2004 193C                                      l2022 1928  
                                    l2014 18D8                                      l2030 1894  
                                    l2006 1944                                      l2110 127E  
                                    l2016 18E8                                      l2032 18D4  
                                    l2008 1950                                      l2040 1688  
                                    l2120 1290                                      l2104 1252  
                                    l2200 164C                                      l2018 1908  
                                    l2026 187C                                      l2050 16C2  
                                    l2042 1694                                      l2130 12D4  
                                    l2122 12A0                                      l2106 1266  
                                    l2202 164E                                      l2210 14C6  
                                    l2028 188C                                      l2060 132E  
                                    l2052 16C4                                      l2036 166C  
                                    l2140 1310                                      l2132 12E0  
                                    l2124 12B0                                      l2116 1282  
                                    l2108 126A                                      l2204 165E  
                                    l2220 150C                                      l2212 14CA  
                                    l2062 1342                                      l2054 16D4  
                                    l2038 1680                                      l2142 131C  
                                    l2134 12EC                                      l2126 12BC  
                                    l2118 128E                                      l2150 1A08  
                                    l2206 1668                                      l2214 14D0  
                                    l2222 1520                                      l2080 138C  
                                    l2072 135E                                      l2064 1346  
                                    l2048 1698                                      l2056 16DE  
                                    l2144 132A                                      l2136 12F8  
                                    l2128 12C2                                      l2152 1A10  
                                    l2232 1A1A                                      l2160 1878  
                                    l2216 14E4                                      l2224 155A  
                                    l2240 177E                                      l2090 13C8  
                                    l2082 1398                                      l2074 136A  
                                    l2066 135A                                      l2138 1304  
                                    l2154 1820                                      l2170 157C  
                                    l2250 17B8                                      l2218 14F8  
                                    l2242 1796                                      l2234 1750  
                                    l2092 13D4                                      l2084 139E  
                                    l2076 136C                                      l2148 1A08  
                                    l2156 1830                                      l2172 1590  
                                    l2164 155E                                      l2260 1800  
                                    l2252 17C8                                      l2244 1798  
                                    l2236 1760                                      l2094 13E0  
                                    l2086 13B0                                      l2078 137C  
                                    l2158 1838                                      l2174 15A4  
                                    l2166 1562                                      l2262 181C  
                                    l2254 17D0                                      l2190 1612  
                                    l2246 17B4                                      l2238 1768  
                                    l2096 13EC                                      l2088 13BC  
                                    l2168 1568                                      l2176 15B8  
                                    l2256 17E6                                      l2192 161E  
                                    l2098 13F8                                      l2178 15F2  
                                    l2258 17FE                                      l2186 15F6  
                                    l2610 1534                                      l2612 15CC  
                                    l2188 160A                                      l2540 1450  
                                    l2532 140A                                      l2614 1238  
                                    l2198 1622                                      l2542 1466  
                                    l2534 140E                                      l2616 1128  
                                    l2544 147C                                      l2536 1424  
                                    l2546 1492                                      l2538 143A  
                                    l1940 1176                                      l2548 14A8  
                                    l1942 117E                                      l1950 124E  
                                    l1960 1030                                      l1944 11D4  
                                    l1936 1142                                      l1970 10FE  
                                    l1962 1050                                      l1938 1156  
                                    l1964 1058                                      l1972 113E  
                                    l1948 1224                                      l1980 16E2  
                                    l1966 10AE                                      l1958 101C  
                                    l1990 1968                                      l1982 16F2  
                                    l1992 1978                                      l1984 16FA  
                                    l1994 1980                                      l1986 174C  
                                    l1996 198C                                      l1998 19A0  
                                    STR_1 1011                                      STR_2 1011  
                                    STR_3 1016                                      STR_4 1016  
                                    STR_5 1011                                      STR_6 1011  
                                    STR_7 1016                                      STR_8 1016  
                                    u1010 1114                                      u1011 110E  
                                    u1020 1116                                      u1004 10CC  
                                    u1005 10C8                                      u1030 16F2  
                                    u1110 16D4                                      u1031 16EE  
                                    u1111 16D0                                      u1040 1978  
                                    u1120 1342                                      u1104 16B2  
                                    u1200 1760                                      u1041 1974  
                                    u1121 133E                                      u1105 16AE  
                                    u1201 175C                                      u1130 137C  
                                    u1050 193C                                      u1210 17B4  
                                    u1131 1378                                      u1051 1938  
                                    u1211 17B0                                      u1060 18E8  
                                    u1140 1266                                      u1220 17C8  
                                    u1061 18E4                                      u1141 1262  
                                    u1221 17C4                                      u1070 1908  
                                    u1150 12A0                                      u1230 181C  
                                    u1071 1904                                      u1151 129C  
                                    u1231 1818                                      u1080 188C  
                                    u1160 1830                                      u1081 1888  
                                    u1161 182C                                      u1090 1680  
                                    u1170 160A                                      u1091 167C  
                                    u1171 1606                                      _LATA 0F89  
                                    u1190 165E                                      _LATB 0F8A  
                                    u1191 165A                                      _LATC 0F8B  
                                    u1184 163C                                      _LATD 0F8C  
                                    u1185 1638                                      _LATE 0F8D  
                                    u1607 12D0                                      u1617 1382  
                                    u1627 13AC                                      u1597 12A6  
           ??_lcd_4bit_send_enable_signal 0038                                      _main 140A  
                                    fsr2h 0FDA                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    prodl 0FF3                                      start 0000  
           __end_of_lcd_8bit_send_command 16E2                              ___param_bank 0000  
                   _lcd_4bit_send_command 187C                      _gpio_pin_write_logic 1142  
          lcd_4bit_send_string_pos@column 0045                                     ?_main 002F  
                     relay_turn_off@F2895 004A                                     _PORTA 0F80  
                                   _PORTB 0F81                                     _PORTC 0F82  
                                   _PORTD 0F83                                     _PORTE 0F84  
                                   _TRISA 0F92                                     _TRISB 0F93  
                                   _TRISC 0F94                                     _TRISD 0F95  
                                   _TRISE 0F96                 lcd_4bit_set_cursor@column 003F  
                                   _lcd_1 0029                                     _lcd_2 001F  
                ?_lcd_8bit_send_char_data 0039                                     tablat 0FF5  
                                   status 0FD8            ?_gpio_pin_direction_initialize 002F  
                         __initialization 19A4                              __end_of_main 14C6  
                   ?_gpio_pin_write_logic 002F                    lcd_8bit_set_cursor@lcd 003F  
                  lcd_8bit_set_cursor@ret 0044                    lcd_8bit_set_cursor@row 0040  
                           _lat_registers 000B                                    ??_main 004A  
                           __activetblptr 0002                          led_turn_on@F2896 004F  
        __end_of_lcd_4bit_send_string_pos 1820                          __end_of_app_init 1A20  
                  ?_lcd_4bit_send_command 003A                                    clear_0 19CA  
                                  isa$std 0001               lcd_8bit_send_string_pos@lcd 0045  
             lcd_8bit_send_string_pos@ret 0049               lcd_8bit_send_string_pos@row 0046  
             lcd_8bit_send_string_pos@str 0048                              __pdataCOMRAM 0001  
                            __mediumconst 0000                                    tblptrh 0FF7  
                                  tblptrl 0FF6                                    tblptru 0FF8  
                              __accesstop 0080                   __end_of__initialization 19D0  
                           ___rparam_used 0001                          ??_lcd_send_4bits 0039  
                 _lcd_4bit_send_char_data 1820                    ??_gpio_pin_write_logic 0031  
                          __pcstackCOMRAM 002F                  lcd_4bit_send_command@lcd 003A  
                lcd_4bit_send_command@ret 003C  gpio_pin_direction_initialize@_pin_config 002F  
                              __pnvCOMRAM 0051                    lcd_8bit_initialize@lcd 003F  
                  lcd_8bit_initialize@ret 0042                         led_turn_off@F2901 004E  
               ?_lcd_4bit_send_string_pos 0043                      led_turn_toggle@F2906 004D  
     __end_of_lcd_8bit_send_enable_signal 1968               _lcd_8bit_send_enable_signal 192C  
                               ?_app_init 002F                                _btn_values 1001  
          lcd_8bit_send_enable_signal@lcd 0037            lcd_8bit_send_enable_signal@ret 0038  
                          _tris_registers 0015                 ??_lcd_4bit_send_char_data 003C  
           ??_lcd_8bit_send_enable_signal 0038    lcd_8bit_initialize@l_data_pins_counter 0041  
  lcd_4bit_initialize@l_data_pins_counter 003F                                   __Hparam 0000  
                                 __Lparam 0000                       _gpio_pin_initialize 18D8  
                   _lcd_8bit_send_command 166C                              __psmallconst 1000  
                                 __pcinit 19A4                                   __ramtop 1000  
                _lcd_8bit_send_string_pos 1750                                   __ptext0 140A  
                                 __ptext1 1750                                   __ptext2 14C6  
                                 __ptext3 15F6                                   __ptext4 17B8  
                                 __ptext5 155E                                   __ptext6 1820  
                                 __ptext7 1A1A                                   __ptext8 1A08  
                                 __ptext9 1252           ??_gpio_pin_direction_initialize 0030  
                    ?_gpio_pin_initialize 0037                                ??_app_init 0043  
                    end_of_initialization 19D0                         lcd_send_4bits@lcd 0037  
                       lcd_send_4bits@ret 0039                             __Lmediumconst 0000  
                 ??_lcd_4bit_send_command 003C                                   postdec1 0FE5  
                                 postdec2 0FDD                                   postinc0 0FEE  
                                 postinc2 0FDE                       _lcd_4bit_initialize 132E  
         __end_of_lcd_4bit_send_char_data 187C                lcd_4bit_send_char_data@lcd 003A  
              lcd_4bit_send_char_data@ret 003C                     ??_gpio_pin_initialize 0038  
                    ?_lcd_4bit_initialize 003D                       _lcd_4bit_set_cursor 155E  
                  ?_lcd_8bit_send_command 0039                        relay_turn_on@F2890 004B  
             lcd_4bit_send_string_pos@lcd 0043               lcd_4bit_send_string_pos@ret 0047  
             lcd_4bit_send_string_pos@row 0044               lcd_4bit_send_string_pos@str 0046  
          lcd_8bit_send_string_pos@column 0047                             __pidataCOMRAM 19DA  
                     start_initialization 19A4              ?_lcd_4bit_send_enable_signal 0037  
                    ?_lcd_4bit_set_cursor 003D                       _lcd_8bit_initialize 1252  
   __end_of_gpio_pin_direction_initialize 1142             _gpio_pin_direction_initialize 101C  
                   ??_lcd_4bit_initialize 003E                      ?_lcd_8bit_initialize 003F  
                 _lcd_8bit_send_char_data 15F6              __end_of_ecu_layer_initialize 1A1A  
                     _lcd_8bit_set_cursor 14C6              lcd_4bit_send_command@command 003B  
                lcd_8bit_send_command@lcd 0039                  lcd_8bit_send_command@cnt 003E  
                lcd_8bit_send_command@ret 003D                               __pbssCOMRAM 004A  
                   ??_lcd_4bit_set_cursor 0040                      ?_lcd_8bit_set_cursor 003F  
                   ??_lcd_8bit_initialize 0040                ??_lcd_8bit_send_string_pos 0049  
             lcd_8bit_send_char_data@data 003A           gpio_pin_write_logic@_pin_config 002F  
               gpio_pin_write_logic@logic 0030                               __smallconst 1000  
                   ??_lcd_8bit_set_cursor 0042                 ??_lcd_8bit_send_char_data 003B  
           __end_of_lcd_4bit_send_command 18D8          gpio_pin_direction_initialize@ret 0035  
                _lcd_4bit_send_string_pos 17B8                    gpio_pin_initialize@ret 0039  
               lcd_8bit_set_cursor@column 0041                   gpio_pin_write_logic@ret 0036  
                ?_lcd_4bit_send_char_data 003A                                 copy_data0 19B8  
                    _ecu_layer_initialize 1A08                   ??_lcd_8bit_send_command 003B  
                                __Hrparam 0000                                  __Lrparam 0000  
                  lcd_4bit_set_cursor@lcd 003D                    lcd_4bit_set_cursor@ret 0042  
                  lcd_4bit_set_cursor@row 003E           __end_of_lcd_8bit_send_char_data 166C  
             __end_of_gpio_pin_initialize 192C                        __end_of_btn_values 1011  
          gpio_pin_initialize@_pin_config 0037                lcd_8bit_send_char_data@lcd 0039  
              lcd_8bit_send_char_data@cnt 003E                lcd_8bit_send_char_data@ret 003D  
                                __ptext10 166C                                  __ptext11 192C  
                                __ptext12 132E                                  __ptext13 187C  
                                __ptext14 16E2                                  __ptext15 1968  
                                __ptext16 18D8                                  __ptext17 1142  
                                __ptext18 101C                                  _app_init 1A1A  
                   ?_ecu_layer_initialize 002F          __end_of_lcd_8bit_send_string_pos 17B8  
                                isa$xinst 0000                            _lcd_send_4bits 16E2  
             __end_of_lcd_4bit_initialize 140A              __end_of_gpio_pin_write_logic 1252  
            ?_lcd_8bit_send_enable_signal 0037            lcd_4bit_send_enable_signal@lcd 0037  
          lcd_4bit_send_enable_signal@ret 0038                    __end_of_lcd_send_4bits 1750  
             __end_of_lcd_4bit_set_cursor 15F6                            _port_registers 0001  
                  ??_ecu_layer_initialize 0043               __end_of_lcd_8bit_initialize 132E  
            lcd_8bit_send_command@command 003A               lcd_4bit_send_char_data@data 003B  
              ??_lcd_4bit_send_string_pos 0047                    lcd_4bit_initialize@lcd 003D  
                  lcd_4bit_initialize@ret 0040  
