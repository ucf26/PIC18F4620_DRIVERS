

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Nov 20 22:10:49 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 23/03/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4620 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   001372                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _port_registers
    63   001372  80                 	db	128
    64   001373  0F                 	db	15
    65   001374  81                 	db	129
    66   001375  0F                 	db	15
    67   001376  82                 	db	130
    68   001377  0F                 	db	15
    69   001378  83                 	db	131
    70   001379  0F                 	db	15
    71   00137A  84                 	db	132
    72   00137B  0F                 	db	15
    73                           
    74                           ;initializer for _lat_registers
    75   00137C  89                 	db	137
    76   00137D  0F                 	db	15
    77   00137E  8A                 	db	138
    78   00137F  0F                 	db	15
    79   001380  8B                 	db	139
    80   001381  0F                 	db	15
    81   001382  8C                 	db	140
    82   001383  0F                 	db	15
    83   001384  8D                 	db	141
    84   001385  0F                 	db	15
    85                           
    86                           ;initializer for _tris_registers
    87   001386  92                 	db	146
    88   001387  0F                 	db	15
    89   001388  93                 	db	147
    90   001389  0F                 	db	15
    91   00138A  94                 	db	148
    92   00138B  0F                 	db	15
    93   00138C  95                 	db	149
    94   00138D  0F                 	db	15
    95   00138E  96                 	db	150
    96   00138F  0F                 	db	15
    97                           
    98                           ;initializer for _mot2
    99   001390  92                 	db	146
   100   001391  9A                 	db	154
   101                           
   102                           ;initializer for _mot1
   103   001392  82                 	db	130
   104   001393  8A                 	db	138
   105                           
   106                           	psect	nvCOMRAM
   107   000036                     __pnvCOMRAM:
   108                           	callstack 0
   109   000036                     _ret:
   110                           	callstack 0
   111   000036                     	ds	1
   112   000000                     _PORTE	set	3972
   113   000000                     _PORTD	set	3971
   114   000000                     _PORTC	set	3970
   115   000000                     _PORTB	set	3969
   116   000000                     _PORTA	set	3968
   117   000000                     _LATA	set	3977
   118   000000                     _TRISA	set	3986
   119   000000                     _TRISE	set	3990
   120   000000                     _TRISD	set	3989
   121   000000                     _TRISC	set	3988
   122   000000                     _TRISB	set	3987
   123   000000                     _LATE	set	3981
   124   000000                     _LATD	set	3980
   125   000000                     _LATC	set	3979
   126   000000                     _LATB	set	3978
   127                           
   128                           ; #config settings
   129                           
   130                           	psect	cinit
   131   00130C                     __pcinit:
   132                           	callstack 0
   133   00130C                     start_initialization:
   134                           	callstack 0
   135   00130C                     __initialization:
   136                           	callstack 0
   137                           
   138                           ; Initialize objects allocated to COMRAM (34 bytes)
   139                           ; load TBLPTR registers with __pidataCOMRAM
   140   00130C  0E72               	movlw	low __pidataCOMRAM
   141   00130E  6EF6               	movwf	tblptrl,c
   142   001310  0E13               	movlw	high __pidataCOMRAM
   143   001312  6EF7               	movwf	tblptrh,c
   144   001314  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   145   001316  6EF8               	movwf	tblptru,c
   146   001318  EE00  F001         	lfsr	0,__pdataCOMRAM
   147   00131C  EE10 F022          	lfsr	1,34
   148   001320                     copy_data0:
   149   001320  0009               	tblrd		*+
   150   001322  CFF5 FFEE          	movff	tablat,postinc0
   151   001326  50E5               	movf	postdec1,w,c
   152   001328  50E1               	movf	fsr1l,w,c
   153   00132A  E1FA               	bnz	copy_data0
   154                           
   155                           ; Clear objects allocated to COMRAM (7 bytes)
   156   00132C  EE00  F02F         	lfsr	0,__pbssCOMRAM
   157   001330  0E07               	movlw	7
   158   001332                     clear_0:
   159   001332  6AEE               	clrf	postinc0,c
   160   001334  06E8               	decf	wreg,f,c
   161   001336  E1FD               	bnz	clear_0
   162   001338                     end_of_initialization:
   163                           	callstack 0
   164   001338                     __end_of__initialization:
   165                           	callstack 0
   166   001338  0E00               	movlw	low (__Lmediumconst shr (0+16))
   167   00133A  6EF8               	movwf	tblptru,c
   168   00133C  0100               	movlb	0
   169   00133E  EF1C  F009         	goto	_main	;jump to C main() function
   170                           
   171                           	psect	bssCOMRAM
   172   00002F                     __pbssCOMRAM:
   173                           	callstack 0
   174   00002F                     relay_turn_off@F2895:
   175                           	callstack 0
   176   00002F                     	ds	1
   177   000030                     relay_turn_on@F2890:
   178                           	callstack 0
   179   000030                     	ds	1
   180   000031                     relay_initialize@F2885:
   181                           	callstack 0
   182   000031                     	ds	1
   183   000032                     led_turn_toggle@F2906:
   184                           	callstack 0
   185   000032                     	ds	1
   186   000033                     led_turn_off@F2901:
   187                           	callstack 0
   188   000033                     	ds	1
   189   000034                     led_turn_on@F2896:
   190                           	callstack 0
   191   000034                     	ds	1
   192   000035                     led_initialize@F2891:
   193                           	callstack 0
   194   000035                     	ds	1
   195                           
   196                           	psect	dataCOMRAM
   197   000001                     __pdataCOMRAM:
   198                           	callstack 0
   199   000001                     _port_registers:
   200                           	callstack 0
   201   000001                     	ds	10
   202   00000B                     _lat_registers:
   203                           	callstack 0
   204   00000B                     	ds	10
   205   000015                     _tris_registers:
   206                           	callstack 0
   207   000015                     	ds	10
   208   00001F                     _mot2:
   209                           	callstack 0
   210   00001F                     	ds	2
   211   000021                     _mot1:
   212                           	callstack 0
   213   000021                     	ds	2
   214                           
   215                           	psect	cstackCOMRAM
   216   000023                     __pcstackCOMRAM:
   217                           	callstack 0
   218   000023                     gpio_pin_direction_initialize@_pin_config:
   219                           	callstack 0
   220   000023                     gpio_pin_write_logic@_pin_config:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0x0
   224   000023                     	ds	1
   225   000024                     ??_gpio_pin_direction_initialize:
   226   000024                     gpio_pin_write_logic@logic:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x1
   230   000024                     	ds	1
   231   000025                     ??_gpio_pin_write_logic:
   232                           
   233                           ; 1 bytes @ 0x2
   234   000025                     	ds	4
   235   000029                     gpio_pin_direction_initialize@ret:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x6
   239   000029                     	ds	1
   240   00002A                     gpio_pin_write_logic@ret:
   241                           	callstack 0
   242   00002A                     dc_motor_initialize@_dc_motor:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x7
   246   00002A                     	ds	1
   247   00002B                     dc_motor_initialize@ret:
   248                           	callstack 0
   249   00002B                     dc_motor_move_right@_dc_motor:
   250                           	callstack 0
   251   00002B                     dc_motor_move_left@_dc_motor:
   252                           	callstack 0
   253                           
   254                           ; 1 bytes @ 0x8
   255   00002B                     	ds	1
   256   00002C                     dc_motor_move_right@ret:
   257                           	callstack 0
   258   00002C                     dc_motor_move_left@ret:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x9
   262   00002C                     	ds	1
   263   00002D                     ??_main:
   264                           
   265                           ; 1 bytes @ 0xA
   266   00002D                     	ds	2
   267                           
   268 ;;
   269 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   270 ;;
   271 ;; *************** function _main *****************
   272 ;; Defined at:
   273 ;;		line 28 in file "appplication.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  2  220[None  ] int 
   280 ;; Registers used:
   281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   289 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   291 ;;Total ram usage:        2 bytes
   292 ;; Hardware stack levels required when called: 3
   293 ;; This function calls:
   294 ;;		_app_init
   295 ;;		_dc_motor_move_left
   296 ;;		_dc_motor_move_right
   297 ;; This function is called by:
   298 ;;		Startup code after reset
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302                           	psect	text0
   303   001238                     __ptext0:
   304                           	callstack 0
   305   001238                     _main:
   306                           	callstack 28
   307   001238                     
   308                           ;appplication.c: 30:     app_init();
   309   001238  ECCA  F009         	call	_app_init	;wreg free
   310   00123C                     l221:
   311                           
   312                           ;appplication.c: 33:     {;appplication.c: 36:         ret = dc_motor_move_right(&mot2);
   313   00123C  0E1F               	movlw	low _mot2
   314   00123E  6E2B               	movwf	dc_motor_move_right@_dc_motor^0,c
   315   001240  EC4E  F009         	call	_dc_motor_move_right	;wreg free
   316   001244  6E36               	movwf	_ret^0,c
   317                           
   318                           ;appplication.c: 37:         ret = dc_motor_move_right(&mot1);
   319   001246  0E21               	movlw	low _mot1
   320   001248  6E2B               	movwf	dc_motor_move_right@_dc_motor^0,c
   321   00124A  EC4E  F009         	call	_dc_motor_move_right	;wreg free
   322   00124E  6E36               	movwf	_ret^0,c
   323   001250                     
   324                           ;appplication.c: 39:         _delay((unsigned long)((3000)*(8000000UL/4000.0)));
   325   001250  0E1F               	movlw	31
   326   001252  6E2E               	movwf	(??_main+1)^0,c
   327   001254  0E71               	movlw	113
   328   001256  6E2D               	movwf	??_main^0,c
   329   001258  0E1E               	movlw	30
   330   00125A                     u857:
   331   00125A  2EE8               	decfsz	wreg,f,c
   332   00125C  D7FE               	bra	u857
   333   00125E  2E2D               	decfsz	??_main^0,f,c
   334   001260  D7FC               	bra	u857
   335   001262  2E2E               	decfsz	(??_main+1)^0,f,c
   336   001264  D7FA               	bra	u857
   337   001266  D000               	nop2	
   338   001268                     
   339                           ;appplication.c: 40:         ret = dc_motor_move_left(&mot1);
   340   001268  0E21               	movlw	low _mot1
   341   00126A  6E2B               	movwf	dc_motor_move_left@_dc_motor^0,c
   342   00126C  EC6A  F009         	call	_dc_motor_move_left	;wreg free
   343   001270  6E36               	movwf	_ret^0,c
   344   001272                     
   345                           ;appplication.c: 41:         ret = dc_motor_move_left(&mot2);
   346   001272  0E1F               	movlw	low _mot2
   347   001274  6E2B               	movwf	dc_motor_move_left@_dc_motor^0,c
   348   001276  EC6A  F009         	call	_dc_motor_move_left	;wreg free
   349   00127A  6E36               	movwf	_ret^0,c
   350   00127C                     
   351                           ;appplication.c: 42:         _delay((unsigned long)((3000)*(8000000UL/4000.0)));
   352   00127C  0E1F               	movlw	31
   353   00127E  6E2E               	movwf	(??_main+1)^0,c
   354   001280  0E71               	movlw	113
   355   001282  6E2D               	movwf	??_main^0,c
   356   001284  0E1E               	movlw	30
   357   001286                     u867:
   358   001286  2EE8               	decfsz	wreg,f,c
   359   001288  D7FE               	bra	u867
   360   00128A  2E2D               	decfsz	??_main^0,f,c
   361   00128C  D7FC               	bra	u867
   362   00128E  2E2E               	decfsz	(??_main+1)^0,f,c
   363   001290  D7FA               	bra	u867
   364   001292  D000               	nop2	
   365   001294  EF1E  F009         	goto	l221
   366   001298  EF00  F000         	goto	start
   367   00129C                     __end_of_main:
   368                           	callstack 0
   369                           
   370 ;; *************** function _dc_motor_move_right *****************
   371 ;; Defined at:
   372 ;;		line 38 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   375 ;;		 -> mot2(2), mot1(2), 
   376 ;; Auto vars:     Size  Location     Type
   377 ;;  ret             1    9[COMRAM] unsigned char 
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      unsigned char 
   380 ;; Registers used:
   381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   387 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   390 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   391 ;;Total ram usage:        2 bytes
   392 ;; Hardware stack levels used: 1
   393 ;; Hardware stack levels required when called: 1
   394 ;; This function calls:
   395 ;;		_gpio_pin_write_logic
   396 ;; This function is called by:
   397 ;;		_main
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           	psect	text1
   402   00129C                     __ptext1:
   403                           	callstack 0
   404   00129C                     _dc_motor_move_right:
   405                           	callstack 29
   406   00129C                     
   407                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 40:     if(((void*)0) == _dc_motor)
   408   00129C  502B               	movf	dc_motor_move_right@_dc_motor^0,w,c
   409   00129E  A4D8               	btfss	status,2,c
   410   0012A0  EF54  F009         	goto	u671
   411   0012A4  EF56  F009         	goto	u670
   412   0012A8                     u671:
   413   0012A8  EF5A  F009         	goto	l1369
   414   0012AC                     u670:
   415   0012AC                     
   416                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 41:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 42:    
      +                               ret = (Std_ReturnType)0x00;
   417   0012AC  0E00               	movlw	0
   418   0012AE  6E2C               	movwf	dc_motor_move_right@ret^0,c
   419                           
   420                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 43:     }
   421   0012B0  EF68  F009         	goto	l1371
   422   0012B4                     l1369:
   423                           
   424                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 45:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 46:    
      +                               ret = gpio_pin_write_logic(&(_dc_motor->dc_motor_pin[0x00U]), GPIO_HIGH);
   425   0012B4  C02B  F023         	movff	dc_motor_move_right@_dc_motor,gpio_pin_write_logic@_pin_config
   426   0012B8  0E01               	movlw	1
   427   0012BA  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   428   0012BC  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   429   0012C0  6E2C               	movwf	dc_motor_move_right@ret^0,c
   430                           
   431                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 47:         ret = gpio_pin_write_logic(&(_dc_motor->
      +                          dc_motor_pin[0x01U]), GPIO_LOW);
   432   0012C2  282B               	incf	dc_motor_move_right@_dc_motor^0,w,c
   433   0012C4  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   434   0012C6  0E00               	movlw	0
   435   0012C8  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   436   0012CA  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   437   0012CE  6E2C               	movwf	dc_motor_move_right@ret^0,c
   438   0012D0                     l1371:
   439                           
   440                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 49:     return ret;
   441   0012D0  502C               	movf	dc_motor_move_right@ret^0,w,c
   442   0012D2  0012               	return		;funcret
   443   0012D4                     __end_of_dc_motor_move_right:
   444                           	callstack 0
   445                           
   446 ;; *************** function _dc_motor_move_left *****************
   447 ;; Defined at:
   448 ;;		line 59 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   451 ;;		 -> mot2(2), mot1(2), 
   452 ;; Auto vars:     Size  Location     Type
   453 ;;  ret             1    9[COMRAM] unsigned char 
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      unsigned char 
   456 ;; Registers used:
   457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   463 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   464 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   467 ;;Total ram usage:        2 bytes
   468 ;; Hardware stack levels used: 1
   469 ;; Hardware stack levels required when called: 1
   470 ;; This function calls:
   471 ;;		_gpio_pin_write_logic
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	text2
   478   0012D4                     __ptext2:
   479                           	callstack 0
   480   0012D4                     _dc_motor_move_left:
   481                           	callstack 29
   482   0012D4                     
   483                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 61:     if(((void*)0) == _dc_motor)
   484   0012D4  502B               	movf	dc_motor_move_left@_dc_motor^0,w,c
   485   0012D6  A4D8               	btfss	status,2,c
   486   0012D8  EF70  F009         	goto	u681
   487   0012DC  EF72  F009         	goto	u680
   488   0012E0                     u681:
   489   0012E0  EF76  F009         	goto	l1379
   490   0012E4                     u680:
   491   0012E4                     
   492                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 62:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 63:    
      +                               ret = (Std_ReturnType)0x00;
   493   0012E4  0E00               	movlw	0
   494   0012E6  6E2C               	movwf	dc_motor_move_left@ret^0,c
   495                           
   496                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 64:     }
   497   0012E8  EF84  F009         	goto	l1381
   498   0012EC                     l1379:
   499                           
   500                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 66:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 67:    
      +                               ret = gpio_pin_write_logic(&(_dc_motor->dc_motor_pin[0x00U]), GPIO_LOW);
   501   0012EC  C02B  F023         	movff	dc_motor_move_left@_dc_motor,gpio_pin_write_logic@_pin_config
   502   0012F0  0E00               	movlw	0
   503   0012F2  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   504   0012F4  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   505   0012F8  6E2C               	movwf	dc_motor_move_left@ret^0,c
   506                           
   507                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 68:         ret = gpio_pin_write_logic(&(_dc_motor->
      +                          dc_motor_pin[0x01U]), GPIO_HIGH);
   508   0012FA  282B               	incf	dc_motor_move_left@_dc_motor^0,w,c
   509   0012FC  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   510   0012FE  0E01               	movlw	1
   511   001300  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   512   001302  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   513   001306  6E2C               	movwf	dc_motor_move_left@ret^0,c
   514   001308                     l1381:
   515                           
   516                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 70:     return ret;
   517   001308  502C               	movf	dc_motor_move_left@ret^0,w,c
   518   00130A  0012               	return		;funcret
   519   00130C                     __end_of_dc_motor_move_left:
   520                           	callstack 0
   521                           
   522 ;; *************** function _gpio_pin_write_logic *****************
   523 ;; Defined at:
   524 ;;		line 78 in file "MCAL_Layer/GPIO/hal_gpio.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;  _pin_config     1    0[COMRAM] PTR struct .
   527 ;;		 -> mot2$dc_motor_pin(2), mot2(2), mot1$dc_motor_pin(2), mot1(2), 
   528 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), 
   529 ;;		 -> led_initialize@pin_obj(1), 
   530 ;;  logic           1    1[COMRAM] enum E2811
   531 ;; Auto vars:     Size  Location     Type
   532 ;;  ret             1    7[COMRAM] unsigned char 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      unsigned char 
   535 ;; Registers used:
   536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   542 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;Total ram usage:        8 bytes
   547 ;; Hardware stack levels used: 1
   548 ;; This function calls:
   549 ;;		Nothing
   550 ;; This function is called by:
   551 ;;		_dc_motor_move_right
   552 ;;		_dc_motor_move_left
   553 ;;		_led_turn_on
   554 ;;		_led_turn_off
   555 ;;		_relay_turn_on
   556 ;;		_relay_turn_off
   557 ;;		_gpio_pin_initialize
   558 ;;		_dc_motor_stop
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text3
   563   001128                     __ptext3:
   564                           	callstack 0
   565   001128                     _gpio_pin_write_logic:
   566                           	callstack 29
   567   001128                     
   568                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
   569   001128  0E01               	movlw	1
   570   00112A  6E2A               	movwf	gpio_pin_write_logic@ret^0,c
   571                           
   572                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          (8 - 1))
   573   00112C  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   574   00112E  B4D8               	btfsc	status,2,c
   575   001130  EF9C  F008         	goto	u621
   576   001134  EF9E  F008         	goto	u620
   577   001138                     u621:
   578   001138  EFAE  F008         	goto	l1331
   579   00113C                     u620:
   580   00113C  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   581   00113E  6ED9               	movwf	fsr2l,c
   582   001140  6ADA               	clrf	fsr2h,c
   583   001142  30DF               	rrcf	223,w,c
   584   001144  32E8               	rrcf	wreg,f,c
   585   001146  32E8               	rrcf	wreg,f,c
   586   001148  0B07               	andlw	7
   587   00114A  6E25               	movwf	??_gpio_pin_write_logic^0,c
   588   00114C  0E07               	movlw	7
   589   00114E  6425               	cpfsgt	??_gpio_pin_write_logic^0,c
   590   001150  EFAC  F008         	goto	u631
   591   001154  EFAE  F008         	goto	u630
   592   001158                     u631:
   593   001158  EF05  F009         	goto	l1339
   594   00115C                     u630:
   595   00115C                     l1331:
   596                           
   597                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:     {;MCAL_Layer/GPIO/hal_gpio.c: 82:         ret = (St
      +                          d_ReturnType)0x00;
   598   00115C  0E00               	movlw	0
   599   00115E  6E2A               	movwf	gpio_pin_write_logic@ret^0,c
   600                           
   601                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:     }
   602   001160  EF1A  F009         	goto	l1341
   603   001164                     l1333:
   604                           
   605                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:                 (*lat_registers[_pin_config->port] &= ~
      +                          (((uint8)1) << _pin_config->pin));
   606   001164  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   607   001166  6ED9               	movwf	fsr2l,c
   608   001168  6ADA               	clrf	fsr2h,c
   609   00116A  30DF               	rrcf	223,w,c
   610   00116C  32E8               	rrcf	wreg,f,c
   611   00116E  32E8               	rrcf	wreg,f,c
   612   001170  0B07               	andlw	7
   613   001172  6E25               	movwf	??_gpio_pin_write_logic^0,c
   614   001174  0E01               	movlw	1
   615   001176  6E26               	movwf	(??_gpio_pin_write_logic+1)^0,c
   616   001178  2A25               	incf	??_gpio_pin_write_logic^0,f,c
   617   00117A  EFC1  F008         	goto	u644
   618   00117E                     u645:
   619   00117E  90D8               	bcf	status,0,c
   620   001180  3626               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   621   001182                     u644:
   622   001182  2E25               	decfsz	??_gpio_pin_write_logic^0,f,c
   623   001184  EFBF  F008         	goto	u645
   624   001188  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   625   00118A  0AFF               	xorlw	255
   626   00118C  6E27               	movwf	(??_gpio_pin_write_logic+2)^0,c
   627   00118E  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   628   001190  6ED9               	movwf	fsr2l,c
   629   001192  6ADA               	clrf	fsr2h,c
   630   001194  50DF               	movf	223,w,c
   631   001196  0B07               	andlw	7
   632   001198  0D02               	mullw	2
   633   00119A  50F3               	movf	243,w,c
   634   00119C  0F0B               	addlw	low _lat_registers
   635   00119E  6ED9               	movwf	fsr2l,c
   636   0011A0  6ADA               	clrf	fsr2h,c
   637   0011A2  CFDE F028          	movff	postinc2,??_gpio_pin_write_logic+3
   638   0011A6  CFDD F029          	movff	postdec2,??_gpio_pin_write_logic+4
   639   0011AA  C028  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   640   0011AE  C029  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   641   0011B2  5027               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   642   0011B4  16DF               	andwf	indf2,f,c
   643                           
   644                           ;MCAL_Layer/GPIO/hal_gpio.c: 90:                 break;
   645   0011B6  EF1A  F009         	goto	l1341
   646   0011BA                     l1335:
   647                           
   648                           ;MCAL_Layer/GPIO/hal_gpio.c: 92:                 (*lat_registers[_pin_config->port] |= (
      +                          ((uint8)1) << _pin_config->pin));
   649   0011BA  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   650   0011BC  6ED9               	movwf	fsr2l,c
   651   0011BE  6ADA               	clrf	fsr2h,c
   652   0011C0  30DF               	rrcf	223,w,c
   653   0011C2  32E8               	rrcf	wreg,f,c
   654   0011C4  32E8               	rrcf	wreg,f,c
   655   0011C6  0B07               	andlw	7
   656   0011C8  6E25               	movwf	??_gpio_pin_write_logic^0,c
   657   0011CA  0E01               	movlw	1
   658   0011CC  6E26               	movwf	(??_gpio_pin_write_logic+1)^0,c
   659   0011CE  2A25               	incf	??_gpio_pin_write_logic^0,f,c
   660   0011D0  EFEC  F008         	goto	u654
   661   0011D4                     u655:
   662   0011D4  90D8               	bcf	status,0,c
   663   0011D6  3626               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   664   0011D8                     u654:
   665   0011D8  2E25               	decfsz	??_gpio_pin_write_logic^0,f,c
   666   0011DA  EFEA  F008         	goto	u655
   667   0011DE  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   668   0011E0  6ED9               	movwf	fsr2l,c
   669   0011E2  6ADA               	clrf	fsr2h,c
   670   0011E4  50DF               	movf	223,w,c
   671   0011E6  0B07               	andlw	7
   672   0011E8  0D02               	mullw	2
   673   0011EA  50F3               	movf	243,w,c
   674   0011EC  0F0B               	addlw	low _lat_registers
   675   0011EE  6ED9               	movwf	fsr2l,c
   676   0011F0  6ADA               	clrf	fsr2h,c
   677   0011F2  CFDE F027          	movff	postinc2,??_gpio_pin_write_logic+2
   678   0011F6  CFDD F028          	movff	postdec2,??_gpio_pin_write_logic+3
   679   0011FA  C027  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
   680   0011FE  C028  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
   681   001202  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   682   001204  12DF               	iorwf	indf2,f,c
   683                           
   684                           ;MCAL_Layer/GPIO/hal_gpio.c: 93:                 break;
   685   001206  EF1A  F009         	goto	l1341
   686   00120A                     l1339:
   687   00120A  5024               	movf	gpio_pin_write_logic@logic^0,w,c
   688   00120C  6E25               	movwf	??_gpio_pin_write_logic^0,c
   689   00120E  6A26               	clrf	(??_gpio_pin_write_logic+1)^0,c
   690                           
   691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   692                           ; Switch size 1, requested type "simple"
   693                           ; Number of cases is 1, Range of values is 0 to 0
   694                           ; switch strategies available:
   695                           ; Name         Instructions Cycles
   696                           ; simple_byte            4     3 (average)
   697                           ;	Chosen strategy is simple_byte
   698   001210  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   699   001212  0A00               	xorlw	0	; case 0
   700   001214  B4D8               	btfsc	status,2,c
   701   001216  EF0F  F009         	goto	l1547
   702   00121A  EFAE  F008         	goto	l1331
   703   00121E                     l1547:
   704                           
   705                           ; Switch size 1, requested type "simple"
   706                           ; Number of cases is 2, Range of values is 0 to 1
   707                           ; switch strategies available:
   708                           ; Name         Instructions Cycles
   709                           ; simple_byte            7     4 (average)
   710                           ;	Chosen strategy is simple_byte
   711   00121E  5025               	movf	??_gpio_pin_write_logic^0,w,c
   712   001220  0A00               	xorlw	0	; case 0
   713   001222  B4D8               	btfsc	status,2,c
   714   001224  EFB2  F008         	goto	l1333
   715   001228  0A01               	xorlw	1	; case 1
   716   00122A  B4D8               	btfsc	status,2,c
   717   00122C  EFDD  F008         	goto	l1335
   718   001230  EFAE  F008         	goto	l1331
   719   001234                     l1341:
   720                           
   721                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:     return ret;
   722   001234  502A               	movf	gpio_pin_write_logic@ret^0,w,c
   723   001236  0012               	return		;funcret
   724   001238                     __end_of_gpio_pin_write_logic:
   725                           	callstack 0
   726                           
   727 ;; *************** function _app_init *****************
   728 ;; Defined at:
   729 ;;		line 49 in file "appplication.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  ret             1    0        unsigned char 
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels used: 1
   749 ;; Hardware stack levels required when called: 2
   750 ;; This function calls:
   751 ;;		_dc_motor_initialize
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text4
   758   001394                     __ptext4:
   759                           	callstack 0
   760   001394                     _app_init:
   761                           	callstack 28
   762   001394  0E21               	movlw	low _mot1
   763   001396  6E2A               	movwf	dc_motor_initialize@_dc_motor^0,c
   764   001398  ECA1  F009         	call	_dc_motor_initialize	;wreg free
   765   00139C  0E1F               	movlw	low _mot2
   766   00139E  6E2A               	movwf	dc_motor_initialize@_dc_motor^0,c
   767   0013A0  ECA1  F009         	call	_dc_motor_initialize	;wreg free
   768   0013A4  0012               	return		;funcret
   769   0013A6                     __end_of_app_init:
   770                           	callstack 0
   771                           
   772 ;; *************** function _dc_motor_initialize *****************
   773 ;; Defined at:
   774 ;;		line 17 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  _dc_motor       1    7[COMRAM] PTR const struct .
   777 ;;		 -> mot2(2), mot1(2), 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  ret             1    8[COMRAM] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      unsigned char 
   782 ;; Registers used:
   783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   789 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;Total ram usage:        2 bytes
   794 ;; Hardware stack levels used: 1
   795 ;; Hardware stack levels required when called: 1
   796 ;; This function calls:
   797 ;;		_gpio_pin_direction_initialize
   798 ;; This function is called by:
   799 ;;		_app_init
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text5
   804   001342                     __ptext5:
   805                           	callstack 0
   806   001342                     _dc_motor_initialize:
   807                           	callstack 28
   808   001342                     
   809                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 19:     if(((void*)0) == _dc_motor)
   810   001342  502A               	movf	dc_motor_initialize@_dc_motor^0,w,c
   811   001344  A4D8               	btfss	status,2,c
   812   001346  EFA7  F009         	goto	u661
   813   00134A  EFA9  F009         	goto	u660
   814   00134E                     u661:
   815   00134E  EFAD  F009         	goto	l1353
   816   001352                     u660:
   817   001352                     
   818                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 20:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 21:    
      +                               ret = (Std_ReturnType)0x00;
   819   001352  0E00               	movlw	0
   820   001354  6E2B               	movwf	dc_motor_initialize@ret^0,c
   821                           
   822                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 22:     }
   823   001356  EFB7  F009         	goto	l1355
   824   00135A                     l1353:
   825                           
   826                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 24:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 25:    
      +                               ret = gpio_pin_direction_initialize(&(_dc_motor->dc_motor_pin[0x00U]));
   827   00135A  C02A  F023         	movff	dc_motor_initialize@_dc_motor,gpio_pin_direction_initialize@_pin_config
   828   00135E  EC01  F008         	call	_gpio_pin_direction_initialize	;wreg free
   829   001362  6E2B               	movwf	dc_motor_initialize@ret^0,c
   830                           
   831                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 26:         ret = gpio_pin_direction_initialize(&(_d
      +                          c_motor->dc_motor_pin[0x01U]));
   832   001364  282A               	incf	dc_motor_initialize@_dc_motor^0,w,c
   833   001366  6E23               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
   834   001368  EC01  F008         	call	_gpio_pin_direction_initialize	;wreg free
   835   00136C  6E2B               	movwf	dc_motor_initialize@ret^0,c
   836   00136E                     l1355:
   837                           
   838                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 28:     return ret;
   839   00136E  502B               	movf	dc_motor_initialize@ret^0,w,c
   840   001370  0012               	return		;funcret
   841   001372                     __end_of_dc_motor_initialize:
   842                           	callstack 0
   843                           
   844 ;; *************** function _gpio_pin_direction_initialize *****************
   845 ;; Defined at:
   846 ;;		line 22 in file "MCAL_Layer/GPIO/hal_gpio.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  _pin_config     1    0[COMRAM] PTR struct .
   849 ;;		 -> mot2$dc_motor_pin(2), mot2(2), mot1$dc_motor_pin(2), mot1(2), 
   850 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  ret             1    6[COMRAM] unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      unsigned char 
   855 ;; Registers used:
   856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   862 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;Total ram usage:        7 bytes
   867 ;; Hardware stack levels used: 1
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_dc_motor_initialize
   872 ;;		_button_initialize
   873 ;;		_relay_initialize
   874 ;;		_gpio_pin_initialize
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text6
   879   001002                     __ptext6:
   880                           	callstack 0
   881   001002                     _gpio_pin_direction_initialize:
   882                           	callstack 28
   883   001002                     
   884                           ;MCAL_Layer/GPIO/hal_gpio.c: 22: Std_ReturnType gpio_pin_direction_initialize(pin_config
      +                          _t *_pin_config);MCAL_Layer/GPIO/hal_gpio.c: 23: {;MCAL_Layer/GPIO/hal_gpio.c: 24:     S
      +                          td_ReturnType ret = (Std_ReturnType)0x01 ;
   885   001002  0E01               	movlw	1
   886   001004  6E29               	movwf	gpio_pin_direction_initialize@ret^0,c
   887                           
   888                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          (8 - 1))
   889   001006  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
   890   001008  B4D8               	btfsc	status,2,c
   891   00100A  EF09  F008         	goto	u561
   892   00100E  EF0B  F008         	goto	u560
   893   001012                     u561:
   894   001012  EF1B  F008         	goto	l1309
   895   001016                     u560:
   896   001016  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
   897   001018  6ED9               	movwf	fsr2l,c
   898   00101A  6ADA               	clrf	fsr2h,c
   899   00101C  30DF               	rrcf	223,w,c
   900   00101E  32E8               	rrcf	wreg,f,c
   901   001020  32E8               	rrcf	wreg,f,c
   902   001022  0B07               	andlw	7
   903   001024  6E24               	movwf	??_gpio_pin_direction_initialize^0,c
   904   001026  0E07               	movlw	7
   905   001028  6424               	cpfsgt	??_gpio_pin_direction_initialize^0,c
   906   00102A  EF19  F008         	goto	u571
   907   00102E  EF1B  F008         	goto	u570
   908   001032                     u571:
   909   001032  EF72  F008         	goto	l1317
   910   001036                     u570:
   911   001036                     l1309:
   912                           
   913                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     {;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret = (St
      +                          d_ReturnType)0x00;
   914   001036  0E00               	movlw	0
   915   001038  6E29               	movwf	gpio_pin_direction_initialize@ret^0,c
   916                           
   917                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }
   918   00103A  EF92  F008         	goto	l1319
   919   00103E                     l1311:
   920                           
   921                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 (*tris_registers[_pin_config->port] &= 
      +                          ~(((uint8)1) << _pin_config->pin));
   922   00103E  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
   923   001040  6ED9               	movwf	fsr2l,c
   924   001042  6ADA               	clrf	fsr2h,c
   925   001044  30DF               	rrcf	223,w,c
   926   001046  32E8               	rrcf	wreg,f,c
   927   001048  32E8               	rrcf	wreg,f,c
   928   00104A  0B07               	andlw	7
   929   00104C  6E24               	movwf	??_gpio_pin_direction_initialize^0,c
   930   00104E  0E01               	movlw	1
   931   001050  6E25               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
   932   001052  2A24               	incf	??_gpio_pin_direction_initialize^0,f,c
   933   001054  EF2E  F008         	goto	u584
   934   001058                     u585:
   935   001058  90D8               	bcf	status,0,c
   936   00105A  3625               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
   937   00105C                     u584:
   938   00105C  2E24               	decfsz	??_gpio_pin_direction_initialize^0,f,c
   939   00105E  EF2C  F008         	goto	u585
   940   001062  5025               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
   941   001064  0AFF               	xorlw	255
   942   001066  6E26               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
   943   001068  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
   944   00106A  6ED9               	movwf	fsr2l,c
   945   00106C  6ADA               	clrf	fsr2h,c
   946   00106E  50DF               	movf	223,w,c
   947   001070  0B07               	andlw	7
   948   001072  0D02               	mullw	2
   949   001074  50F3               	movf	243,w,c
   950   001076  0F15               	addlw	low _tris_registers
   951   001078  6ED9               	movwf	fsr2l,c
   952   00107A  6ADA               	clrf	fsr2h,c
   953   00107C  CFDE F027          	movff	postinc2,??_gpio_pin_direction_initialize+3
   954   001080  CFDD F028          	movff	postdec2,??_gpio_pin_direction_initialize+4
   955   001084  C027  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
   956   001088  C028  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
   957   00108C  5026               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
   958   00108E  16DF               	andwf	indf2,f,c
   959                           
   960                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
   961   001090  EF92  F008         	goto	l1319
   962   001094                     l1313:
   963                           
   964                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] |= 
      +                          (((uint8)1) << _pin_config->pin));
   965   001094  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
   966   001096  6ED9               	movwf	fsr2l,c
   967   001098  6ADA               	clrf	fsr2h,c
   968   00109A  30DF               	rrcf	223,w,c
   969   00109C  32E8               	rrcf	wreg,f,c
   970   00109E  32E8               	rrcf	wreg,f,c
   971   0010A0  0B07               	andlw	7
   972   0010A2  6E24               	movwf	??_gpio_pin_direction_initialize^0,c
   973   0010A4  0E01               	movlw	1
   974   0010A6  6E25               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
   975   0010A8  2A24               	incf	??_gpio_pin_direction_initialize^0,f,c
   976   0010AA  EF59  F008         	goto	u594
   977   0010AE                     u595:
   978   0010AE  90D8               	bcf	status,0,c
   979   0010B0  3625               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
   980   0010B2                     u594:
   981   0010B2  2E24               	decfsz	??_gpio_pin_direction_initialize^0,f,c
   982   0010B4  EF57  F008         	goto	u595
   983   0010B8  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
   984   0010BA  6ED9               	movwf	fsr2l,c
   985   0010BC  6ADA               	clrf	fsr2h,c
   986   0010BE  50DF               	movf	223,w,c
   987   0010C0  0B07               	andlw	7
   988   0010C2  0D02               	mullw	2
   989   0010C4  50F3               	movf	243,w,c
   990   0010C6  0F15               	addlw	low _tris_registers
   991   0010C8  6ED9               	movwf	fsr2l,c
   992   0010CA  6ADA               	clrf	fsr2h,c
   993   0010CC  CFDE F026          	movff	postinc2,??_gpio_pin_direction_initialize+2
   994   0010D0  CFDD F027          	movff	postdec2,??_gpio_pin_direction_initialize+3
   995   0010D4  C026  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
   996   0010D8  C027  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
   997   0010DC  5025               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
   998   0010DE  12DF               	iorwf	indf2,f,c
   999                           
  1000                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 break;
  1001   0010E0  EF92  F008         	goto	l1319
  1002   0010E4                     l1317:
  1003   0010E4  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1004   0010E6  6ED9               	movwf	fsr2l,c
  1005   0010E8  6ADA               	clrf	fsr2h,c
  1006   0010EA  BCDF               	btfsc	indf2,6,c
  1007   0010EC  EF7A  F008         	goto	u601
  1008   0010F0  EF7D  F008         	goto	u600
  1009   0010F4                     u601:
  1010   0010F4  0E01               	movlw	1
  1011   0010F6  EF7E  F008         	goto	u610
  1012   0010FA                     u600:
  1013   0010FA  0E00               	movlw	0
  1014   0010FC                     u610:
  1015   0010FC  6E24               	movwf	??_gpio_pin_direction_initialize^0,c
  1016   0010FE  6A25               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1017                           
  1018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1019                           ; Switch size 1, requested type "simple"
  1020                           ; Number of cases is 1, Range of values is 0 to 0
  1021                           ; switch strategies available:
  1022                           ; Name         Instructions Cycles
  1023                           ; simple_byte            4     3 (average)
  1024                           ;	Chosen strategy is simple_byte
  1025   001100  5025               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1026   001102  0A00               	xorlw	0	; case 0
  1027   001104  B4D8               	btfsc	status,2,c
  1028   001106  EF87  F008         	goto	l1549
  1029   00110A  EF1B  F008         	goto	l1309
  1030   00110E                     l1549:
  1031                           
  1032                           ; Switch size 1, requested type "simple"
  1033                           ; Number of cases is 2, Range of values is 0 to 1
  1034                           ; switch strategies available:
  1035                           ; Name         Instructions Cycles
  1036                           ; simple_byte            7     4 (average)
  1037                           ;	Chosen strategy is simple_byte
  1038   00110E  5024               	movf	??_gpio_pin_direction_initialize^0,w,c
  1039   001110  0A00               	xorlw	0	; case 0
  1040   001112  B4D8               	btfsc	status,2,c
  1041   001114  EF1F  F008         	goto	l1311
  1042   001118  0A01               	xorlw	1	; case 1
  1043   00111A  B4D8               	btfsc	status,2,c
  1044   00111C  EF4A  F008         	goto	l1313
  1045   001120  EF1B  F008         	goto	l1309
  1046   001124                     l1319:
  1047                           
  1048                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:     return ret;
  1049   001124  5029               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1050   001126  0012               	return		;funcret
  1051   001128                     __end_of_gpio_pin_direction_initialize:
  1052                           	callstack 0
  1053                           
  1054                           	psect	smallconst
  1055   001000                     __psmallconst:
  1056                           	callstack 0
  1057   001000  00                 	db	0
  1058   001001  00                 	db	0	; dummy byte at the end
  1059   000000                     
  1060                           	psect	rparam
  1061   000000                     
  1062                           	psect	config
  1063                           
  1064                           ; Padding undefined space
  1065   300000                     	org	3145728
  1066   300000  FF                 	db	255
  1067                           
  1068                           ;Config register CONFIG1H @ 0x300001
  1069                           ;	Oscillator Selection bits
  1070                           ;	OSC = HS, HS oscillator
  1071                           ;	Fail-Safe Clock Monitor Enable bit
  1072                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1073                           ;	Internal/External Oscillator Switchover bit
  1074                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1075   300001                     	org	3145729
  1076   300001  02                 	db	2
  1077                           
  1078                           ;Config register CONFIG2L @ 0x300002
  1079                           ;	Power-up Timer Enable bit
  1080                           ;	PWRT = OFF, PWRT disabled
  1081                           ;	Brown-out Reset Enable bits
  1082                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1083                           ;	Brown Out Reset Voltage bits
  1084                           ;	BORV = 1, 
  1085   300002                     	org	3145730
  1086   300002  09                 	db	9
  1087                           
  1088                           ;Config register CONFIG2H @ 0x300003
  1089                           ;	Watchdog Timer Enable bit
  1090                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1091                           ;	Watchdog Timer Postscale Select bits
  1092                           ;	WDTPS = 32768, 1:32768
  1093   300003                     	org	3145731
  1094   300003  1E                 	db	30
  1095                           
  1096                           ; Padding undefined space
  1097   300004                     	org	3145732
  1098   300004  FF                 	db	255
  1099                           
  1100                           ;Config register CONFIG3H @ 0x300005
  1101                           ;	CCP2 MUX bit
  1102                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1103                           ;	PORTB A/D Enable bit
  1104                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1105                           ;	Low-Power Timer1 Oscillator Enable bit
  1106                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1107                           ;	MCLR Pin Enable bit
  1108                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1109   300005                     	org	3145733
  1110   300005  81                 	db	129
  1111                           
  1112                           ;Config register CONFIG4L @ 0x300006
  1113                           ;	Stack Full/Underflow Reset Enable bit
  1114                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1115                           ;	Single-Supply ICSP Enable bit
  1116                           ;	LVP = OFF, Single-Supply ICSP disabled
  1117                           ;	Extended Instruction Set Enable bit
  1118                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1119                           ;	Background Debugger Enable bit
  1120                           ;	DEBUG = 0x1, unprogrammed default
  1121   300006                     	org	3145734
  1122   300006  81                 	db	129
  1123                           
  1124                           ; Padding undefined space
  1125   300007                     	org	3145735
  1126   300007  FF                 	db	255
  1127                           
  1128                           ;Config register CONFIG5L @ 0x300008
  1129                           ;	Code Protection bit
  1130                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1131                           ;	Code Protection bit
  1132                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1133                           ;	Code Protection bit
  1134                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1135                           ;	Code Protection bit
  1136                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1137   300008                     	org	3145736
  1138   300008  0F                 	db	15
  1139                           
  1140                           ;Config register CONFIG5H @ 0x300009
  1141                           ;	Boot Block Code Protection bit
  1142                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1143                           ;	Data EEPROM Code Protection bit
  1144                           ;	CPD = OFF, Data EEPROM not code-protected
  1145   300009                     	org	3145737
  1146   300009  C0                 	db	192
  1147                           
  1148                           ;Config register CONFIG6L @ 0x30000A
  1149                           ;	Write Protection bit
  1150                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1151                           ;	Write Protection bit
  1152                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1153                           ;	Write Protection bit
  1154                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1155                           ;	Write Protection bit
  1156                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1157   30000A                     	org	3145738
  1158   30000A  0F                 	db	15
  1159                           
  1160                           ;Config register CONFIG6H @ 0x30000B
  1161                           ;	Configuration Register Write Protection bit
  1162                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1163                           ;	Boot Block Write Protection bit
  1164                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1165                           ;	Data EEPROM Write Protection bit
  1166                           ;	WRTD = OFF, Data EEPROM not write-protected
  1167   30000B                     	org	3145739
  1168   30000B  E0                 	db	224
  1169                           
  1170                           ;Config register CONFIG7L @ 0x30000C
  1171                           ;	Table Read Protection bit
  1172                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1173                           ;	Table Read Protection bit
  1174                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1175                           ;	Table Read Protection bit
  1176                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1177                           ;	Table Read Protection bit
  1178                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1179   30000C                     	org	3145740
  1180   30000C  0F                 	db	15
  1181                           
  1182                           ;Config register CONFIG7H @ 0x30000D
  1183                           ;	Boot Block Table Read Protection bit
  1184                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1185   30000D                     	org	3145741
  1186   30000D  40                 	db	64
  1187                           tosu	equ	0xFFF
  1188                           tosh	equ	0xFFE
  1189                           tosl	equ	0xFFD
  1190                           stkptr	equ	0xFFC
  1191                           pclatu	equ	0xFFB
  1192                           pclath	equ	0xFFA
  1193                           pcl	equ	0xFF9
  1194                           tblptru	equ	0xFF8
  1195                           tblptrh	equ	0xFF7
  1196                           tblptrl	equ	0xFF6
  1197                           tablat	equ	0xFF5
  1198                           prodh	equ	0xFF4
  1199                           prodl	equ	0xFF3
  1200                           indf0	equ	0xFEF
  1201                           postinc0	equ	0xFEE
  1202                           postdec0	equ	0xFED
  1203                           preinc0	equ	0xFEC
  1204                           plusw0	equ	0xFEB
  1205                           fsr0h	equ	0xFEA
  1206                           fsr0l	equ	0xFE9
  1207                           wreg	equ	0xFE8
  1208                           indf1	equ	0xFE7
  1209                           postinc1	equ	0xFE6
  1210                           postdec1	equ	0xFE5
  1211                           preinc1	equ	0xFE4
  1212                           plusw1	equ	0xFE3
  1213                           fsr1h	equ	0xFE2
  1214                           fsr1l	equ	0xFE1
  1215                           bsr	equ	0xFE0
  1216                           indf2	equ	0xFDF
  1217                           postinc2	equ	0xFDE
  1218                           postdec2	equ	0xFDD
  1219                           preinc2	equ	0xFDC
  1220                           plusw2	equ	0xFDB
  1221                           fsr2h	equ	0xFDA
  1222                           fsr2l	equ	0xFD9
  1223                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         7
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     12      54
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    dc_motor_initialize@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> mot1(COMRAM[2]), mot2(COMRAM[2]), 

    dc_motor_move_left@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> mot1(COMRAM[2]), mot2(COMRAM[2]), 

    dc_motor_move_right@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> mot1(COMRAM[2]), mot2(COMRAM[2]), 

    gpio_pin_direction_initialize@_pin_config	PTR struct . size(1) Largest target is 2
		 -> led_initialize@pin_obj(COMRAM[1]), mot1(COMRAM[2]), mot1$dc_motor_pin(COMRAM[2]), mot2(COMRAM[2]), 
		 -> mot2$dc_motor_pin(COMRAM[2]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR struct . size(1) Largest target is 2
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), mot1(COMRAM[2]), 
		 -> mot1$dc_motor_pin(COMRAM[2]), mot2(COMRAM[2]), mot2$dc_motor_pin(COMRAM[2]), relay_turn_off@pin_obj(COMRAM[1]), 
		 -> relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_dc_motor_move_left
    _main->_dc_motor_move_right
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _app_init->_dc_motor_initialize
    _dc_motor_initialize->_gpio_pin_direction_initialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4996
                                             10 COMRAM     2     2      0
                           _app_init
                 _dc_motor_move_left
                _dc_motor_move_right
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  2     1      1    2095
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   2     1      1    2095
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    1851
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _app_init                                             1     1      0     806
                _dc_motor_initialize
 ---------------------------------------------------------------------------------
 (2) _dc_motor_initialize                                  2     1      1     803
                                              7 COMRAM     2     1      1
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        7     6      1     559
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _dc_motor_initialize
       _gpio_pin_direction_initialize
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      C      36       1       42.5%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36      39        0.0%
DATA                 0      0      36       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Nov 20 22:10:49 2023

                                     l131 1126                                       l221 123C  
                                     l150 1236                                       l241 12D2  
                                     l227 13A4                                       l236 1370  
                                     l246 130A                                       u600 10FA  
                                     u601 10F4                                       u610 10FC  
                                     u620 113C                                       u621 1138  
                                     u630 115C                                       u631 1158  
                                     u560 1016                                       u561 1012  
                                     u570 1036                                       u571 1032  
                                     u660 1352                                       u644 1182  
                                     u661 134E                                       u645 117E  
                                     u654 11D8                                       u670 12AC  
                                     u655 11D4                                       u671 12A8  
                                     u584 105C                                       u680 12E4  
                                     u585 1058                                       u681 12E0  
                                     u594 10B2                                       u595 10AE  
                                     u857 125A                                       u867 1286  
                                     _ret 0036                       led_initialize@F2891 0035  
                                     wreg 0FE8                     relay_initialize@F2885 0031  
                                    l1311 103E                                      l1313 1094  
                                    l1305 1002                                      l1307 1016  
                                    l1331 115C                                      l1317 10E4  
                                    l1309 1036                                      l1333 1164  
                                    l1341 1234                                      l1319 1124  
                                    l1351 1352                                      l1335 11BA  
                                    l1327 1128                                      l1353 135A  
                                    l1361 1394                                      l1329 113C  
                                    l1521 1250                                      l1355 136E  
                                    l1363 139C                                      l1339 120A  
                                    l1371 12D0                                      l1523 1268  
                                    l1349 1342                                      l1381 1308  
                                    l1365 129C                                      l1525 1272  
                                    l1359 1394                                      l1375 12D4  
                                    l1367 12AC                                      l1527 127C  
                                    l1519 1238                                      l1377 12E4  
                                    l1369 12B4                                      l1547 121E  
                                    l1379 12EC                                      l1549 110E  
                                    _LATA 0F89                                      _LATB 0F8A  
                                    _LATC 0F8B                                      _LATD 0F8C  
                                    _LATE 0F8D                                      _main 1238  
                                    _mot1 0021                                      _mot2 001F  
                                    fsr2h 0FDA                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    prodl 0FF3                                      start 0000  
                            ___param_bank 0000                    dc_motor_initialize@ret 002B  
                    _gpio_pin_write_logic 1128                                     ?_main 0023  
                     relay_turn_off@F2895 002F                                     _PORTA 0F80  
                                   _PORTB 0F81                                     _PORTC 0F82  
                                   _PORTD 0F83                                     _PORTE 0F84  
                                   _TRISA 0F92                                     _TRISB 0F93  
                                   _TRISC 0F94                                     _TRISD 0F95  
                                   _TRISE 0F96                                     tablat 0FF5  
                                   status 0FD8            ?_gpio_pin_direction_initialize 0023  
                         __initialization 130C                              __end_of_main 129C  
                   ?_gpio_pin_write_logic 0023                             _lat_registers 000B  
             __end_of_dc_motor_initialize 1372                                    ??_main 002D  
                           __activetblptr 0002                          led_turn_on@F2896 0034  
                        __end_of_app_init 13A6               __end_of_dc_motor_move_right 12D4  
                                  clear_0 1332                                    isa$std 0001  
                            __pdataCOMRAM 0001                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                                __accesstop 0080  
                 __end_of__initialization 1338                             ___rparam_used 0001  
             dc_motor_move_left@_dc_motor 002B                    ??_gpio_pin_write_logic 0025  
                          __pcstackCOMRAM 0023  gpio_pin_direction_initialize@_pin_config 0023  
                              __pnvCOMRAM 0036                         led_turn_off@F2901 0033  
                    led_turn_toggle@F2906 0032                                 ?_app_init 0023  
                          _tris_registers 0015                                   __Hparam 0000  
                                 __Lparam 0000                     dc_motor_move_left@ret 002C  
                            __psmallconst 1000                                   __pcinit 130C  
                                 __ramtop 1000                                   __ptext0 1238  
                                 __ptext1 129C                                   __ptext2 12D4  
                                 __ptext3 1128                                   __ptext4 1394  
                                 __ptext5 1342                                   __ptext6 1002  
         ??_gpio_pin_direction_initialize 0024                                ??_app_init 002C  
                    end_of_initialization 1338                             __Lmediumconst 0000  
                                 postdec1 0FE5                                   postdec2 0FDD  
                                 postinc0 0FEE                                   postinc2 0FDE  
                      relay_turn_on@F2890 0030                             __pidataCOMRAM 1372  
                     start_initialization 130C     __end_of_gpio_pin_direction_initialize 1128  
           _gpio_pin_direction_initialize 1002                __end_of_dc_motor_move_left 130C  
                             __pbssCOMRAM 002F           gpio_pin_write_logic@_pin_config 0023  
               gpio_pin_write_logic@logic 0024                               __smallconst 1000  
                     _dc_motor_initialize 1342              dc_motor_initialize@_dc_motor 002A  
        gpio_pin_direction_initialize@ret 0029                      ?_dc_motor_initialize 002A  
                 gpio_pin_write_logic@ret 002A                                 copy_data0 1320  
                     _dc_motor_move_right 129C                                  __Hrparam 0000  
                                __Lrparam 0000                      ?_dc_motor_move_right 002B  
                   ??_dc_motor_initialize 002B                                  _app_init 1394  
                  dc_motor_move_right@ret 002C                                  isa$xinst 0000  
                   ??_dc_motor_move_right 002C                        _dc_motor_move_left 12D4  
            __end_of_gpio_pin_write_logic 1238                       ?_dc_motor_move_left 002B  
                    ??_dc_motor_move_left 002C              dc_motor_move_right@_dc_motor 002B  
                          _port_registers 0001  
