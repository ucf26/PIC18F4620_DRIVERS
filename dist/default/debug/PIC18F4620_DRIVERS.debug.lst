

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 12 16:37:34 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 23/03/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4620 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     
    63                           	psect	idataCOMRAM
    64   001646                     __pidataCOMRAM:
    65                           	callstack 0
    66                           
    67                           ;initializer for _port_registers
    68   001646  80                 	db	128
    69   001647  0F                 	db	15
    70   001648  81                 	db	129
    71   001649  0F                 	db	15
    72   00164A  82                 	db	130
    73   00164B  0F                 	db	15
    74   00164C  83                 	db	131
    75   00164D  0F                 	db	15
    76   00164E  84                 	db	132
    77   00164F  0F                 	db	15
    78                           
    79                           ;initializer for _lat_registers
    80   001650  89                 	db	137
    81   001651  0F                 	db	15
    82   001652  8A                 	db	138
    83   001653  0F                 	db	15
    84   001654  8B                 	db	139
    85   001655  0F                 	db	15
    86   001656  8C                 	db	140
    87   001657  0F                 	db	15
    88   001658  8D                 	db	141
    89   001659  0F                 	db	15
    90                           
    91                           ;initializer for _tris_registers
    92   00165A  92                 	db	146
    93   00165B  0F                 	db	15
    94   00165C  93                 	db	147
    95   00165D  0F                 	db	15
    96   00165E  94                 	db	148
    97   00165F  0F                 	db	15
    98   001660  95                 	db	149
    99   001661  0F                 	db	15
   100   001662  96                 	db	150
   101   001663  0F                 	db	15
   102                           
   103                           ;initializer for _lcd_2
   104   001664  32                 	db	50
   105   001665  3A                 	db	58
   106   001666  03                 	db	3
   107   001667  0B                 	db	11
   108   001668  13                 	db	19
   109   001669  1B                 	db	27
   110   00166A  23                 	db	35
   111   00166B  2B                 	db	43
   112   00166C  33                 	db	51
   113   00166D  3B                 	db	59
   114                           
   115                           ;initializer for _lcd_1
   116   00166E  02                 	db	2
   117   00166F  0A                 	db	10
   118   001670  12                 	db	18
   119   001671  1A                 	db	26
   120   001672  22                 	db	34
   121   001673  2A                 	db	42
   122                           
   123                           	psect	smallconst
   124   001000                     __psmallconst:
   125                           	callstack 0
   126   001000  00                 	db	0
   127   001001                     _btn_values:
   128                           	callstack 0
   129   001001  37                 	db	55
   130   001002  38                 	db	56
   131   001003  39                 	db	57
   132   001004  2F                 	db	47
   133   001005  34                 	db	52
   134   001006  35                 	db	53
   135   001007  36                 	db	54
   136   001008  2A                 	db	42
   137   001009  31                 	db	49
   138   00100A  32                 	db	50
   139   00100B  33                 	db	51
   140   00100C  2D                 	db	45
   141   00100D  23                 	db	35
   142   00100E  38                 	db	56
   143   00100F  3D                 	db	61
   144   001010  2B                 	db	43
   145   001011                     __end_of_btn_values:
   146                           	callstack 0
   147   000000                     _PORTE	set	3972
   148   000000                     _PORTD	set	3971
   149   000000                     _PORTC	set	3970
   150   000000                     _PORTB	set	3969
   151   000000                     _PORTA	set	3968
   152   000000                     _LATA	set	3977
   153   000000                     _TRISA	set	3986
   154   000000                     _TRISE	set	3990
   155   000000                     _TRISD	set	3989
   156   000000                     _TRISC	set	3988
   157   000000                     _TRISB	set	3987
   158   000000                     _LATE	set	3981
   159   000000                     _LATD	set	3980
   160   000000                     _LATC	set	3979
   161   000000                     _LATB	set	3978
   162   001011                     STR_1:
   163   001011  25                 	db	37
   164   001012  69                 	db	105	;'i'
   165   001013  00                 	db	0
   166   001014  00                 	db	0	; dummy byte at the end
   167   000000                     
   168                           ; #config settings
   169                           
   170                           	psect	cinit
   171   001610                     __pcinit:
   172                           	callstack 0
   173   001610                     start_initialization:
   174                           	callstack 0
   175   001610                     __initialization:
   176                           	callstack 0
   177                           
   178                           ; Initialize objects allocated to COMRAM (46 bytes)
   179                           ; load TBLPTR registers with __pidataCOMRAM
   180   001610  0E46               	movlw	low __pidataCOMRAM
   181   001612  6EF6               	movwf	tblptrl,c
   182   001614  0E16               	movlw	high __pidataCOMRAM
   183   001616  6EF7               	movwf	tblptrh,c
   184   001618  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   185   00161A  6EF8               	movwf	tblptru,c
   186   00161C  EE00  F001         	lfsr	0,__pdataCOMRAM
   187   001620  EE10 F02E          	lfsr	1,46
   188   001624                     copy_data0:
   189   001624  0009               	tblrd		*+
   190   001626  CFF5 FFEE          	movff	tablat,postinc0
   191   00162A  50E5               	movf	postdec1,w,c
   192   00162C  50E1               	movf	fsr1l,w,c
   193   00162E  E1FA               	bnz	copy_data0
   194                           
   195                           ; Clear objects allocated to COMRAM (8 bytes)
   196   001630  EE00  F043         	lfsr	0,__pbssCOMRAM
   197   001634  0E08               	movlw	8
   198   001636                     clear_0:
   199   001636  6AEE               	clrf	postinc0,c
   200   001638  06E8               	decf	wreg,f,c
   201   00163A  E1FD               	bnz	clear_0
   202   00163C                     end_of_initialization:
   203                           	callstack 0
   204   00163C                     __end_of__initialization:
   205                           	callstack 0
   206   00163C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   207   00163E  6EF8               	movwf	tblptru,c
   208   001640  0100               	movlb	0
   209   001642  EF43  F00B         	goto	_main	;jump to C main() function
   210                           
   211                           	psect	bssCOMRAM
   212   000043                     __pbssCOMRAM:
   213                           	callstack 0
   214   000043                     _ret:
   215                           	callstack 0
   216   000043                     	ds	1
   217   000044                     relay_turn_off@F3062:
   218                           	callstack 0
   219   000044                     	ds	1
   220   000045                     relay_turn_on@F3057:
   221                           	callstack 0
   222   000045                     	ds	1
   223   000046                     relay_initialize@F3052:
   224                           	callstack 0
   225   000046                     	ds	1
   226   000047                     led_turn_toggle@F3073:
   227                           	callstack 0
   228   000047                     	ds	1
   229   000048                     led_turn_off@F3068:
   230                           	callstack 0
   231   000048                     	ds	1
   232   000049                     led_turn_on@F3063:
   233                           	callstack 0
   234   000049                     	ds	1
   235   00004A                     led_initialize@F3058:
   236                           	callstack 0
   237   00004A                     	ds	1
   238                           
   239                           	psect	dataCOMRAM
   240   000001                     __pdataCOMRAM:
   241                           	callstack 0
   242   000001                     _port_registers:
   243                           	callstack 0
   244   000001                     	ds	10
   245   00000B                     _lat_registers:
   246                           	callstack 0
   247   00000B                     	ds	10
   248   000015                     _tris_registers:
   249                           	callstack 0
   250   000015                     	ds	10
   251   00001F                     _lcd_2:
   252                           	callstack 0
   253   00001F                     	ds	10
   254   000029                     _lcd_1:
   255                           	callstack 0
   256   000029                     	ds	6
   257                           
   258                           	psect	cstackCOMRAM
   259   00002F                     __pcstackCOMRAM:
   260                           	callstack 0
   261   00002F                     gpio_pin_direction_initialize@_pin_config:
   262                           	callstack 0
   263   00002F                     gpio_pin_write_logic@_pin_config:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0x0
   267   00002F                     	ds	1
   268   000030                     ??_gpio_pin_direction_initialize:
   269   000030                     gpio_pin_write_logic@logic:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x1
   273   000030                     	ds	1
   274   000031                     ??_gpio_pin_write_logic:
   275                           
   276                           ; 1 bytes @ 0x2
   277   000031                     	ds	4
   278   000035                     gpio_pin_direction_initialize@ret:
   279                           	callstack 0
   280                           
   281                           ; 1 bytes @ 0x6
   282   000035                     	ds	1
   283   000036                     gpio_pin_write_logic@ret:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x7
   287   000036                     	ds	1
   288   000037                     gpio_pin_initialize@_pin_config:
   289                           	callstack 0
   290   000037                     lcd_send_4bits@lcd:
   291                           	callstack 0
   292   000037                     lcd_4bit_send_enable_signal@lcd:
   293                           	callstack 0
   294   000037                     lcd_8bit_send_enable_signal@lcd:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x8
   298   000037                     	ds	1
   299   000038                     ??_gpio_pin_initialize:
   300   000038                     lcd_send_4bits@_data_command:
   301                           	callstack 0
   302   000038                     lcd_4bit_send_enable_signal@ret:
   303                           	callstack 0
   304   000038                     lcd_8bit_send_enable_signal@ret:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x9
   308   000038                     	ds	1
   309   000039                     gpio_pin_initialize@ret:
   310                           	callstack 0
   311   000039                     lcd_8bit_send_command@lcd:
   312                           	callstack 0
   313   000039                     lcd_send_4bits@ret:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0xA
   317   000039                     	ds	1
   318   00003A                     lcd_4bit_send_command@lcd:
   319                           	callstack 0
   320   00003A                     lcd_8bit_send_command@command:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0xB
   324   00003A                     	ds	1
   325   00003B                     ??_lcd_8bit_send_command:
   326   00003B                     lcd_4bit_send_command@command:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0xC
   330   00003B                     	ds	1
   331   00003C                     lcd_4bit_send_command@ret:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0xD
   335   00003C                     	ds	1
   336   00003D                     lcd_4bit_initialize@lcd:
   337                           	callstack 0
   338   00003D                     lcd_8bit_send_command@ret:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0xE
   342   00003D                     	ds	1
   343   00003E                     ??_lcd_4bit_initialize:
   344   00003E                     lcd_8bit_send_command@cnt:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0xF
   348   00003E                     	ds	1
   349   00003F                     lcd_4bit_initialize@l_data_pins_counter:
   350                           	callstack 0
   351   00003F                     lcd_8bit_initialize@lcd:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x10
   355   00003F                     	ds	1
   356   000040                     ??_lcd_8bit_initialize:
   357   000040                     lcd_4bit_initialize@ret:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x11
   361   000040                     	ds	1
   362   000041                     lcd_8bit_initialize@l_data_pins_counter:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x12
   366   000041                     	ds	1
   367   000042                     lcd_8bit_initialize@ret:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x13
   371   000042                     	ds	1
   372   000043                     
   373                           ; 1 bytes @ 0x14
   374 ;;
   375 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   376 ;;
   377 ;; *************** function _main *****************
   378 ;; Defined at:
   379 ;;		line 12 in file "appplication.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  2  294[None  ] int 
   386 ;; Registers used:
   387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   397 ;;Total ram usage:        0 bytes
   398 ;; Hardware stack levels required when called: 6
   399 ;; This function calls:
   400 ;;		_app_init
   401 ;; This function is called by:
   402 ;;		Startup code after reset
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           	psect	text0
   407   001686                     __ptext0:
   408                           	callstack 0
   409   001686                     _main:
   410                           	callstack 25
   411   001686                     
   412                           ;appplication.c: 14:     app_init();
   413   001686  EC49  F00B         	call	_app_init	;wreg free
   414   00168A                     l295:
   415   00168A  EF45  F00B         	goto	l295
   416   00168E  EF00  F000         	goto	start
   417   001692                     __end_of_main:
   418                           	callstack 0
   419                           
   420 ;; *************** function _app_init *****************
   421 ;; Defined at:
   422 ;;		line 24 in file "appplication.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   440 ;;Total ram usage:        0 bytes
   441 ;; Hardware stack levels used: 1
   442 ;; Hardware stack levels required when called: 5
   443 ;; This function calls:
   444 ;;		_ecu_layer_initialize
   445 ;; This function is called by:
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text1
   451   001692                     __ptext1:
   452                           	callstack 0
   453   001692                     _app_init:
   454                           	callstack 25
   455   001692                     
   456                           ;appplication.c: 26:     ecu_layer_initialize();
   457   001692  EC3A  F00B         	call	_ecu_layer_initialize	;wreg free
   458   001696  0012               	return		;funcret
   459   001698                     __end_of_app_init:
   460                           	callstack 0
   461                           
   462 ;; *************** function _ecu_layer_initialize *****************
   463 ;; Defined at:
   464 ;;		line 84 in file "ECU_Layer/ecu_layer_init.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;  ret             1    0        unsigned char 
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;Total ram usage:        0 bytes
   483 ;; Hardware stack levels used: 1
   484 ;; Hardware stack levels required when called: 4
   485 ;; This function calls:
   486 ;;		_lcd_4bit_initialize
   487 ;;		_lcd_8bit_initialize
   488 ;; This function is called by:
   489 ;;		_app_init
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           	psect	text2
   494   001674                     __ptext2:
   495                           	callstack 0
   496   001674                     _ecu_layer_initialize:
   497                           	callstack 25
   498   001674  0E29               	movlw	low _lcd_1
   499   001676  6E3D               	movwf	lcd_4bit_initialize@lcd^0,c
   500   001678  EC94  F009         	call	_lcd_4bit_initialize	;wreg free
   501   00167C  0E1F               	movlw	low _lcd_2
   502   00167E  6E3F               	movwf	lcd_8bit_initialize@lcd^0,c
   503   001680  EC26  F009         	call	_lcd_8bit_initialize	;wreg free
   504   001684  0012               	return		;funcret
   505   001686                     __end_of_ecu_layer_initialize:
   506                           	callstack 0
   507                           
   508 ;; *************** function _lcd_8bit_initialize *****************
   509 ;; Defined at:
   510 ;;		line 205 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;  lcd             1   16[COMRAM] PTR const struct .
   513 ;;		 -> lcd_2(10), 
   514 ;; Auto vars:     Size  Location     Type
   515 ;;  ret             1   19[COMRAM] unsigned char 
   516 ;;  l_data_pins_    1   18[COMRAM] unsigned char 
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      unsigned char 
   519 ;; Registers used:
   520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   526 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;Total ram usage:        4 bytes
   531 ;; Hardware stack levels used: 1
   532 ;; Hardware stack levels required when called: 3
   533 ;; This function calls:
   534 ;;		_gpio_pin_initialize
   535 ;;		_lcd_8bit_send_command
   536 ;; This function is called by:
   537 ;;		_ecu_layer_initialize
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text3
   542   00124C                     __ptext3:
   543                           	callstack 0
   544   00124C                     _lcd_8bit_initialize:
   545                           	callstack 25
   546   00124C                     
   547                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 207:     uint8 l_data_pins_counter = 0;
   548   00124C  0E00               	movlw	0
   549   00124E  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
   550                           
   551                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 208:     if(((void*)0) == lcd){
   552   001250  503F               	movf	lcd_8bit_initialize@lcd^0,w,c
   553   001252  A4D8               	btfss	status,2,c
   554   001254  EF2E  F009         	goto	u1211
   555   001258  EF30  F009         	goto	u1210
   556   00125C                     u1211:
   557   00125C  EF32  F009         	goto	l2202
   558   001260                     u1210:
   559   001260                     
   560                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 210:     }
   561   001260  EF4D  F009         	goto	l2216
   562   001264                     l2202:
   563                           
   564                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 212:         ret = gpio_pin_initialize(&(lcd->lcd_rs))
      +                          ;
   565   001264  C03F  F037         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialize@_pin_config
   566   001268  ECA2  F00A         	call	_gpio_pin_initialize	;wreg free
   567   00126C  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   568                           
   569                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 213:         ret = gpio_pin_initialize(&(lcd->lcd_en))
      +                          ;
   570   00126E  283F               	incf	lcd_8bit_initialize@lcd^0,w,c
   571   001270  6E37               	movwf	gpio_pin_initialize@_pin_config^0,c
   572   001272  ECA2  F00A         	call	_gpio_pin_initialize	;wreg free
   573   001276  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   574   001278                     
   575                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 214:         for(l_data_pins_counter = 0; l_data_pins_
      +                          counter<8; l_data_pins_counter++){
   576   001278  0E00               	movlw	0
   577   00127A  6E41               	movwf	lcd_8bit_initialize@l_data_pins_counter^0,c
   578   00127C                     l2210:
   579   00127C  503F               	movf	lcd_8bit_initialize@lcd^0,w,c
   580   00127E  2441               	addwf	lcd_8bit_initialize@l_data_pins_counter^0,w,c
   581   001280  0F02               	addlw	2
   582   001282  6E37               	movwf	gpio_pin_initialize@_pin_config^0,c
   583   001284  ECA2  F00A         	call	_gpio_pin_initialize	;wreg free
   584   001288                     
   585                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 216:         }
   586   001288  2A41               	incf	lcd_8bit_initialize@l_data_pins_counter^0,f,c
   587   00128A  0E07               	movlw	7
   588   00128C  6441               	cpfsgt	lcd_8bit_initialize@l_data_pins_counter^0,c
   589   00128E  EF4B  F009         	goto	u1221
   590   001292  EF4D  F009         	goto	u1220
   591   001296                     u1221:
   592   001296  EF3E  F009         	goto	l2210
   593   00129A                     u1220:
   594   00129A                     l2216:
   595                           
   596                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 218:     _delay((unsigned long)((20)*(4000000UL/4000.0
      +                          )));
   597   00129A  0E1A               	movlw	26
   598   00129C  6E40               	movwf	??_lcd_8bit_initialize^0,c
   599   00129E  0EF8               	movlw	248
   600   0012A0                     u1707:
   601   0012A0  2EE8               	decfsz	wreg,f,c
   602   0012A2  D7FE               	bra	u1707
   603   0012A4  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
   604   0012A6  D7FC               	bra	u1707
   605   0012A8  D000               	nop2	
   606   0012AA  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   607   0012AE  0E38               	movlw	56
   608   0012B0  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   609   0012B2  EC02  F00A         	call	_lcd_8bit_send_command	;wreg free
   610   0012B6                     
   611                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 220:     _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
   612   0012B6  D000               	nop2		;2 cycle nop
   613   0012B8  D000               	nop2		;2 cycle nop
   614   0012BA  0000               	nop	
   615   0012BC  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   616   0012C0  0E38               	movlw	56
   617   0012C2  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   618   0012C4  EC02  F00A         	call	_lcd_8bit_send_command	;wreg free
   619                           
   620                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 222:     _delay((unsigned long)((150)*(4000000UL/40000
      +                          00.0)));
   621   0012C8  0E32               	movlw	50
   622   0012CA                     u1717:
   623   0012CA  2EE8               	decfsz	wreg,f,c
   624   0012CC  D7FE               	bra	u1717
   625   0012CE  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   626   0012D2  0E38               	movlw	56
   627   0012D4  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   628   0012D6  EC02  F00A         	call	_lcd_8bit_send_command	;wreg free
   629   0012DA  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   630   0012DE  0E01               	movlw	1
   631   0012E0  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   632   0012E2  EC02  F00A         	call	_lcd_8bit_send_command	;wreg free
   633   0012E6  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   634   0012EA  0E02               	movlw	2
   635   0012EC  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   636   0012EE  EC02  F00A         	call	_lcd_8bit_send_command	;wreg free
   637   0012F2  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   638   0012F6  0E06               	movlw	6
   639   0012F8  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   640   0012FA  EC02  F00A         	call	_lcd_8bit_send_command	;wreg free
   641   0012FE  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   642   001302  0E0C               	movlw	12
   643   001304  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   644   001306  EC02  F00A         	call	_lcd_8bit_send_command	;wreg free
   645   00130A  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   646   00130E  0E38               	movlw	56
   647   001310  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   648   001312  EC02  F00A         	call	_lcd_8bit_send_command	;wreg free
   649   001316                     
   650                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 230:     ret = lcd_8bit_send_command(lcd, 0x80);
   651   001316  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
   652   00131A  0E80               	movlw	128
   653   00131C  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   654   00131E  EC02  F00A         	call	_lcd_8bit_send_command	;wreg free
   655   001322  6E42               	movwf	lcd_8bit_initialize@ret^0,c
   656   001324                     
   657                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 231:     return ret;
   658   001324  5042               	movf	lcd_8bit_initialize@ret^0,w,c
   659   001326  0012               	return		;funcret
   660   001328                     __end_of_lcd_8bit_initialize:
   661                           	callstack 0
   662                           
   663 ;; *************** function _lcd_8bit_send_command *****************
   664 ;; Defined at:
   665 ;;		line 242 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;  lcd             1   10[COMRAM] PTR const struct .
   668 ;;		 -> lcd_2(10), 
   669 ;;  command         1   11[COMRAM] unsigned char 
   670 ;; Auto vars:     Size  Location     Type
   671 ;;  cnt             1   15[COMRAM] unsigned char 
   672 ;;  ret             1   14[COMRAM] unsigned char 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      unsigned char 
   675 ;; Registers used:
   676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;Total ram usage:        6 bytes
   687 ;; Hardware stack levels used: 1
   688 ;; Hardware stack levels required when called: 2
   689 ;; This function calls:
   690 ;;		_gpio_pin_write_logic
   691 ;;		_lcd_8bit_send_enable_signal
   692 ;; This function is called by:
   693 ;;		_lcd_8bit_initialize
   694 ;;		_lcd_8bit_send_custom_char
   695 ;;		_lcd_8bit_set_cursor
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text4
   700   001404                     __ptext4:
   701                           	callstack 0
   702   001404                     _lcd_8bit_send_command:
   703                           	callstack 25
   704   001404                     
   705                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 244:     uint8 cnt = 0;
   706   001404  0E00               	movlw	0
   707   001406  6E3E               	movwf	lcd_8bit_send_command@cnt^0,c
   708                           
   709                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 245:     if(((void*)0) == lcd){
   710   001408  5039               	movf	lcd_8bit_send_command@lcd^0,w,c
   711   00140A  A4D8               	btfss	status,2,c
   712   00140C  EF0A  F00A         	goto	u1161
   713   001410  EF0C  F00A         	goto	u1160
   714   001414                     u1161:
   715   001414  EF10  F00A         	goto	l2134
   716   001418                     u1160:
   717   001418                     
   718                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 246:         ret = (Std_ReturnType)0x00;
   719   001418  0E00               	movlw	0
   720   00141A  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
   721                           
   722                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 247:     }
   723   00141C  EF3B  F00A         	goto	l2150
   724   001420                     l2134:
   725   001420  C039  F02F         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
   726   001424  0E00               	movlw	0
   727   001426  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   728   001428  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
   729   00142C                     
   730                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 250:         for(cnt=0; cnt<8; cnt++)
   731   00142C  0E00               	movlw	0
   732   00142E  6E3E               	movwf	lcd_8bit_send_command@cnt^0,c
   733   001430                     l2142:
   734   001430  5039               	movf	lcd_8bit_send_command@lcd^0,w,c
   735   001432  243E               	addwf	lcd_8bit_send_command@cnt^0,w,c
   736   001434  0F02               	addlw	2
   737   001436  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   738   001438  C03E  F03B         	movff	lcd_8bit_send_command@cnt,??_lcd_8bit_send_command
   739   00143C  C03A  F03C         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
   740   001440  2A3B               	incf	??_lcd_8bit_send_command^0,f,c
   741   001442  EF25  F00A         	goto	u1174
   742   001446                     u1175:
   743   001446  90D8               	bcf	status,0,c
   744   001448  323C               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
   745   00144A                     u1174:
   746   00144A  2E3B               	decfsz	??_lcd_8bit_send_command^0,f,c
   747   00144C  EF23  F00A         	goto	u1175
   748   001450  503C               	movf	(??_lcd_8bit_send_command+1)^0,w,c
   749   001452  0B01               	andlw	1
   750   001454  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   751   001456  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
   752   00145A                     
   753                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 253:         }
   754   00145A  2A3E               	incf	lcd_8bit_send_command@cnt^0,f,c
   755   00145C  0E07               	movlw	7
   756   00145E  643E               	cpfsgt	lcd_8bit_send_command@cnt^0,c
   757   001460  EF34  F00A         	goto	u1181
   758   001464  EF36  F00A         	goto	u1180
   759   001468                     u1181:
   760   001468  EF18  F00A         	goto	l2142
   761   00146C                     u1180:
   762   00146C                     
   763                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 254:         ret = lcd_8bit_send_enable_signal(lcd);
   764   00146C  C039  F037         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
   765   001470  ECCC  F00A         	call	_lcd_8bit_send_enable_signal	;wreg free
   766   001474  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
   767   001476                     l2150:
   768                           
   769                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 256:     return ret;
   770   001476  503D               	movf	lcd_8bit_send_command@ret^0,w,c
   771   001478  0012               	return		;funcret
   772   00147A                     __end_of_lcd_8bit_send_command:
   773                           	callstack 0
   774                           
   775 ;; *************** function _lcd_8bit_send_enable_signal *****************
   776 ;; Defined at:
   777 ;;		line 455 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  lcd             1    8[COMRAM] PTR const struct .
   780 ;;		 -> lcd_2(10), 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  ret             1    9[COMRAM] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      unsigned char 
   785 ;; Registers used:
   786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   792 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;Total ram usage:        2 bytes
   797 ;; Hardware stack levels used: 1
   798 ;; Hardware stack levels required when called: 1
   799 ;; This function calls:
   800 ;;		_gpio_pin_write_logic
   801 ;; This function is called by:
   802 ;;		_lcd_8bit_send_command
   803 ;;		_lcd_8bit_send_char_data
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text5
   808   001598                     __ptext5:
   809                           	callstack 0
   810   001598                     _lcd_8bit_send_enable_signal:
   811                           	callstack 25
   812   001598                     
   813                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 457:     if(((void*)0) == lcd){
   814   001598  5037               	movf	lcd_8bit_send_enable_signal@lcd^0,w,c
   815   00159A  A4D8               	btfss	status,2,c
   816   00159C  EFD2  F00A         	goto	u1121
   817   0015A0  EFD4  F00A         	goto	u1120
   818   0015A4                     u1121:
   819   0015A4  EFD8  F00A         	goto	l2100
   820   0015A8                     u1120:
   821   0015A8                     
   822                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 458:         ret = (Std_ReturnType)0x00;
   823   0015A8  0E00               	movlw	0
   824   0015AA  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
   825                           
   826                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 459:     }
   827   0015AC  EFE8  F00A         	goto	l2104
   828   0015B0                     l2100:
   829   0015B0  2837               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
   830   0015B2  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   831   0015B4  0E01               	movlw	1
   832   0015B6  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   833   0015B8  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
   834   0015BC                     
   835                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 462:         _delay((unsigned long)((5)*(4000000UL/400
      +                          0000.0)));
   836   0015BC  D000               	nop2		;2 cycle nop
   837   0015BE  D000               	nop2		;2 cycle nop
   838   0015C0  0000               	nop	
   839                           
   840                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 463:         ret = gpio_pin_write_logic(&(lcd->lcd_en)
      +                          , GPIO_LOW);
   841   0015C2  2837               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
   842   0015C4  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   843   0015C6  0E00               	movlw	0
   844   0015C8  6E30               	movwf	gpio_pin_write_logic@logic^0,c
   845   0015CA  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
   846   0015CE  6E38               	movwf	lcd_8bit_send_enable_signal@ret^0,c
   847   0015D0                     l2104:
   848                           
   849                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 465:     return ret;
   850   0015D0  5038               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
   851   0015D2  0012               	return		;funcret
   852   0015D4                     __end_of_lcd_8bit_send_enable_signal:
   853                           	callstack 0
   854                           
   855 ;; *************** function _lcd_4bit_initialize *****************
   856 ;; Defined at:
   857 ;;		line 24 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  lcd             1   14[COMRAM] PTR const struct .
   860 ;;		 -> lcd_1(6), 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  ret             1   17[COMRAM] unsigned char 
   863 ;;  l_data_pins_    1   16[COMRAM] unsigned char 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      unsigned char 
   866 ;; Registers used:
   867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   873 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;Total ram usage:        4 bytes
   878 ;; Hardware stack levels used: 1
   879 ;; Hardware stack levels required when called: 3
   880 ;; This function calls:
   881 ;;		_gpio_pin_initialize
   882 ;;		_lcd_4bit_send_command
   883 ;; This function is called by:
   884 ;;		_ecu_layer_initialize
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           	psect	text6
   889   001328                     __ptext6:
   890                           	callstack 0
   891   001328                     _lcd_4bit_initialize:
   892                           	callstack 25
   893   001328                     
   894                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 26:     uint8 l_data_pins_counter = 0;
   895   001328  0E00               	movlw	0
   896   00132A  6E3F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
   897                           
   898                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 27:     if(((void*)0) == lcd){
   899   00132C  503D               	movf	lcd_4bit_initialize@lcd^0,w,c
   900   00132E  A4D8               	btfss	status,2,c
   901   001330  EF9C  F009         	goto	u1191
   902   001334  EF9E  F009         	goto	u1190
   903   001338                     u1191:
   904   001338  EFA0  F009         	goto	l2158
   905   00133C                     u1190:
   906   00133C                     
   907                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 29:     }
   908   00133C  EFBB  F009         	goto	l2172
   909   001340                     l2158:
   910                           
   911                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 31:         ret = gpio_pin_initialize(&(lcd->lcd_rs));
   912   001340  C03D  F037         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@_pin_config
   913   001344  ECA2  F00A         	call	_gpio_pin_initialize	;wreg free
   914   001348  6E40               	movwf	lcd_4bit_initialize@ret^0,c
   915                           
   916                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 32:         ret = gpio_pin_initialize(&(lcd->lcd_en));
   917   00134A  283D               	incf	lcd_4bit_initialize@lcd^0,w,c
   918   00134C  6E37               	movwf	gpio_pin_initialize@_pin_config^0,c
   919   00134E  ECA2  F00A         	call	_gpio_pin_initialize	;wreg free
   920   001352  6E40               	movwf	lcd_4bit_initialize@ret^0,c
   921   001354                     
   922                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 33:         for(l_data_pins_counter = 0; l_data_pins_c
      +                          ounter<4; l_data_pins_counter++){
   923   001354  0E00               	movlw	0
   924   001356  6E3F               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
   925   001358                     l2166:
   926   001358  503D               	movf	lcd_4bit_initialize@lcd^0,w,c
   927   00135A  243F               	addwf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
   928   00135C  0F02               	addlw	2
   929   00135E  6E37               	movwf	gpio_pin_initialize@_pin_config^0,c
   930   001360  ECA2  F00A         	call	_gpio_pin_initialize	;wreg free
   931   001364                     
   932                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:         }
   933   001364  2A3F               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
   934   001366  0E03               	movlw	3
   935   001368  643F               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
   936   00136A  EFB9  F009         	goto	u1201
   937   00136E  EFBB  F009         	goto	u1200
   938   001372                     u1201:
   939   001372  EFAC  F009         	goto	l2166
   940   001376                     u1200:
   941   001376                     l2172:
   942                           
   943                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 37:     _delay((unsigned long)((20)*(4000000UL/4000.0)
      +                          ));
   944   001376  0E1A               	movlw	26
   945   001378  6E3E               	movwf	??_lcd_4bit_initialize^0,c
   946   00137A  0EF8               	movlw	248
   947   00137C                     u1727:
   948   00137C  2EE8               	decfsz	wreg,f,c
   949   00137E  D7FE               	bra	u1727
   950   001380  2E3E               	decfsz	??_lcd_4bit_initialize^0,f,c
   951   001382  D7FC               	bra	u1727
   952   001384  D000               	nop2	
   953   001386  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
   954   00138A  0E38               	movlw	56
   955   00138C  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   956   00138E  EC74  F00A         	call	_lcd_4bit_send_command	;wreg free
   957   001392                     
   958                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 39:     _delay((unsigned long)((5)*(4000000UL/4000000.
      +                          0)));
   959   001392  D000               	nop2		;2 cycle nop
   960   001394  D000               	nop2		;2 cycle nop
   961   001396  0000               	nop	
   962   001398  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
   963   00139C  0E38               	movlw	56
   964   00139E  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   965   0013A0  EC74  F00A         	call	_lcd_4bit_send_command	;wreg free
   966                           
   967                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 41:     _delay((unsigned long)((150)*(4000000UL/400000
      +                          0.0)));
   968   0013A4  0E32               	movlw	50
   969   0013A6                     u1737:
   970   0013A6  2EE8               	decfsz	wreg,f,c
   971   0013A8  D7FE               	bra	u1737
   972   0013AA  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
   973   0013AE  0E38               	movlw	56
   974   0013B0  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   975   0013B2  EC74  F00A         	call	_lcd_4bit_send_command	;wreg free
   976   0013B6  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
   977   0013BA  0E01               	movlw	1
   978   0013BC  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   979   0013BE  EC74  F00A         	call	_lcd_4bit_send_command	;wreg free
   980   0013C2  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
   981   0013C6  0E02               	movlw	2
   982   0013C8  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   983   0013CA  EC74  F00A         	call	_lcd_4bit_send_command	;wreg free
   984   0013CE  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
   985   0013D2  0E06               	movlw	6
   986   0013D4  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   987   0013D6  EC74  F00A         	call	_lcd_4bit_send_command	;wreg free
   988   0013DA  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
   989   0013DE  0E0C               	movlw	12
   990   0013E0  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   991   0013E2  EC74  F00A         	call	_lcd_4bit_send_command	;wreg free
   992   0013E6  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
   993   0013EA  0E28               	movlw	40
   994   0013EC  6E3B               	movwf	lcd_4bit_send_command@command^0,c
   995   0013EE  EC74  F00A         	call	_lcd_4bit_send_command	;wreg free
   996   0013F2                     
   997                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 49:     ret = lcd_4bit_send_command(lcd, 0x80);
   998   0013F2  C03D  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
   999   0013F6  0E80               	movlw	128
  1000   0013F8  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1001   0013FA  EC74  F00A         	call	_lcd_4bit_send_command	;wreg free
  1002   0013FE  6E40               	movwf	lcd_4bit_initialize@ret^0,c
  1003   001400                     
  1004                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 50:     return ret;
  1005   001400  5040               	movf	lcd_4bit_initialize@ret^0,w,c
  1006   001402  0012               	return		;funcret
  1007   001404                     __end_of_lcd_4bit_initialize:
  1008                           	callstack 0
  1009                           
  1010 ;; *************** function _lcd_4bit_send_command *****************
  1011 ;; Defined at:
  1012 ;;		line 61 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;  lcd             1   11[COMRAM] PTR const struct .
  1015 ;;		 -> lcd_1(6), 
  1016 ;;  command         1   12[COMRAM] unsigned char 
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;  ret             1   13[COMRAM] unsigned char 
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      unsigned char 
  1021 ;; Registers used:
  1022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1028 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;Total ram usage:        3 bytes
  1033 ;; Hardware stack levels used: 1
  1034 ;; Hardware stack levels required when called: 2
  1035 ;; This function calls:
  1036 ;;		_gpio_pin_write_logic
  1037 ;;		_lcd_4bit_send_enable_signal
  1038 ;;		_lcd_send_4bits
  1039 ;; This function is called by:
  1040 ;;		_lcd_4bit_initialize
  1041 ;;		_lcd_4bit_send_custom_char
  1042 ;;		_lcd_4bit_set_cursor
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text7
  1047   0014E8                     __ptext7:
  1048                           	callstack 0
  1049   0014E8                     _lcd_4bit_send_command:
  1050                           	callstack 25
  1051   0014E8                     
  1052                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 63:     if(((void*)0) == lcd){
  1053   0014E8  503A               	movf	lcd_4bit_send_command@lcd^0,w,c
  1054   0014EA  A4D8               	btfss	status,2,c
  1055   0014EC  EF7A  F00A         	goto	u1151
  1056   0014F0  EF7C  F00A         	goto	u1150
  1057   0014F4                     u1151:
  1058   0014F4  EF80  F00A         	goto	l2124
  1059   0014F8                     u1150:
  1060   0014F8                     
  1061                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 64:         ret = (Std_ReturnType)0x00;
  1062   0014F8  0E00               	movlw	0
  1063   0014FA  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1064                           
  1065                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 65:     }
  1066   0014FC  EFA0  F00A         	goto	l2126
  1067   001500                     l2124:
  1068                           
  1069                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 67:         ret = gpio_pin_write_logic(&(lcd->lcd_rs),
      +                           GPIO_LOW);
  1070   001500  C03A  F02F         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1071   001504  0E00               	movlw	0
  1072   001506  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1073   001508  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
  1074   00150C  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1075                           
  1076                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 68:         ret = lcd_send_4bits(lcd, (command >> 4));
  1077   00150E  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1078   001512  383B               	swapf	lcd_4bit_send_command@command^0,w,c
  1079   001514  0B0F               	andlw	15
  1080   001516  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  1081   001518  EC3D  F00A         	call	_lcd_send_4bits	;wreg free
  1082   00151C  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1083                           
  1084                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 69:         ret = lcd_4bit_send_enable_signal(lcd);
  1085   00151E  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  1086   001522  ECEA  F00A         	call	_lcd_4bit_send_enable_signal	;wreg free
  1087   001526  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1088                           
  1089                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:         ret = lcd_send_4bits(lcd, command);
  1090   001528  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1091   00152C  C03B  F038         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  1092   001530  EC3D  F00A         	call	_lcd_send_4bits	;wreg free
  1093   001534  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1094                           
  1095                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 71:         ret = lcd_4bit_send_enable_signal(lcd);
  1096   001536  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  1097   00153A  ECEA  F00A         	call	_lcd_4bit_send_enable_signal	;wreg free
  1098   00153E  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  1099   001540                     l2126:
  1100                           
  1101                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 73:     return ret;
  1102   001540  503C               	movf	lcd_4bit_send_command@ret^0,w,c
  1103   001542  0012               	return		;funcret
  1104   001544                     __end_of_lcd_4bit_send_command:
  1105                           	callstack 0
  1106                           
  1107 ;; *************** function _lcd_send_4bits *****************
  1108 ;; Defined at:
  1109 ;;		line 392 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  lcd             1    8[COMRAM] PTR const struct .
  1112 ;;		 -> lcd_1(6), 
  1113 ;;  _data_comman    1    9[COMRAM] unsigned char 
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  ret             1   10[COMRAM] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      unsigned char 
  1118 ;; Registers used:
  1119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;Total ram usage:        3 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; Hardware stack levels required when called: 1
  1132 ;; This function calls:
  1133 ;;		_gpio_pin_write_logic
  1134 ;; This function is called by:
  1135 ;;		_lcd_4bit_send_command
  1136 ;;		_lcd_4bit_send_char_data
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text8
  1141   00147A                     __ptext8:
  1142                           	callstack 0
  1143   00147A                     _lcd_send_4bits:
  1144                           	callstack 25
  1145   00147A                     
  1146                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 394:     if(((void*)0) == lcd){
  1147   00147A  5037               	movf	lcd_send_4bits@lcd^0,w,c
  1148   00147C  A4D8               	btfss	status,2,c
  1149   00147E  EF43  F00A         	goto	u1101
  1150   001482  EF45  F00A         	goto	u1100
  1151   001486                     u1101:
  1152   001486  EF49  F00A         	goto	l2078
  1153   00148A                     u1100:
  1154   00148A                     
  1155                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 395:         ret = (Std_ReturnType)0x00;
  1156   00148A  0E00               	movlw	0
  1157   00148C  6E39               	movwf	lcd_send_4bits@ret^0,c
  1158                           
  1159                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 396:     }
  1160   00148E  EF72  F00A         	goto	l2080
  1161   001492                     l2078:
  1162                           
  1163                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 398:         ret = gpio_pin_write_logic(&(lcd->lcd_dat
      +                          a[0]), (_data_command >> 0) & (uint8)0x01);
  1164   001492  5037               	movf	lcd_send_4bits@lcd^0,w,c
  1165   001494  0F02               	addlw	2
  1166   001496  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1167   001498  5038               	movf	lcd_send_4bits@_data_command^0,w,c
  1168   00149A  0B01               	andlw	1
  1169   00149C  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1170   00149E  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
  1171   0014A2  6E39               	movwf	lcd_send_4bits@ret^0,c
  1172                           
  1173                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 399:         ret &= gpio_pin_write_logic(&(lcd->lcd_da
      +                          ta[1]), (_data_command >> 1) & (uint8)0x01);
  1174   0014A4  5037               	movf	lcd_send_4bits@lcd^0,w,c
  1175   0014A6  0F03               	addlw	3
  1176   0014A8  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1177   0014AA  90D8               	bcf	status,0,c
  1178   0014AC  3038               	rrcf	lcd_send_4bits@_data_command^0,w,c
  1179   0014AE  0B01               	andlw	1
  1180   0014B0  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1181   0014B2  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
  1182   0014B6  1639               	andwf	lcd_send_4bits@ret^0,f,c
  1183                           
  1184                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 400:         ret &= gpio_pin_write_logic(&(lcd->lcd_da
      +                          ta[2]), (_data_command >> 2) & (uint8)0x01);
  1185   0014B8  5037               	movf	lcd_send_4bits@lcd^0,w,c
  1186   0014BA  0F04               	addlw	4
  1187   0014BC  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1188   0014BE  4038               	rrncf	lcd_send_4bits@_data_command^0,w,c
  1189   0014C0  42E8               	rrncf	wreg,f,c
  1190   0014C2  0B3F               	andlw	63
  1191   0014C4  0B01               	andlw	1
  1192   0014C6  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1193   0014C8  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
  1194   0014CC  1639               	andwf	lcd_send_4bits@ret^0,f,c
  1195                           
  1196                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 401:         ret &= gpio_pin_write_logic(&(lcd->lcd_da
      +                          ta[3]), (_data_command >> 3) & (uint8)0x01);
  1197   0014CE  5037               	movf	lcd_send_4bits@lcd^0,w,c
  1198   0014D0  0F05               	addlw	5
  1199   0014D2  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1200   0014D4  3838               	swapf	lcd_send_4bits@_data_command^0,w,c
  1201   0014D6  46E8               	rlncf	wreg,f,c
  1202   0014D8  0B1F               	andlw	31
  1203   0014DA  0B01               	andlw	1
  1204   0014DC  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1205   0014DE  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
  1206   0014E2  1639               	andwf	lcd_send_4bits@ret^0,f,c
  1207   0014E4                     l2080:
  1208                           
  1209                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 403:     return ret;
  1210   0014E4  5039               	movf	lcd_send_4bits@ret^0,w,c
  1211   0014E6  0012               	return		;funcret
  1212   0014E8                     __end_of_lcd_send_4bits:
  1213                           	callstack 0
  1214                           
  1215 ;; *************** function _lcd_4bit_send_enable_signal *****************
  1216 ;; Defined at:
  1217 ;;		line 413 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  lcd             1    8[COMRAM] PTR const struct .
  1220 ;;		 -> lcd_1(6), 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  ret             1    9[COMRAM] unsigned char 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      unsigned char 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1232 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;Total ram usage:        2 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; Hardware stack levels required when called: 1
  1239 ;; This function calls:
  1240 ;;		_gpio_pin_write_logic
  1241 ;; This function is called by:
  1242 ;;		_lcd_4bit_send_command
  1243 ;;		_lcd_4bit_send_char_data
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text9
  1248   0015D4                     __ptext9:
  1249                           	callstack 0
  1250   0015D4                     _lcd_4bit_send_enable_signal:
  1251                           	callstack 25
  1252   0015D4                     
  1253                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 415:     if(((void*)0) == lcd){
  1254   0015D4  5037               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  1255   0015D6  A4D8               	btfss	status,2,c
  1256   0015D8  EFF0  F00A         	goto	u1111
  1257   0015DC  EFF2  F00A         	goto	u1110
  1258   0015E0                     u1111:
  1259   0015E0  EFF6  F00A         	goto	l2088
  1260   0015E4                     u1110:
  1261   0015E4                     
  1262                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 416:         ret = (Std_ReturnType)0x00;
  1263   0015E4  0E00               	movlw	0
  1264   0015E6  6E38               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  1265                           
  1266                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 417:     }
  1267   0015E8  EF06  F00B         	goto	l2092
  1268   0015EC                     l2088:
  1269   0015EC  2837               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  1270   0015EE  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1271   0015F0  0E01               	movlw	1
  1272   0015F2  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1273   0015F4  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
  1274   0015F8                     
  1275                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 420:         _delay((unsigned long)((5)*(4000000UL/400
      +                          0000.0)));
  1276   0015F8  D000               	nop2		;2 cycle nop
  1277   0015FA  D000               	nop2		;2 cycle nop
  1278   0015FC  0000               	nop	
  1279                           
  1280                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 421:         ret = gpio_pin_write_logic(&(lcd->lcd_en)
      +                          , GPIO_LOW);
  1281   0015FE  2837               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  1282   001600  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1283   001602  0E00               	movlw	0
  1284   001604  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1285   001606  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
  1286   00160A  6E38               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  1287   00160C                     l2092:
  1288                           
  1289                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 423:     return ret;
  1290   00160C  5038               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  1291   00160E  0012               	return		;funcret
  1292   001610                     __end_of_lcd_4bit_send_enable_signal:
  1293                           	callstack 0
  1294                           
  1295 ;; *************** function _gpio_pin_initialize *****************
  1296 ;; Defined at:
  1297 ;;		line 134 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  _pin_config     1    8[COMRAM] PTR struct .
  1300 ;;		 -> lcd_2$lcd_data(8), lcd_2$lcd_en(1), lcd_2$lcd_rs(1), lcd_2(10), 
  1301 ;;		 -> lcd_1$lcd_data(4), lcd_1$lcd_en(1), lcd_1$lcd_rs(1), lcd_1(6), 
  1302 ;;		 -> led_initialize@pin_obj(1), 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  ret             1   10[COMRAM] unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      unsigned char 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1314 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;Total ram usage:        3 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; Hardware stack levels required when called: 1
  1321 ;; This function calls:
  1322 ;;		_gpio_pin_direction_initialize
  1323 ;;		_gpio_pin_write_logic
  1324 ;; This function is called by:
  1325 ;;		_lcd_4bit_initialize
  1326 ;;		_lcd_8bit_initialize
  1327 ;;		_keypad_initialize
  1328 ;;		_led_initialize
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text10
  1333   001544                     __ptext10:
  1334                           	callstack 0
  1335   001544                     _gpio_pin_initialize:
  1336                           	callstack 26
  1337   001544                     
  1338                           ;MCAL_Layer/GPIO/hal_gpio.c: 136:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           (8 - 1))
  1339   001544  5037               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1340   001546  B4D8               	btfsc	status,2,c
  1341   001548  EFA8  F00A         	goto	u1131
  1342   00154C  EFAA  F00A         	goto	u1130
  1343   001550                     u1131:
  1344   001550  EFBA  F00A         	goto	l2112
  1345   001554                     u1130:
  1346   001554  5037               	movf	gpio_pin_initialize@_pin_config^0,w,c
  1347   001556  6ED9               	movwf	fsr2l,c
  1348   001558  6ADA               	clrf	fsr2h,c
  1349   00155A  30DF               	rrcf	223,w,c
  1350   00155C  32E8               	rrcf	wreg,f,c
  1351   00155E  32E8               	rrcf	wreg,f,c
  1352   001560  0B07               	andlw	7
  1353   001562  6E38               	movwf	??_gpio_pin_initialize^0,c
  1354   001564  0E07               	movlw	7
  1355   001566  6438               	cpfsgt	??_gpio_pin_initialize^0,c
  1356   001568  EFB8  F00A         	goto	u1141
  1357   00156C  EFBA  F00A         	goto	u1140
  1358   001570                     u1141:
  1359   001570  EFBE  F00A         	goto	l2114
  1360   001574                     u1140:
  1361   001574                     l2112:
  1362                           
  1363                           ;MCAL_Layer/GPIO/hal_gpio.c: 137:     {;MCAL_Layer/GPIO/hal_gpio.c: 138:         ret = (
      +                          Std_ReturnType)0x00;
  1364   001574  0E00               	movlw	0
  1365   001576  6E39               	movwf	gpio_pin_initialize@ret^0,c
  1366                           
  1367                           ;MCAL_Layer/GPIO/hal_gpio.c: 139:     }
  1368   001578  EFCA  F00A         	goto	l2116
  1369   00157C                     l2114:
  1370                           
  1371                           ;MCAL_Layer/GPIO/hal_gpio.c: 141:     {;MCAL_Layer/GPIO/hal_gpio.c: 142:         ret = g
      +                          pio_pin_direction_initialize(_pin_config);
  1372   00157C  C037  F02F         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  1373   001580  EC0B  F008         	call	_gpio_pin_direction_initialize	;wreg free
  1374   001584  6E39               	movwf	gpio_pin_initialize@ret^0,c
  1375                           
  1376                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:         ret = gpio_pin_write_logic(_pin_config, GPIO_L
      +                          OW);
  1377   001586  C037  F02F         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  1378   00158A  0E00               	movlw	0
  1379   00158C  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1380   00158E  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
  1381   001592  6E39               	movwf	gpio_pin_initialize@ret^0,c
  1382   001594                     l2116:
  1383                           
  1384                           ;MCAL_Layer/GPIO/hal_gpio.c: 145:     return ret;
  1385   001594  5039               	movf	gpio_pin_initialize@ret^0,w,c
  1386   001596  0012               	return		;funcret
  1387   001598                     __end_of_gpio_pin_initialize:
  1388                           	callstack 0
  1389                           
  1390 ;; *************** function _gpio_pin_write_logic *****************
  1391 ;; Defined at:
  1392 ;;		line 78 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  _pin_config     1    0[COMRAM] PTR struct .
  1395 ;;		 -> lcd_2$lcd_data(8), lcd_2$lcd_en(1), lcd_2$lcd_rs(1), lcd_2(10), 
  1396 ;;		 -> lcd_1$lcd_data(4), lcd_1$lcd_en(1), lcd_1$lcd_rs(1), lcd_1(6), 
  1397 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), 
  1398 ;;		 -> led_initialize@pin_obj(1), 
  1399 ;;  logic           1    1[COMRAM] enum E2978
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  ret             1    7[COMRAM] unsigned char 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      unsigned char 
  1404 ;; Registers used:
  1405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;Total ram usage:        8 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; This function calls:
  1418 ;;		Nothing
  1419 ;; This function is called by:
  1420 ;;		_gpio_pin_initialize
  1421 ;;		_lcd_4bit_send_command
  1422 ;;		_lcd_8bit_send_command
  1423 ;;		_lcd_send_4bits
  1424 ;;		_lcd_4bit_send_enable_signal
  1425 ;;		_lcd_8bit_send_enable_signal
  1426 ;;		_seven_segment_write_number
  1427 ;;		_dc_motor_move_right
  1428 ;;		_dc_motor_move_left
  1429 ;;		_dc_motor_stop
  1430 ;;		_keypad_get_value
  1431 ;;		_led_turn_on
  1432 ;;		_led_turn_off
  1433 ;;		_relay_turn_on
  1434 ;;		_relay_turn_off
  1435 ;;		_lcd_4bit_send_char_data
  1436 ;;		_lcd_8bit_send_char_data
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text11
  1441   00113C                     __ptext11:
  1442                           	callstack 0
  1443   00113C                     _gpio_pin_write_logic:
  1444                           	callstack 25
  1445   00113C                     
  1446                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  1447   00113C  0E01               	movlw	1
  1448   00113E  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1449                           
  1450                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          (8 - 1))
  1451   001140  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1452   001142  B4D8               	btfsc	status,2,c
  1453   001144  EFA6  F008         	goto	u1001
  1454   001148  EFA8  F008         	goto	u1000
  1455   00114C                     u1001:
  1456   00114C  EFB8  F008         	goto	l2034
  1457   001150                     u1000:
  1458   001150  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1459   001152  6ED9               	movwf	fsr2l,c
  1460   001154  6ADA               	clrf	fsr2h,c
  1461   001156  30DF               	rrcf	223,w,c
  1462   001158  32E8               	rrcf	wreg,f,c
  1463   00115A  32E8               	rrcf	wreg,f,c
  1464   00115C  0B07               	andlw	7
  1465   00115E  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1466   001160  0E07               	movlw	7
  1467   001162  6431               	cpfsgt	??_gpio_pin_write_logic^0,c
  1468   001164  EFB6  F008         	goto	u1011
  1469   001168  EFB8  F008         	goto	u1010
  1470   00116C                     u1011:
  1471   00116C  EF0F  F009         	goto	l2042
  1472   001170                     u1010:
  1473   001170                     l2034:
  1474                           
  1475                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:     {;MCAL_Layer/GPIO/hal_gpio.c: 82:         ret = (St
      +                          d_ReturnType)0x00;
  1476   001170  0E00               	movlw	0
  1477   001172  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1478                           
  1479                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:     }
  1480   001174  EF24  F009         	goto	l2044
  1481   001178                     l2036:
  1482                           
  1483                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:                 (*lat_registers[_pin_config->port] &= ~
      +                          (((uint8)1) << _pin_config->pin));
  1484   001178  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1485   00117A  6ED9               	movwf	fsr2l,c
  1486   00117C  6ADA               	clrf	fsr2h,c
  1487   00117E  30DF               	rrcf	223,w,c
  1488   001180  32E8               	rrcf	wreg,f,c
  1489   001182  32E8               	rrcf	wreg,f,c
  1490   001184  0B07               	andlw	7
  1491   001186  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1492   001188  0E01               	movlw	1
  1493   00118A  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1494   00118C  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  1495   00118E  EFCB  F008         	goto	u1024
  1496   001192                     u1025:
  1497   001192  90D8               	bcf	status,0,c
  1498   001194  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1499   001196                     u1024:
  1500   001196  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  1501   001198  EFC9  F008         	goto	u1025
  1502   00119C  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1503   00119E  0AFF               	xorlw	255
  1504   0011A0  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1505   0011A2  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1506   0011A4  6ED9               	movwf	fsr2l,c
  1507   0011A6  6ADA               	clrf	fsr2h,c
  1508   0011A8  50DF               	movf	223,w,c
  1509   0011AA  0B07               	andlw	7
  1510   0011AC  0D02               	mullw	2
  1511   0011AE  50F3               	movf	243,w,c
  1512   0011B0  0F0B               	addlw	low _lat_registers
  1513   0011B2  6ED9               	movwf	fsr2l,c
  1514   0011B4  6ADA               	clrf	fsr2h,c
  1515   0011B6  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+3
  1516   0011BA  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+4
  1517   0011BE  C034  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1518   0011C2  C035  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1519   0011C6  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1520   0011C8  16DF               	andwf	indf2,f,c
  1521                           
  1522                           ;MCAL_Layer/GPIO/hal_gpio.c: 90:                 break;
  1523   0011CA  EF24  F009         	goto	l2044
  1524   0011CE                     l2038:
  1525                           
  1526                           ;MCAL_Layer/GPIO/hal_gpio.c: 92:                 (*lat_registers[_pin_config->port] |= (
      +                          ((uint8)1) << _pin_config->pin));
  1527   0011CE  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1528   0011D0  6ED9               	movwf	fsr2l,c
  1529   0011D2  6ADA               	clrf	fsr2h,c
  1530   0011D4  30DF               	rrcf	223,w,c
  1531   0011D6  32E8               	rrcf	wreg,f,c
  1532   0011D8  32E8               	rrcf	wreg,f,c
  1533   0011DA  0B07               	andlw	7
  1534   0011DC  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1535   0011DE  0E01               	movlw	1
  1536   0011E0  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1537   0011E2  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  1538   0011E4  EFF6  F008         	goto	u1034
  1539   0011E8                     u1035:
  1540   0011E8  90D8               	bcf	status,0,c
  1541   0011EA  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1542   0011EC                     u1034:
  1543   0011EC  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  1544   0011EE  EFF4  F008         	goto	u1035
  1545   0011F2  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1546   0011F4  6ED9               	movwf	fsr2l,c
  1547   0011F6  6ADA               	clrf	fsr2h,c
  1548   0011F8  50DF               	movf	223,w,c
  1549   0011FA  0B07               	andlw	7
  1550   0011FC  0D02               	mullw	2
  1551   0011FE  50F3               	movf	243,w,c
  1552   001200  0F0B               	addlw	low _lat_registers
  1553   001202  6ED9               	movwf	fsr2l,c
  1554   001204  6ADA               	clrf	fsr2h,c
  1555   001206  CFDE F033          	movff	postinc2,??_gpio_pin_write_logic+2
  1556   00120A  CFDD F034          	movff	postdec2,??_gpio_pin_write_logic+3
  1557   00120E  C033  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1558   001212  C034  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1559   001216  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1560   001218  12DF               	iorwf	indf2,f,c
  1561                           
  1562                           ;MCAL_Layer/GPIO/hal_gpio.c: 93:                 break;
  1563   00121A  EF24  F009         	goto	l2044
  1564   00121E                     l2042:
  1565   00121E  5030               	movf	gpio_pin_write_logic@logic^0,w,c
  1566   001220  6E31               	movwf	??_gpio_pin_write_logic^0,c
  1567   001222  6A32               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1568                           
  1569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1570                           ; Switch size 1, requested type "simple"
  1571                           ; Number of cases is 1, Range of values is 0 to 0
  1572                           ; switch strategies available:
  1573                           ; Name         Instructions Cycles
  1574                           ; simple_byte            4     3 (average)
  1575                           ;	Chosen strategy is simple_byte
  1576   001224  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1577   001226  0A00               	xorlw	0	; case 0
  1578   001228  B4D8               	btfsc	status,2,c
  1579   00122A  EF19  F009         	goto	l2732
  1580   00122E  EFB8  F008         	goto	l2034
  1581   001232                     l2732:
  1582                           
  1583                           ; Switch size 1, requested type "simple"
  1584                           ; Number of cases is 2, Range of values is 0 to 1
  1585                           ; switch strategies available:
  1586                           ; Name         Instructions Cycles
  1587                           ; simple_byte            7     4 (average)
  1588                           ;	Chosen strategy is simple_byte
  1589   001232  5031               	movf	??_gpio_pin_write_logic^0,w,c
  1590   001234  0A00               	xorlw	0	; case 0
  1591   001236  B4D8               	btfsc	status,2,c
  1592   001238  EFBC  F008         	goto	l2036
  1593   00123C  0A01               	xorlw	1	; case 1
  1594   00123E  B4D8               	btfsc	status,2,c
  1595   001240  EFE7  F008         	goto	l2038
  1596   001244  EFB8  F008         	goto	l2034
  1597   001248                     l2044:
  1598                           
  1599                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:     return ret;
  1600   001248  5036               	movf	gpio_pin_write_logic@ret^0,w,c
  1601   00124A  0012               	return		;funcret
  1602   00124C                     __end_of_gpio_pin_write_logic:
  1603                           	callstack 0
  1604                           
  1605 ;; *************** function _gpio_pin_direction_initialize *****************
  1606 ;; Defined at:
  1607 ;;		line 22 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  _pin_config     1    0[COMRAM] PTR struct .
  1610 ;;		 -> lcd_2$lcd_data(8), lcd_2$lcd_en(1), lcd_2$lcd_rs(1), lcd_2(10), 
  1611 ;;		 -> lcd_1$lcd_data(4), lcd_1$lcd_en(1), lcd_1$lcd_rs(1), lcd_1(6), 
  1612 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  ret             1    6[COMRAM] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      unsigned char 
  1617 ;; Registers used:
  1618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1624 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;Total ram usage:        7 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_gpio_pin_initialize
  1634 ;;		_seven_segment_initialize
  1635 ;;		_button_initialize
  1636 ;;		_dc_motor_initialize
  1637 ;;		_keypad_initialize
  1638 ;;		_relay_initialize
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text12
  1643   001016                     __ptext12:
  1644                           	callstack 0
  1645   001016                     _gpio_pin_direction_initialize:
  1646                           	callstack 26
  1647   001016                     
  1648                           ;MCAL_Layer/GPIO/hal_gpio.c: 22: Std_ReturnType gpio_pin_direction_initialize(pin_config
      +                          _t *_pin_config);MCAL_Layer/GPIO/hal_gpio.c: 23: {;MCAL_Layer/GPIO/hal_gpio.c: 24:     S
      +                          td_ReturnType ret = (Std_ReturnType)0x01 ;
  1649   001016  0E01               	movlw	1
  1650   001018  6E35               	movwf	gpio_pin_direction_initialize@ret^0,c
  1651                           
  1652                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          (8 - 1))
  1653   00101A  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1654   00101C  B4D8               	btfsc	status,2,c
  1655   00101E  EF13  F008         	goto	u1041
  1656   001022  EF15  F008         	goto	u1040
  1657   001026                     u1041:
  1658   001026  EF25  F008         	goto	l2056
  1659   00102A                     u1040:
  1660   00102A  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1661   00102C  6ED9               	movwf	fsr2l,c
  1662   00102E  6ADA               	clrf	fsr2h,c
  1663   001030  30DF               	rrcf	223,w,c
  1664   001032  32E8               	rrcf	wreg,f,c
  1665   001034  32E8               	rrcf	wreg,f,c
  1666   001036  0B07               	andlw	7
  1667   001038  6E30               	movwf	??_gpio_pin_direction_initialize^0,c
  1668   00103A  0E07               	movlw	7
  1669   00103C  6430               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1670   00103E  EF23  F008         	goto	u1051
  1671   001042  EF25  F008         	goto	u1050
  1672   001046                     u1051:
  1673   001046  EF7C  F008         	goto	l2064
  1674   00104A                     u1050:
  1675   00104A                     l2056:
  1676                           
  1677                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     {;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret = (St
      +                          d_ReturnType)0x00;
  1678   00104A  0E00               	movlw	0
  1679   00104C  6E35               	movwf	gpio_pin_direction_initialize@ret^0,c
  1680                           
  1681                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }
  1682   00104E  EF9C  F008         	goto	l2066
  1683   001052                     l2058:
  1684                           
  1685                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 (*tris_registers[_pin_config->port] &= 
      +                          ~(((uint8)1) << _pin_config->pin));
  1686   001052  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1687   001054  6ED9               	movwf	fsr2l,c
  1688   001056  6ADA               	clrf	fsr2h,c
  1689   001058  30DF               	rrcf	223,w,c
  1690   00105A  32E8               	rrcf	wreg,f,c
  1691   00105C  32E8               	rrcf	wreg,f,c
  1692   00105E  0B07               	andlw	7
  1693   001060  6E30               	movwf	??_gpio_pin_direction_initialize^0,c
  1694   001062  0E01               	movlw	1
  1695   001064  6E31               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1696   001066  2A30               	incf	??_gpio_pin_direction_initialize^0,f,c
  1697   001068  EF38  F008         	goto	u1064
  1698   00106C                     u1065:
  1699   00106C  90D8               	bcf	status,0,c
  1700   00106E  3631               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1701   001070                     u1064:
  1702   001070  2E30               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1703   001072  EF36  F008         	goto	u1065
  1704   001076  5031               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1705   001078  0AFF               	xorlw	255
  1706   00107A  6E32               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1707   00107C  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1708   00107E  6ED9               	movwf	fsr2l,c
  1709   001080  6ADA               	clrf	fsr2h,c
  1710   001082  50DF               	movf	223,w,c
  1711   001084  0B07               	andlw	7
  1712   001086  0D02               	mullw	2
  1713   001088  50F3               	movf	243,w,c
  1714   00108A  0F15               	addlw	low _tris_registers
  1715   00108C  6ED9               	movwf	fsr2l,c
  1716   00108E  6ADA               	clrf	fsr2h,c
  1717   001090  CFDE F033          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1718   001094  CFDD F034          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1719   001098  C033  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1720   00109C  C034  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1721   0010A0  5032               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1722   0010A2  16DF               	andwf	indf2,f,c
  1723                           
  1724                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
  1725   0010A4  EF9C  F008         	goto	l2066
  1726   0010A8                     l2060:
  1727                           
  1728                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] |= 
      +                          (((uint8)1) << _pin_config->pin));
  1729   0010A8  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1730   0010AA  6ED9               	movwf	fsr2l,c
  1731   0010AC  6ADA               	clrf	fsr2h,c
  1732   0010AE  30DF               	rrcf	223,w,c
  1733   0010B0  32E8               	rrcf	wreg,f,c
  1734   0010B2  32E8               	rrcf	wreg,f,c
  1735   0010B4  0B07               	andlw	7
  1736   0010B6  6E30               	movwf	??_gpio_pin_direction_initialize^0,c
  1737   0010B8  0E01               	movlw	1
  1738   0010BA  6E31               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1739   0010BC  2A30               	incf	??_gpio_pin_direction_initialize^0,f,c
  1740   0010BE  EF63  F008         	goto	u1074
  1741   0010C2                     u1075:
  1742   0010C2  90D8               	bcf	status,0,c
  1743   0010C4  3631               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1744   0010C6                     u1074:
  1745   0010C6  2E30               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1746   0010C8  EF61  F008         	goto	u1075
  1747   0010CC  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1748   0010CE  6ED9               	movwf	fsr2l,c
  1749   0010D0  6ADA               	clrf	fsr2h,c
  1750   0010D2  50DF               	movf	223,w,c
  1751   0010D4  0B07               	andlw	7
  1752   0010D6  0D02               	mullw	2
  1753   0010D8  50F3               	movf	243,w,c
  1754   0010DA  0F15               	addlw	low _tris_registers
  1755   0010DC  6ED9               	movwf	fsr2l,c
  1756   0010DE  6ADA               	clrf	fsr2h,c
  1757   0010E0  CFDE F032          	movff	postinc2,??_gpio_pin_direction_initialize+2
  1758   0010E4  CFDD F033          	movff	postdec2,??_gpio_pin_direction_initialize+3
  1759   0010E8  C032  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  1760   0010EC  C033  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  1761   0010F0  5031               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1762   0010F2  12DF               	iorwf	indf2,f,c
  1763                           
  1764                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 break;
  1765   0010F4  EF9C  F008         	goto	l2066
  1766   0010F8                     l2064:
  1767   0010F8  502F               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1768   0010FA  6ED9               	movwf	fsr2l,c
  1769   0010FC  6ADA               	clrf	fsr2h,c
  1770   0010FE  BCDF               	btfsc	indf2,6,c
  1771   001100  EF84  F008         	goto	u1081
  1772   001104  EF87  F008         	goto	u1080
  1773   001108                     u1081:
  1774   001108  0E01               	movlw	1
  1775   00110A  EF88  F008         	goto	u1090
  1776   00110E                     u1080:
  1777   00110E  0E00               	movlw	0
  1778   001110                     u1090:
  1779   001110  6E30               	movwf	??_gpio_pin_direction_initialize^0,c
  1780   001112  6A31               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1781                           
  1782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1783                           ; Switch size 1, requested type "simple"
  1784                           ; Number of cases is 1, Range of values is 0 to 0
  1785                           ; switch strategies available:
  1786                           ; Name         Instructions Cycles
  1787                           ; simple_byte            4     3 (average)
  1788                           ;	Chosen strategy is simple_byte
  1789   001114  5031               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1790   001116  0A00               	xorlw	0	; case 0
  1791   001118  B4D8               	btfsc	status,2,c
  1792   00111A  EF91  F008         	goto	l2734
  1793   00111E  EF25  F008         	goto	l2056
  1794   001122                     l2734:
  1795                           
  1796                           ; Switch size 1, requested type "simple"
  1797                           ; Number of cases is 2, Range of values is 0 to 1
  1798                           ; switch strategies available:
  1799                           ; Name         Instructions Cycles
  1800                           ; simple_byte            7     4 (average)
  1801                           ;	Chosen strategy is simple_byte
  1802   001122  5030               	movf	??_gpio_pin_direction_initialize^0,w,c
  1803   001124  0A00               	xorlw	0	; case 0
  1804   001126  B4D8               	btfsc	status,2,c
  1805   001128  EF29  F008         	goto	l2058
  1806   00112C  0A01               	xorlw	1	; case 1
  1807   00112E  B4D8               	btfsc	status,2,c
  1808   001130  EF54  F008         	goto	l2060
  1809   001134  EF25  F008         	goto	l2056
  1810   001138                     l2066:
  1811                           
  1812                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:     return ret;
  1813   001138  5035               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1814   00113A  0012               	return		;funcret
  1815   00113C                     __end_of_gpio_pin_direction_initialize:
  1816                           	callstack 0
  1817                           
  1818                           	psect	rparam
  1819   000000                     
  1820                           	psect	config
  1821                           
  1822                           ; Padding undefined space
  1823   300000                     	org	3145728
  1824   300000  FF                 	db	255
  1825                           
  1826                           ;Config register CONFIG1H @ 0x300001
  1827                           ;	Oscillator Selection bits
  1828                           ;	OSC = HS, HS oscillator
  1829                           ;	Fail-Safe Clock Monitor Enable bit
  1830                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1831                           ;	Internal/External Oscillator Switchover bit
  1832                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1833   300001                     	org	3145729
  1834   300001  02                 	db	2
  1835                           
  1836                           ;Config register CONFIG2L @ 0x300002
  1837                           ;	Power-up Timer Enable bit
  1838                           ;	PWRT = OFF, PWRT disabled
  1839                           ;	Brown-out Reset Enable bits
  1840                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1841                           ;	Brown Out Reset Voltage bits
  1842                           ;	BORV = 1, 
  1843   300002                     	org	3145730
  1844   300002  09                 	db	9
  1845                           
  1846                           ;Config register CONFIG2H @ 0x300003
  1847                           ;	Watchdog Timer Enable bit
  1848                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1849                           ;	Watchdog Timer Postscale Select bits
  1850                           ;	WDTPS = 32768, 1:32768
  1851   300003                     	org	3145731
  1852   300003  1E                 	db	30
  1853                           
  1854                           ; Padding undefined space
  1855   300004                     	org	3145732
  1856   300004  FF                 	db	255
  1857                           
  1858                           ;Config register CONFIG3H @ 0x300005
  1859                           ;	CCP2 MUX bit
  1860                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1861                           ;	PORTB A/D Enable bit
  1862                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1863                           ;	Low-Power Timer1 Oscillator Enable bit
  1864                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1865                           ;	MCLR Pin Enable bit
  1866                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1867   300005                     	org	3145733
  1868   300005  81                 	db	129
  1869                           
  1870                           ;Config register CONFIG4L @ 0x300006
  1871                           ;	Stack Full/Underflow Reset Enable bit
  1872                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1873                           ;	Single-Supply ICSP Enable bit
  1874                           ;	LVP = OFF, Single-Supply ICSP disabled
  1875                           ;	Extended Instruction Set Enable bit
  1876                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1877                           ;	Background Debugger Enable bit
  1878                           ;	DEBUG = 0x1, unprogrammed default
  1879   300006                     	org	3145734
  1880   300006  81                 	db	129
  1881                           
  1882                           ; Padding undefined space
  1883   300007                     	org	3145735
  1884   300007  FF                 	db	255
  1885                           
  1886                           ;Config register CONFIG5L @ 0x300008
  1887                           ;	Code Protection bit
  1888                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1889                           ;	Code Protection bit
  1890                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1891                           ;	Code Protection bit
  1892                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1893                           ;	Code Protection bit
  1894                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1895   300008                     	org	3145736
  1896   300008  0F                 	db	15
  1897                           
  1898                           ;Config register CONFIG5H @ 0x300009
  1899                           ;	Boot Block Code Protection bit
  1900                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1901                           ;	Data EEPROM Code Protection bit
  1902                           ;	CPD = OFF, Data EEPROM not code-protected
  1903   300009                     	org	3145737
  1904   300009  C0                 	db	192
  1905                           
  1906                           ;Config register CONFIG6L @ 0x30000A
  1907                           ;	Write Protection bit
  1908                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1909                           ;	Write Protection bit
  1910                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1911                           ;	Write Protection bit
  1912                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1913                           ;	Write Protection bit
  1914                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1915   30000A                     	org	3145738
  1916   30000A  0F                 	db	15
  1917                           
  1918                           ;Config register CONFIG6H @ 0x30000B
  1919                           ;	Configuration Register Write Protection bit
  1920                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1921                           ;	Boot Block Write Protection bit
  1922                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1923                           ;	Data EEPROM Write Protection bit
  1924                           ;	WRTD = OFF, Data EEPROM not write-protected
  1925   30000B                     	org	3145739
  1926   30000B  E0                 	db	224
  1927                           
  1928                           ;Config register CONFIG7L @ 0x30000C
  1929                           ;	Table Read Protection bit
  1930                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1931                           ;	Table Read Protection bit
  1932                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1933                           ;	Table Read Protection bit
  1934                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1935                           ;	Table Read Protection bit
  1936                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1937   30000C                     	org	3145740
  1938   30000C  0F                 	db	15
  1939                           
  1940                           ;Config register CONFIG7H @ 0x30000D
  1941                           ;	Boot Block Table Read Protection bit
  1942                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1943   30000D                     	org	3145741
  1944   30000D  40                 	db	64
  1945                           tosu	equ	0xFFF
  1946                           tosh	equ	0xFFE
  1947                           tosl	equ	0xFFD
  1948                           stkptr	equ	0xFFC
  1949                           pclatu	equ	0xFFB
  1950                           pclath	equ	0xFFA
  1951                           pcl	equ	0xFF9
  1952                           tblptru	equ	0xFF8
  1953                           tblptrh	equ	0xFF7
  1954                           tblptrl	equ	0xFF6
  1955                           tablat	equ	0xFF5
  1956                           prodh	equ	0xFF4
  1957                           prodl	equ	0xFF3
  1958                           indf0	equ	0xFEF
  1959                           postinc0	equ	0xFEE
  1960                           postdec0	equ	0xFED
  1961                           preinc0	equ	0xFEC
  1962                           plusw0	equ	0xFEB
  1963                           fsr0h	equ	0xFEA
  1964                           fsr0l	equ	0xFE9
  1965                           wreg	equ	0xFE8
  1966                           indf1	equ	0xFE7
  1967                           postinc1	equ	0xFE6
  1968                           postdec1	equ	0xFE5
  1969                           preinc1	equ	0xFE4
  1970                           plusw1	equ	0xFE3
  1971                           fsr1h	equ	0xFE2
  1972                           fsr1l	equ	0xFE1
  1973                           bsr	equ	0xFE0
  1974                           indf2	equ	0xFDF
  1975                           postinc2	equ	0xFDE
  1976                           postdec2	equ	0xFDD
  1977                           preinc2	equ	0xFDC
  1978                           plusw2	equ	0xFDB
  1979                           fsr2h	equ	0xFDA
  1980                           fsr2l	equ	0xFD9
  1981                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        46
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     20      74
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_initialize@_pin_config	PTR struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_1$lcd_en(COMRAM[1]), lcd_1$lcd_rs(COMRAM[1]), 
		 -> lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), lcd_2$lcd_en(COMRAM[1]), lcd_2$lcd_rs(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_1$lcd_en(COMRAM[1]), lcd_1$lcd_rs(COMRAM[1]), 
		 -> lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), lcd_2$lcd_en(COMRAM[1]), lcd_2$lcd_rs(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR struct . size(1) Largest target is 10
		 -> lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_1$lcd_en(COMRAM[1]), lcd_1$lcd_rs(COMRAM[1]), 
		 -> lcd_2(COMRAM[10]), lcd_2$lcd_data(COMRAM[8]), lcd_2$lcd_en(COMRAM[1]), lcd_2$lcd_rs(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), 
		 -> relay_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S1240$buffer	PTR unsigned char  size(2) Largest target is 0

    S1240$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _ecu_layer_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   44659
                           _app_init
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0   44659
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   44659
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  4     3      1   19401
                                             16 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_command                                6     4      2   12382
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (5) _lcd_8bit_send_enable_signal                          2     1      1    5135
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  4     3      1   25255
                                             14 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_command                                3     1      2   18236
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bits                                       3     1      2    5725
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _lcd_4bit_send_enable_signal                          2     1      1    5287
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  3     2      1    6552
                                              8 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (6) _gpio_pin_write_logic                                 8     6      2    4891
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     6      1     939
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     14      4A       1       58.3%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A      39        0.0%
DATA                 0      0      4A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 12 16:37:34 2023

                         ?_lcd_send_4bits 0037                                       l301 1696  
                                     l215 113A                                       l234 124A  
                                     l332 1402                                       l167 1684  
                                     l248 1596                                       l424 14E6  
                                     l337 1542                                       l444 15D2  
                                     l429 160E                                       l295 168A  
                                     l384 1478                                       l296 168A  
                                     l377 1326                                       _ret 0043  
     __end_of_lcd_4bit_send_enable_signal 1610               _lcd_4bit_send_enable_signal 15D4  
                     led_initialize@F3058 004A                     relay_initialize@F3052 0046  
                                     wreg 0FE8               lcd_send_4bits@_data_command 0038  
                                    l2100 15B0                                      l2030 113C  
                                    l2110 1554                                      l2102 15BC  
                                    l2032 1150                                      l2112 1574  
                                    l2120 14E8                                      l2104 15D0  
                                    l2200 1260                                      l2042 121E  
                                    l2034 1170                                      l2114 157C  
                                    l2122 14F8                                      l2130 1404  
                                    l2210 127C                                      l2202 1264  
                                    l2060 10A8                                      l2052 1016  
                                    l2036 1178                                      l2044 1248  
                                    l2116 1594                                      l2108 1544  
                                    l2124 1500                                      l2132 1418  
                                    l2220 12B6                                      l2212 1288  
                                    l2204 1278                                      l2054 102A  
                                    l2038 11CE                                      l2126 1540  
                                    l2142 1430                                      l2150 1476  
                                    l2134 1420                                      l2230 12F2  
                                    l2222 12BC                                      l2214 128A  
                                    l2064 10F8                                      l2056 104A  
                                    l2080 14E4                                      l2160 1354  
                                    l2144 145A                                      l2136 142C  
                                    l2232 12FE                                      l2224 12CE  
                                    l2216 129A                                      l2058 1052  
                                    l2066 1138                                      l2090 15F8  
                                    l2074 147A                                      l2170 1366  
                                    l2154 1328                                      l2146 145C  
                                    l2234 130A                                      l2226 12DA  
                                    l2218 12AA                                      l2242 1674  
                                    l2092 160C                                      l2084 15D4  
                                    l2076 148A                                      l2180 13AA  
                                    l2172 1376                                      l2156 133C  
                                    l2148 146C                                      l2236 1316  
                                    l2228 12E6                                      l2244 1674  
                                    l2086 15E4                                      l2078 1492  
                                    l2190 13E6                                      l2182 13B6  
                                    l2174 1386                                      l2166 1358  
                                    l2158 1340                                      l2238 1324  
                                    l2246 167C                                      l2088 15EC  
                                    l2192 13F2                                      l2184 13C2  
                                    l2176 1392                                      l2168 1364  
                                    l2096 1598                                      l2194 1400  
                                    l2186 13CE                                      l2178 1398  
                                    l2098 15A8                                      l2188 13DA  
                                    l2198 124C                                      l2286 1692  
                                    l2732 1232                                      l2734 1122  
                                    l2578 1686                                      STR_1 1011  
                                    u1000 1150                                      u1001 114C  
                                    u1010 1170                                      u1011 116C  
                                    u1100 148A                                      u1101 1486  
                                    u1110 15E4                                      u1111 15E0  
                                    u1040 102A                                      u1024 1196  
                                    u1200 1376                                      u1120 15A8  
                                    u1041 1026                                      u1025 1192  
                                    u1201 1372                                      u1121 15A4  
                                    u1050 104A                                      u1034 11EC  
                                    u1130 1554                                      u1210 1260  
                                    u1051 1046                                      u1035 11E8  
                                    u1131 1550                                      u1211 125C  
                                    u1140 1574                                      u1220 129A  
                                    u1141 1570                                      u1221 1296  
                                    u1150 14F8                                      u1151 14F4  
                                    u1080 110E                                      u1064 1070  
                                    u1160 1418                                      u1081 1108  
                                    u1065 106C                                      u1161 1414  
                                    u1090 1110                                      u1074 10C6  
                                    u1075 10C2                                      u1180 146C  
                                    u1181 1468                                      _LATA 0F89  
                                    u1190 133C                                      u1174 144A  
                                    _LATB 0F8A                                      u1191 1338  
                                    u1175 1446                                      _LATC 0F8B  
                                    _LATD 0F8C                                      _LATE 0F8D  
                                    u1707 12A0                                      u1717 12CA  
                                    u1727 137C                                      u1737 13A6  
           ??_lcd_4bit_send_enable_signal 0038                                      _main 1686  
                                    fsr2h 0FDA                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    prodl 0FF3                                      start 0000  
           __end_of_lcd_8bit_send_command 147A                              ___param_bank 0000  
                   _lcd_4bit_send_command 14E8                      _gpio_pin_write_logic 113C  
                                   ?_main 002F                       relay_turn_off@F3062 0044  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
                                   _lcd_1 0029                                     _lcd_2 001F  
                                   tablat 0FF5                                     status 0FD8  
          ?_gpio_pin_direction_initialize 002F                           __initialization 1610  
                            __end_of_main 1692                     ?_gpio_pin_write_logic 002F  
                           _lat_registers 000B                                    ??_main 0043  
                           __activetblptr 0002                          led_turn_on@F3063 0049  
                        __end_of_app_init 1698                    ?_lcd_4bit_send_command 003A  
                                  clear_0 1636                                    isa$std 0001  
                            __pdataCOMRAM 0001                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                                __accesstop 0080  
                 __end_of__initialization 163C                             ___rparam_used 0001  
                        ??_lcd_send_4bits 0039                    ??_gpio_pin_write_logic 0031  
                          __pcstackCOMRAM 002F                  lcd_4bit_send_command@lcd 003A  
                lcd_4bit_send_command@ret 003C  gpio_pin_direction_initialize@_pin_config 002F  
                  lcd_8bit_initialize@lcd 003F                    lcd_8bit_initialize@ret 0042  
                       led_turn_off@F3068 0048                      led_turn_toggle@F3073 0047  
     __end_of_lcd_8bit_send_enable_signal 15D4               _lcd_8bit_send_enable_signal 1598  
                               ?_app_init 002F                                _btn_values 1001  
          lcd_8bit_send_enable_signal@lcd 0037            lcd_8bit_send_enable_signal@ret 0038  
                          _tris_registers 0015             ??_lcd_8bit_send_enable_signal 0038  
  lcd_8bit_initialize@l_data_pins_counter 0041    lcd_4bit_initialize@l_data_pins_counter 003F  
                                 __Hparam 0000                                   __Lparam 0000  
                     _gpio_pin_initialize 1544                     _lcd_8bit_send_command 1404  
                            __psmallconst 1000                                   __pcinit 1610  
                                 __ramtop 1000                                   __ptext0 1686  
                                 __ptext1 1692                                   __ptext2 1674  
                                 __ptext3 124C                                   __ptext4 1404  
                                 __ptext5 1598                                   __ptext6 1328  
                                 __ptext7 14E8                                   __ptext8 147A  
                                 __ptext9 15D4           ??_gpio_pin_direction_initialize 0030  
                    ?_gpio_pin_initialize 0037                                ??_app_init 0043  
                    end_of_initialization 163C                         lcd_send_4bits@lcd 0037  
                       lcd_send_4bits@ret 0039                             __Lmediumconst 0000  
                 ??_lcd_4bit_send_command 003C                                   postdec1 0FE5  
                                 postdec2 0FDD                                   postinc0 0FEE  
                                 postinc2 0FDE                       _lcd_4bit_initialize 1328  
                   ??_gpio_pin_initialize 0038                      ?_lcd_4bit_initialize 003D  
                      relay_turn_on@F3057 0045                    ?_lcd_8bit_send_command 0039  
                           __pidataCOMRAM 1646                       start_initialization 1610  
            ?_lcd_4bit_send_enable_signal 0037                       _lcd_8bit_initialize 124C  
   __end_of_gpio_pin_direction_initialize 113C             _gpio_pin_direction_initialize 1016  
                   ??_lcd_4bit_initialize 003E                      ?_lcd_8bit_initialize 003F  
            __end_of_ecu_layer_initialize 1686              lcd_4bit_send_command@command 003B  
                lcd_8bit_send_command@lcd 0039                  lcd_8bit_send_command@cnt 003E  
                lcd_8bit_send_command@ret 003D                               __pbssCOMRAM 0043  
                   ??_lcd_8bit_initialize 0040           gpio_pin_write_logic@_pin_config 002F  
               gpio_pin_write_logic@logic 0030                               __smallconst 1000  
           __end_of_lcd_4bit_send_command 1544          gpio_pin_direction_initialize@ret 0035  
                  gpio_pin_initialize@ret 0039                   gpio_pin_write_logic@ret 0036  
                               copy_data0 1624                      _ecu_layer_initialize 1674  
                 ??_lcd_8bit_send_command 003B                                  __Hrparam 0000  
                                __Lrparam 0000               __end_of_gpio_pin_initialize 1598  
                      __end_of_btn_values 1011            gpio_pin_initialize@_pin_config 0037  
                                __ptext10 1544                                  __ptext11 113C  
                                __ptext12 1016                                  _app_init 1692  
                   ?_ecu_layer_initialize 002F                                  isa$xinst 0000  
                          _lcd_send_4bits 147A               __end_of_lcd_4bit_initialize 1404  
            __end_of_gpio_pin_write_logic 124C              ?_lcd_8bit_send_enable_signal 0037  
          lcd_4bit_send_enable_signal@lcd 0037            lcd_4bit_send_enable_signal@ret 0038  
                  __end_of_lcd_send_4bits 14E8                            _port_registers 0001  
                  ??_ecu_layer_initialize 0043               __end_of_lcd_8bit_initialize 1328  
            lcd_8bit_send_command@command 003A                    lcd_4bit_initialize@lcd 003D  
                  lcd_4bit_initialize@ret 0040  
